// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    public unsafe partial class CNWBaseItem : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 216)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal uint m_nName;

            [FieldOffset(4)]
            internal uint m_nEquipableSlots;

            [FieldOffset(8)]
            internal byte m_nWeaponWield;

            [FieldOffset(9)]
            internal byte m_nWeaponType;

            [FieldOffset(12)]
            internal uint m_nMinRange;

            [FieldOffset(16)]
            internal uint m_nMaxRange;

            [FieldOffset(20)]
            internal byte m_nInvSlotWidth;

            [FieldOffset(21)]
            internal byte m_nInvSlotHeight;

            [FieldOffset(22)]
            internal byte m_nModelType;

            [FieldOffset(23)]
            internal byte m_nStartingCharges;

            [FieldOffset(24)]
            internal byte m_nWeaponRanged;

            [FieldOffset(25)]
            internal byte m_nWeaponSize;

            [FieldOffset(26)]
            internal byte m_nNumDice;

            [FieldOffset(27)]
            internal byte m_nDieToRoll;

            [FieldOffset(28)]
            internal byte m_nCritThreat;

            [FieldOffset(29)]
            internal byte m_nCritMult;

            [FieldOffset(30)]
            internal byte m_nCategory;

            [FieldOffset(32)]
            internal float m_nBaseCost;

            [FieldOffset(36)]
            internal ushort m_nStackSize;

            [FieldOffset(40)]
            internal float m_nCostMultiplier;

            [FieldOffset(44)]
            internal uint m_nDescription;

            [FieldOffset(48)]
            internal byte m_nMinProperties;

            [FieldOffset(49)]
            internal byte m_nMaxProperties;

            [FieldOffset(50)]
            internal byte m_nPropColumn;

            [FieldOffset(51)]
            internal byte m_nStorePanel;

            [FieldOffset(52)]
            internal byte m_nStorePanelSort;

            [FieldOffset(53)]
            internal byte m_nPercentageSlashL;

            [FieldOffset(54)]
            internal byte m_nPercentageSlashR;

            [FieldOffset(55)]
            internal byte m_nPercentageSlashS;

            [FieldOffset(56)]
            internal byte m_nILRStackSize;

            [FieldOffset(60)]
            internal float m_fPreferredAttackDist;

            [FieldOffset(64)]
            internal fixed sbyte m_ItemClassResRefChunk[11];

            [FieldOffset(76)]
            internal fixed int m_bPartEnvMap[3];

            [FieldOffset(88)]
            internal global::NWN.LowLevel.CResRef.__Internal m_DefaultIconResRef;

            [FieldOffset(120)]
            internal global::NWN.LowLevel.CResRef.__Internal m_DefaultModelResRef;

            [FieldOffset(152)]
            internal int m_bCanRotateIcon;

            [FieldOffset(156)]
            internal int m_bContainer;

            [FieldOffset(160)]
            internal int m_bGenderSpecific;

            [FieldOffset(164)]
            internal byte m_InventorySoundType;

            [FieldOffset(168)]
            internal __IntPtr m_pRequiredFeats;

            [FieldOffset(176)]
            internal byte m_nRequiredFeatCount;

            [FieldOffset(180)]
            internal uint m_nStatsString;

            [FieldOffset(184)]
            internal byte m_nRotateOnGround;

            [FieldOffset(188)]
            internal int m_nWeight;

            [FieldOffset(192)]
            internal byte m_nBaseAC;

            [FieldOffset(193)]
            internal byte m_nACEnchantmentType;

            [FieldOffset(194)]
            internal byte m_nWeaponMaterialType;

            [FieldOffset(195)]
            internal sbyte m_nArmorCheckPenalty;

            [FieldOffset(196)]
            internal sbyte m_nAmmunitionType;

            [FieldOffset(197)]
            internal byte m_nQBBehaviourType;

            [FieldOffset(198)]
            internal byte m_nArcaneSpellFailure;

            [FieldOffset(200)]
            internal ushort m_nWeaponFocusFeat;

            [FieldOffset(202)]
            internal ushort m_nEpicWeaponFocusFeat;

            [FieldOffset(204)]
            internal ushort m_nWeaponSpecializationFeat;

            [FieldOffset(206)]
            internal ushort m_nEpicWeaponSpecializationFeat;

            [FieldOffset(208)]
            internal ushort m_nWeaponImprovedCriticalFeat;

            [FieldOffset(210)]
            internal ushort m_nEpicWeaponOverwhelmingCriticalFeat;

            [FieldOffset(212)]
            internal ushort m_nEpicWeaponDevastatingCriticalFeat;

            [FieldOffset(214)]
            internal ushort m_nWeaponOfChoiceFeat;

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWBaseItemC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctor(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWBaseItemC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWBaseItemD2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtor(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWBaseItem14GetModelResRefEhsc", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetModelResRef(__IntPtr @return, __IntPtr __instance, byte nPart, short nModelNumber, sbyte nGender);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWBaseItem13GetIconResRefEhsc", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetIconResRef(__IntPtr @return, __IntPtr __instance, byte nPart, short nModelNumber, sbyte nGender);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWBaseItem15GetRequiredFeatEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetRequiredFeat(__IntPtr __instance, byte nReqFeatIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWBaseItem15SetRequiredFeatEht", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetRequiredFeat(__IntPtr __instance, byte nReqFeatIndex, ushort nFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWBaseItem20SetRequiredFeatCountEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetRequiredFeatCount(__IntPtr __instance, byte nReqFeatCount);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWBaseItem11GetNameTextEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetNameText(__IntPtr @return, __IntPtr __instance);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CNWBaseItem> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CNWBaseItem>();

        protected bool __ownsNativeInstance;

        internal static CNWBaseItem __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new CNWBaseItem(native.ToPointer(), skipVTables);
        }

        internal static CNWBaseItem __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (CNWBaseItem)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static CNWBaseItem __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new CNWBaseItem(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private CNWBaseItem(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CNWBaseItem(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public CNWBaseItem()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWBaseItem.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            __Internal.ctor(__Instance);
        }

        public CNWBaseItem(global::NWN.LowLevel.CNWBaseItem _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWBaseItem.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::NWN.LowLevel.CNWBaseItem.__Internal*) __Instance) = *((global::NWN.LowLevel.CNWBaseItem.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::NWN.LowLevel.CNWBaseItem __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (disposing)
                __Internal.dtor(__Instance);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::NWN.LowLevel.CResRef GetModelResRef(byte nPart, short nModelNumber, sbyte nGender)
        {
            var __ret = new global::NWN.LowLevel.CResRef.__Internal();
            __Internal.GetModelResRef(new IntPtr(&__ret), __Instance, nPart, nModelNumber, nGender);
            return global::NWN.LowLevel.CResRef.__CreateInstance(__ret);
        }

        public global::NWN.LowLevel.CResRef GetIconResRef(byte nPart, short nModelNumber, sbyte nGender)
        {
            var __ret = new global::NWN.LowLevel.CResRef.__Internal();
            __Internal.GetIconResRef(new IntPtr(&__ret), __Instance, nPart, nModelNumber, nGender);
            return global::NWN.LowLevel.CResRef.__CreateInstance(__ret);
        }

        public ushort GetRequiredFeat(byte nReqFeatIndex)
        {
            var __ret = __Internal.GetRequiredFeat(__Instance, nReqFeatIndex);
            return __ret;
        }

        public void SetRequiredFeat(byte nReqFeatIndex, ushort nFeat)
        {
            __Internal.SetRequiredFeat(__Instance, nReqFeatIndex, nFeat);
        }

        public void SetRequiredFeatCount(byte nReqFeatCount)
        {
            __Internal.SetRequiredFeatCount(__Instance, nReqFeatCount);
        }

        public uint MNName
        {
            get
            {
                return ((__Internal*)__Instance)->m_nName;
            }

            set
            {
                ((__Internal*)__Instance)->m_nName = value;
            }
        }

        public uint MNEquipableSlots
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEquipableSlots;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEquipableSlots = value;
            }
        }

        public byte MNWeaponWield
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWeaponWield;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWeaponWield = value;
            }
        }

        public byte MNWeaponType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWeaponType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWeaponType = value;
            }
        }

        public uint MNMinRange
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMinRange;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMinRange = value;
            }
        }

        public uint MNMaxRange
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMaxRange;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMaxRange = value;
            }
        }

        public byte MNInvSlotWidth
        {
            get
            {
                return ((__Internal*)__Instance)->m_nInvSlotWidth;
            }

            set
            {
                ((__Internal*)__Instance)->m_nInvSlotWidth = value;
            }
        }

        public byte MNInvSlotHeight
        {
            get
            {
                return ((__Internal*)__Instance)->m_nInvSlotHeight;
            }

            set
            {
                ((__Internal*)__Instance)->m_nInvSlotHeight = value;
            }
        }

        public byte MNModelType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nModelType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nModelType = value;
            }
        }

        public byte MNStartingCharges
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStartingCharges;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStartingCharges = value;
            }
        }

        public byte MNWeaponRanged
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWeaponRanged;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWeaponRanged = value;
            }
        }

        public byte MNWeaponSize
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWeaponSize;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWeaponSize = value;
            }
        }

        public byte MNNumDice
        {
            get
            {
                return ((__Internal*)__Instance)->m_nNumDice;
            }

            set
            {
                ((__Internal*)__Instance)->m_nNumDice = value;
            }
        }

        public byte MNDieToRoll
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDieToRoll;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDieToRoll = value;
            }
        }

        public byte MNCritThreat
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCritThreat;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCritThreat = value;
            }
        }

        public byte MNCritMult
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCritMult;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCritMult = value;
            }
        }

        public byte MNCategory
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCategory;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCategory = value;
            }
        }

        public float MNBaseCost
        {
            get
            {
                return ((__Internal*)__Instance)->m_nBaseCost;
            }

            set
            {
                ((__Internal*)__Instance)->m_nBaseCost = value;
            }
        }

        public ushort MNStackSize
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStackSize;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStackSize = value;
            }
        }

        public float MNCostMultiplier
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCostMultiplier;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCostMultiplier = value;
            }
        }

        public uint MNDescription
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDescription;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDescription = value;
            }
        }

        public byte MNMinProperties
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMinProperties;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMinProperties = value;
            }
        }

        public byte MNMaxProperties
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMaxProperties;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMaxProperties = value;
            }
        }

        public byte MNPropColumn
        {
            get
            {
                return ((__Internal*)__Instance)->m_nPropColumn;
            }

            set
            {
                ((__Internal*)__Instance)->m_nPropColumn = value;
            }
        }

        public byte MNStorePanel
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStorePanel;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStorePanel = value;
            }
        }

        public byte MNStorePanelSort
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStorePanelSort;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStorePanelSort = value;
            }
        }

        public byte MNPercentageSlashL
        {
            get
            {
                return ((__Internal*)__Instance)->m_nPercentageSlashL;
            }

            set
            {
                ((__Internal*)__Instance)->m_nPercentageSlashL = value;
            }
        }

        public byte MNPercentageSlashR
        {
            get
            {
                return ((__Internal*)__Instance)->m_nPercentageSlashR;
            }

            set
            {
                ((__Internal*)__Instance)->m_nPercentageSlashR = value;
            }
        }

        public byte MNPercentageSlashS
        {
            get
            {
                return ((__Internal*)__Instance)->m_nPercentageSlashS;
            }

            set
            {
                ((__Internal*)__Instance)->m_nPercentageSlashS = value;
            }
        }

        public byte MNILRStackSize
        {
            get
            {
                return ((__Internal*)__Instance)->m_nILRStackSize;
            }

            set
            {
                ((__Internal*)__Instance)->m_nILRStackSize = value;
            }
        }

        public float MFPreferredAttackDist
        {
            get
            {
                return ((__Internal*)__Instance)->m_fPreferredAttackDist;
            }

            set
            {
                ((__Internal*)__Instance)->m_fPreferredAttackDist = value;
            }
        }

        public sbyte[] MItemClassResRefChunk
        {
            get
            {
                return CppSharp.Runtime.MarshalUtil.GetArray<sbyte>(((__Internal*)__Instance)->m_ItemClassResRefChunk, 11);
            }

            set
            {
                if (value != null)
                {
                    for (int i = 0; i < 11; i++)
                        ((__Internal*)__Instance)->m_ItemClassResRefChunk[i] = value[i];
                }
            }
        }

        public int[] MBPartEnvMap
        {
            get
            {
                return CppSharp.Runtime.MarshalUtil.GetArray<int>(((__Internal*)__Instance)->m_bPartEnvMap, 3);
            }

            set
            {
                if (value != null)
                {
                    for (int i = 0; i < 3; i++)
                        ((__Internal*)__Instance)->m_bPartEnvMap[i] = value[i];
                }
            }
        }

        public global::NWN.LowLevel.CResRef MDefaultIconResRef
        {
            get
            {
                return global::NWN.LowLevel.CResRef.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_DefaultIconResRef));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_DefaultIconResRef = *(global::NWN.LowLevel.CResRef.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CResRef MDefaultModelResRef
        {
            get
            {
                return global::NWN.LowLevel.CResRef.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_DefaultModelResRef));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_DefaultModelResRef = *(global::NWN.LowLevel.CResRef.__Internal*) value.__Instance;
            }
        }

        public int MBCanRotateIcon
        {
            get
            {
                return ((__Internal*)__Instance)->m_bCanRotateIcon;
            }

            set
            {
                ((__Internal*)__Instance)->m_bCanRotateIcon = value;
            }
        }

        public int MBContainer
        {
            get
            {
                return ((__Internal*)__Instance)->m_bContainer;
            }

            set
            {
                ((__Internal*)__Instance)->m_bContainer = value;
            }
        }

        public int MBGenderSpecific
        {
            get
            {
                return ((__Internal*)__Instance)->m_bGenderSpecific;
            }

            set
            {
                ((__Internal*)__Instance)->m_bGenderSpecific = value;
            }
        }

        public byte MInventorySoundType
        {
            get
            {
                return ((__Internal*)__Instance)->m_InventorySoundType;
            }

            set
            {
                ((__Internal*)__Instance)->m_InventorySoundType = value;
            }
        }

        public ushort* MPRequiredFeats
        {
            get
            {
                return (ushort*) ((__Internal*)__Instance)->m_pRequiredFeats;
            }

            set
            {
                ((__Internal*)__Instance)->m_pRequiredFeats = (__IntPtr) value;
            }
        }

        public byte MNRequiredFeatCount
        {
            get
            {
                return ((__Internal*)__Instance)->m_nRequiredFeatCount;
            }

            set
            {
                ((__Internal*)__Instance)->m_nRequiredFeatCount = value;
            }
        }

        public uint MNStatsString
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStatsString;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStatsString = value;
            }
        }

        public byte MNRotateOnGround
        {
            get
            {
                return ((__Internal*)__Instance)->m_nRotateOnGround;
            }

            set
            {
                ((__Internal*)__Instance)->m_nRotateOnGround = value;
            }
        }

        public int MNWeight
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWeight;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWeight = value;
            }
        }

        public byte MNBaseAC
        {
            get
            {
                return ((__Internal*)__Instance)->m_nBaseAC;
            }

            set
            {
                ((__Internal*)__Instance)->m_nBaseAC = value;
            }
        }

        public byte MNACEnchantmentType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACEnchantmentType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACEnchantmentType = value;
            }
        }

        public byte MNWeaponMaterialType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWeaponMaterialType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWeaponMaterialType = value;
            }
        }

        public sbyte MNArmorCheckPenalty
        {
            get
            {
                return ((__Internal*)__Instance)->m_nArmorCheckPenalty;
            }

            set
            {
                ((__Internal*)__Instance)->m_nArmorCheckPenalty = value;
            }
        }

        public sbyte MNAmmunitionType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAmmunitionType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAmmunitionType = value;
            }
        }

        public byte MNQBBehaviourType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nQBBehaviourType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nQBBehaviourType = value;
            }
        }

        public byte MNArcaneSpellFailure
        {
            get
            {
                return ((__Internal*)__Instance)->m_nArcaneSpellFailure;
            }

            set
            {
                ((__Internal*)__Instance)->m_nArcaneSpellFailure = value;
            }
        }

        public ushort MNWeaponFocusFeat
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWeaponFocusFeat;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWeaponFocusFeat = value;
            }
        }

        public ushort MNEpicWeaponFocusFeat
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEpicWeaponFocusFeat;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEpicWeaponFocusFeat = value;
            }
        }

        public ushort MNWeaponSpecializationFeat
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWeaponSpecializationFeat;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWeaponSpecializationFeat = value;
            }
        }

        public ushort MNEpicWeaponSpecializationFeat
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEpicWeaponSpecializationFeat;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEpicWeaponSpecializationFeat = value;
            }
        }

        public ushort MNWeaponImprovedCriticalFeat
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWeaponImprovedCriticalFeat;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWeaponImprovedCriticalFeat = value;
            }
        }

        public ushort MNEpicWeaponOverwhelmingCriticalFeat
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEpicWeaponOverwhelmingCriticalFeat;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEpicWeaponOverwhelmingCriticalFeat = value;
            }
        }

        public ushort MNEpicWeaponDevastatingCriticalFeat
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEpicWeaponDevastatingCriticalFeat;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEpicWeaponDevastatingCriticalFeat = value;
            }
        }

        public ushort MNWeaponOfChoiceFeat
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWeaponOfChoiceFeat;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWeaponOfChoiceFeat = value;
            }
        }

        public global::NWN.LowLevel.CExoString NameText
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CExoString.__Internal();
                __Internal.GetNameText(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
            }
        }
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
