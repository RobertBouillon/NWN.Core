// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    public unsafe partial class CNWRace : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 104)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal int m_nNameStrref;

            [FieldOffset(4)]
            internal int m_nConverNameStrref;

            [FieldOffset(8)]
            internal int m_nConverNameLowerStrref;

            [FieldOffset(12)]
            internal int m_nNamePluralStrref;

            [FieldOffset(16)]
            internal int m_nDescriptionStrref;

            [FieldOffset(20)]
            internal int m_nDefaultBiographyStrref;

            [FieldOffset(24)]
            internal sbyte m_nSTRAdjust;

            [FieldOffset(25)]
            internal sbyte m_nDEXAdjust;

            [FieldOffset(26)]
            internal sbyte m_nINTAdjust;

            [FieldOffset(27)]
            internal sbyte m_nCHAAdjust;

            [FieldOffset(28)]
            internal sbyte m_nWISAdjust;

            [FieldOffset(29)]
            internal sbyte m_nCONAdjust;

            [FieldOffset(30)]
            internal byte m_nEndurance;

            [FieldOffset(31)]
            internal byte m_nFavoredClass;

            [FieldOffset(32)]
            internal int m_bIsPlayerRace;

            [FieldOffset(36)]
            internal ushort m_nNumFeats;

            [FieldOffset(40)]
            internal __IntPtr m_lstFeatTable;

            [FieldOffset(48)]
            internal int m_nAge;

            [FieldOffset(52)]
            internal ushort m_nDefaultAppearance;

            [FieldOffset(56)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sIcon;

            [FieldOffset(72)]
            internal int m_nExtraFeatsAtFirstLevel;

            [FieldOffset(76)]
            internal int m_nExtraSkillPointsPerLevel;

            [FieldOffset(80)]
            internal int m_nFirstLevelSkillPointsMultiplier;

            [FieldOffset(84)]
            internal int m_nAbilitiesPointBuyNumber;

            [FieldOffset(88)]
            internal int m_nNormalFeatEveryNthLevel;

            [FieldOffset(92)]
            internal int m_nNumberNormalFeatsEveryNthLevel;

            [FieldOffset(96)]
            internal int m_nSkillPointModifierAbility;

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRaceC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctor(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRaceC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRaceD2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtor(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRace16GetAbilityAdjustEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetAbilityAdjust(__IntPtr __instance, byte nAbilityId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRace23IsFirstLevelGrantedFeatEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsFirstLevelGrantedFeat(__IntPtr __instance, ushort nFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRace14LoadFeatsTableE10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadFeatsTable(__IntPtr __instance, __IntPtr sTable);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRace11GetNameTextEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetNameText(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRace17GetConverNameTextEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetConverNameText(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRace22GetConverNameLowerTextEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetConverNameLowerText(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRace17GetNamePluralTextEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetNamePluralText(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRace18GetDescriptionTextEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetDescriptionText(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7CNWRace23GetDefaultBiographyTextEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetDefaultBiographyText(__IntPtr @return, __IntPtr __instance);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CNWRace> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CNWRace>();

        protected bool __ownsNativeInstance;

        internal static CNWRace __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new CNWRace(native.ToPointer(), skipVTables);
        }

        internal static CNWRace __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (CNWRace)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static CNWRace __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new CNWRace(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            global::NWN.LowLevel.CNWRace.__Internal.cctor(ret, new __IntPtr(&native));
            return ret.ToPointer();
        }

        private CNWRace(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CNWRace(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public CNWRace()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWRace.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            __Internal.ctor(__Instance);
        }

        public CNWRace(global::NWN.LowLevel.CNWRace _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWRace.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            if (ReferenceEquals(_0, null))
                throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = _0.__Instance;
            __Internal.cctor(__Instance, __arg0);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::NWN.LowLevel.CNWRace __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (disposing)
                __Internal.dtor(__Instance);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public sbyte GetAbilityAdjust(byte nAbilityId)
        {
            var __ret = __Internal.GetAbilityAdjust(__Instance, nAbilityId);
            return __ret;
        }

        public int IsFirstLevelGrantedFeat(ushort nFeat)
        {
            var __ret = __Internal.IsFirstLevelGrantedFeat(__Instance, nFeat);
            return __ret;
        }

        public void LoadFeatsTable(global::NWN.LowLevel.CExoString sTable)
        {
            if (ReferenceEquals(sTable, null))
                throw new global::System.ArgumentNullException("sTable", "Cannot be null because it is passed by value.");
            var __arg0 = sTable.__Instance;
            __Internal.LoadFeatsTable(__Instance, __arg0);
        }

        public int MNNameStrref
        {
            get
            {
                return ((__Internal*)__Instance)->m_nNameStrref;
            }

            set
            {
                ((__Internal*)__Instance)->m_nNameStrref = value;
            }
        }

        public int MNConverNameStrref
        {
            get
            {
                return ((__Internal*)__Instance)->m_nConverNameStrref;
            }

            set
            {
                ((__Internal*)__Instance)->m_nConverNameStrref = value;
            }
        }

        public int MNConverNameLowerStrref
        {
            get
            {
                return ((__Internal*)__Instance)->m_nConverNameLowerStrref;
            }

            set
            {
                ((__Internal*)__Instance)->m_nConverNameLowerStrref = value;
            }
        }

        public int MNNamePluralStrref
        {
            get
            {
                return ((__Internal*)__Instance)->m_nNamePluralStrref;
            }

            set
            {
                ((__Internal*)__Instance)->m_nNamePluralStrref = value;
            }
        }

        public int MNDescriptionStrref
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDescriptionStrref;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDescriptionStrref = value;
            }
        }

        public int MNDefaultBiographyStrref
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDefaultBiographyStrref;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDefaultBiographyStrref = value;
            }
        }

        public sbyte MNSTRAdjust
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSTRAdjust;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSTRAdjust = value;
            }
        }

        public sbyte MNDEXAdjust
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDEXAdjust;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDEXAdjust = value;
            }
        }

        public sbyte MNINTAdjust
        {
            get
            {
                return ((__Internal*)__Instance)->m_nINTAdjust;
            }

            set
            {
                ((__Internal*)__Instance)->m_nINTAdjust = value;
            }
        }

        public sbyte MNCHAAdjust
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCHAAdjust;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCHAAdjust = value;
            }
        }

        public sbyte MNWISAdjust
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWISAdjust;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWISAdjust = value;
            }
        }

        public sbyte MNCONAdjust
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCONAdjust;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCONAdjust = value;
            }
        }

        public byte MNEndurance
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEndurance;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEndurance = value;
            }
        }

        public byte MNFavoredClass
        {
            get
            {
                return ((__Internal*)__Instance)->m_nFavoredClass;
            }

            set
            {
                ((__Internal*)__Instance)->m_nFavoredClass = value;
            }
        }

        public int MBIsPlayerRace
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIsPlayerRace;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIsPlayerRace = value;
            }
        }

        public ushort MNNumFeats
        {
            get
            {
                return ((__Internal*)__Instance)->m_nNumFeats;
            }

            set
            {
                ((__Internal*)__Instance)->m_nNumFeats = value;
            }
        }

        public ushort* MLstFeatTable
        {
            get
            {
                return (ushort*) ((__Internal*)__Instance)->m_lstFeatTable;
            }

            set
            {
                ((__Internal*)__Instance)->m_lstFeatTable = (__IntPtr) value;
            }
        }

        public int MNAge
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAge;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAge = value;
            }
        }

        public ushort MNDefaultAppearance
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDefaultAppearance;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDefaultAppearance = value;
            }
        }

        public global::NWN.LowLevel.CExoString MSIcon
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sIcon));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sIcon = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public int MNExtraFeatsAtFirstLevel
        {
            get
            {
                return ((__Internal*)__Instance)->m_nExtraFeatsAtFirstLevel;
            }

            set
            {
                ((__Internal*)__Instance)->m_nExtraFeatsAtFirstLevel = value;
            }
        }

        public int MNExtraSkillPointsPerLevel
        {
            get
            {
                return ((__Internal*)__Instance)->m_nExtraSkillPointsPerLevel;
            }

            set
            {
                ((__Internal*)__Instance)->m_nExtraSkillPointsPerLevel = value;
            }
        }

        public int MNFirstLevelSkillPointsMultiplier
        {
            get
            {
                return ((__Internal*)__Instance)->m_nFirstLevelSkillPointsMultiplier;
            }

            set
            {
                ((__Internal*)__Instance)->m_nFirstLevelSkillPointsMultiplier = value;
            }
        }

        public int MNAbilitiesPointBuyNumber
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAbilitiesPointBuyNumber;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAbilitiesPointBuyNumber = value;
            }
        }

        public int MNNormalFeatEveryNthLevel
        {
            get
            {
                return ((__Internal*)__Instance)->m_nNormalFeatEveryNthLevel;
            }

            set
            {
                ((__Internal*)__Instance)->m_nNormalFeatEveryNthLevel = value;
            }
        }

        public int MNNumberNormalFeatsEveryNthLevel
        {
            get
            {
                return ((__Internal*)__Instance)->m_nNumberNormalFeatsEveryNthLevel;
            }

            set
            {
                ((__Internal*)__Instance)->m_nNumberNormalFeatsEveryNthLevel = value;
            }
        }

        public int MNSkillPointModifierAbility
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSkillPointModifierAbility;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSkillPointModifierAbility = value;
            }
        }

        public global::NWN.LowLevel.CExoString NameText
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CExoString.__Internal();
                __Internal.GetNameText(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
            }
        }

        public global::NWN.LowLevel.CExoString ConverNameText
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CExoString.__Internal();
                __Internal.GetConverNameText(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
            }
        }

        public global::NWN.LowLevel.CExoString ConverNameLowerText
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CExoString.__Internal();
                __Internal.GetConverNameLowerText(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
            }
        }

        public global::NWN.LowLevel.CExoString NamePluralText
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CExoString.__Internal();
                __Internal.GetNamePluralText(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
            }
        }

        public global::NWN.LowLevel.CExoString DescriptionText
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CExoString.__Internal();
                __Internal.GetDescriptionText(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
            }
        }

        public global::NWN.LowLevel.CExoString DefaultBiographyText
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CExoString.__Internal();
                __Internal.GetDefaultBiographyText(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
            }
        }
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
