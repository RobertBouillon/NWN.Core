// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    namespace CExoArrayList
    {
        [StructLayout(LayoutKind.Explicit, Size = 16)]
        public unsafe partial struct __Internal
        {
            [FieldOffset(0)]
            internal __IntPtr element;

            [FieldOffset(8)]
            internal int num;

            [FieldOffset(12)]
            internal int array_size;

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_CExoString(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_CExoString(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_CExoString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_CExoString(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_CExoString(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_CExoString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_CExoString(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE9AddUniqueES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList____S_CExoString(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE8ContainsES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList____S_CExoString(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_CExoString(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE7IndexOfES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList____S_CExoString(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE6RemoveES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList____S_CExoString(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_CExoString(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI10CExoStringEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_CExoString(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP22CCombatInformationNodeEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CCombatInformationNode(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI9CFileInfoEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_CFileInfo(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI9CFileInfoEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_CFileInfo(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI9CFileInfoED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_CFileInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI9CFileInfoE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_CFileInfo(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI9CFileInfoE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_CFileInfo(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI9CFileInfoE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_CFileInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI9CFileInfoE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_CFileInfo(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI9CFileInfoE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_CFileInfo(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI9CFileInfoE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_CFileInfo(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI9CFileInfoEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_CFileInfo(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP12CExoKeyTableEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CExoKeyTable(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList__I(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiEC2ERKS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList__I(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList__I(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList__I(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList__I(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList__I(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE3AddEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList__I(__IntPtr __instance, int t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE9AddUniqueEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList__I(__IntPtr __instance, int t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE8ContainsEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList__I(__IntPtr __instance, int t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE6InsertEii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList__I(__IntPtr __instance, int t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE7IndexOfEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList__I(__IntPtr __instance, int t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE6RemoveEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList__I(__IntPtr __instance, int t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList__I(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIiEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int* OperatorSubscriptc__S_CExoArrayList__I(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP20CLoopingVisualEffectEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CLoopingVisualEffect(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList__i(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjEC2ERKS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList__i(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList__i(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList__i(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList__i(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList__i(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE3AddEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList__i(__IntPtr __instance, uint t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE9AddUniqueEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList__i(__IntPtr __instance, uint t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE8ContainsEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList__i(__IntPtr __instance, uint t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE6InsertEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList__i(__IntPtr __instance, uint t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE7IndexOfEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList__i(__IntPtr __instance, uint t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE6RemoveEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList__i(__IntPtr __instance, uint t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList__i(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIjEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* OperatorSubscriptc__S_CExoArrayList__i(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI19MaterialShaderParamEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_MaterialShaderParam(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI19MaterialShaderParamEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_MaterialShaderParam(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI19MaterialShaderParamED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_MaterialShaderParam(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI19MaterialShaderParamE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_MaterialShaderParam(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI19MaterialShaderParamE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_MaterialShaderParam(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI19MaterialShaderParamE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_MaterialShaderParam(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI19MaterialShaderParamE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_MaterialShaderParam(__IntPtr __instance, global::NWN.LowLevel.MaterialShaderParam.__Internal t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI19MaterialShaderParamE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_MaterialShaderParam(__IntPtr __instance, global::NWN.LowLevel.MaterialShaderParam.__Internal t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI19MaterialShaderParamE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_MaterialShaderParam(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI19MaterialShaderParamEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_MaterialShaderParam(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18TextureReplaceInfoEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_TextureReplaceInfo(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18TextureReplaceInfoEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_TextureReplaceInfo(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18TextureReplaceInfoED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_TextureReplaceInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18TextureReplaceInfoE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_TextureReplaceInfo(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18TextureReplaceInfoE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_TextureReplaceInfo(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18TextureReplaceInfoE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_TextureReplaceInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18TextureReplaceInfoE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_TextureReplaceInfo(__IntPtr __instance, global::NWN.LowLevel.TextureReplaceInfo.__Internal t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18TextureReplaceInfoE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_TextureReplaceInfo(__IntPtr __instance, global::NWN.LowLevel.TextureReplaceInfo.__Internal t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18TextureReplaceInfoE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_TextureReplaceInfo(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI18TextureReplaceInfoEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_TextureReplaceInfo(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI24CNetLayerPlayerCDKeyInfoEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI24CNetLayerPlayerCDKeyInfoEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI24CNetLayerPlayerCDKeyInfoED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI24CNetLayerPlayerCDKeyInfoE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI24CNetLayerPlayerCDKeyInfoE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI24CNetLayerPlayerCDKeyInfoE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI24CNetLayerPlayerCDKeyInfoE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI24CNetLayerPlayerCDKeyInfoE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI24CNetLayerPlayerCDKeyInfoE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI24CNetLayerPlayerCDKeyInfoEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CGameObject(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CGameObject(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP11CGameObjectEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CGameObject(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList__f(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfEC2ERKS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList__f(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList__f(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList__f(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList__f(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList__f(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE3AddEf", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList__f(__IntPtr __instance, float t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE9AddUniqueEf", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList__f(__IntPtr __instance, float t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE8ContainsEf", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList__f(__IntPtr __instance, float t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE6InsertEfi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList__f(__IntPtr __instance, float t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE7IndexOfEf", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList__f(__IntPtr __instance, float t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE6RemoveEf", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList__f(__IntPtr __instance, float t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList__f(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIfEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern float* OperatorSubscriptc__S_CExoArrayList__f(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList__s(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItEC2ERKS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList__s(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList__s(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList__s(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList__s(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList__s(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE3AddEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList__s(__IntPtr __instance, ushort t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE9AddUniqueEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList__s(__IntPtr __instance, ushort t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE8ContainsEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList__s(__IntPtr __instance, ushort t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE6InsertEti", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList__s(__IntPtr __instance, ushort t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE7IndexOfEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList__s(__IntPtr __instance, ushort t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE6RemoveEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList__s(__IntPtr __instance, ushort t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList__s(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListItEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort* OperatorSubscriptc__S_CExoArrayList__s(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP17CEffectIconObjectEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CEffectIconObject(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP11CGameEffectEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CGameEffect(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP14CNWSExpressionEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CNWSExpression(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CExoString(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CExoString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocate1c__S_CExoArrayList_____S_CExoString(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSize1c__S_CExoArrayList_____S_CExoString(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Pack1c__S_CExoArrayList_____S_CExoString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CExoString(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CExoString(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CExoString(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CExoString(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CExoString(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CExoString(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CExoString(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndex1c__S_CExoArrayList_____S_CExoString(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP10CExoStringEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CExoString(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP19CNWSSpellScriptDataEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CNWSSpellScriptData(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP16CNWCCMessageDataEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CNWCCMessageData(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP17CNWVisibilityNodeEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CNWVisibilityNode(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI22CNWSPersonalReputationEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_CNWSPersonalReputation(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI22CNWSPersonalReputationEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_CNWSPersonalReputation(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI22CNWSPersonalReputationED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_CNWSPersonalReputation(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI22CNWSPersonalReputationE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_CNWSPersonalReputation(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI22CNWSPersonalReputationE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_CNWSPersonalReputation(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI22CNWSPersonalReputationE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_CNWSPersonalReputation(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI22CNWSPersonalReputationE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_CNWSPersonalReputation(__IntPtr __instance, global::NWN.LowLevel.CNWSPersonalReputation.__Internal t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI22CNWSPersonalReputationE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_CNWSPersonalReputation(__IntPtr __instance, global::NWN.LowLevel.CNWSPersonalReputation.__Internal t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI22CNWSPersonalReputationE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_CNWSPersonalReputation(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI22CNWSPersonalReputationEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_CNWSPersonalReputation(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP17CFeatUseListEntryEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CFeatUseListEntry(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP13CNWLevelStatsEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CNWLevelStats(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11ScriptParamEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_ScriptParam(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11ScriptParamEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_ScriptParam(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11ScriptParamED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_ScriptParam(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11ScriptParamE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_ScriptParam(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11ScriptParamE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_ScriptParam(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11ScriptParamE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_ScriptParam(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11ScriptParamE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_ScriptParam(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11ScriptParamE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_ScriptParam(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11ScriptParamE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_ScriptParam(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI11ScriptParamEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_ScriptParam(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI15CNWItemPropertyEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_CNWItemProperty(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI15CNWItemPropertyEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_CNWItemProperty(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI15CNWItemPropertyED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_CNWItemProperty(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI15CNWItemPropertyE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_CNWItemProperty(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI15CNWItemPropertyE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_CNWItemProperty(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI15CNWItemPropertyE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_CNWItemProperty(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI15CNWItemPropertyE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_CNWItemProperty(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI15CNWItemPropertyE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_CNWItemProperty(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI15CNWItemPropertyE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_CNWItemProperty(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI15CNWItemPropertyEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_CNWItemProperty(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI13SJournalEntryEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_SJournalEntry(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI13SJournalEntryEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_SJournalEntry(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI13SJournalEntryED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_SJournalEntry(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI13SJournalEntryE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_SJournalEntry(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI13SJournalEntryE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_SJournalEntry(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI13SJournalEntryE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_SJournalEntry(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI13SJournalEntryE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_SJournalEntry(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI13SJournalEntryE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_SJournalEntry(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI13SJournalEntryE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_SJournalEntry(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI13SJournalEntryEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_SJournalEntry(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11CNWSTagNodeEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_CNWSTagNode(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11CNWSTagNodeEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_CNWSTagNode(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11CNWSTagNodeED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_CNWSTagNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11CNWSTagNodeE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_CNWSTagNode(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11CNWSTagNodeE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_CNWSTagNode(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11CNWSTagNodeE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_CNWSTagNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11CNWSTagNodeE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_CNWSTagNode(__IntPtr __instance, global::NWN.LowLevel.CNWSTagNode.__Internal t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11CNWSTagNodeE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_CNWSTagNode(__IntPtr __instance, global::NWN.LowLevel.CNWSTagNode.__Internal t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11CNWSTagNodeE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_CNWSTagNode(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI11CNWSTagNodeEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_CNWSTagNode(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18CWorldJournalEntryEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_CWorldJournalEntry(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18CWorldJournalEntryEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_CWorldJournalEntry(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18CWorldJournalEntryED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_CWorldJournalEntry(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18CWorldJournalEntryE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_CWorldJournalEntry(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18CWorldJournalEntryE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_CWorldJournalEntry(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18CWorldJournalEntryE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_CWorldJournalEntry(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18CWorldJournalEntryE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_CWorldJournalEntry(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18CWorldJournalEntryE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_CWorldJournalEntry(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18CWorldJournalEntryE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_CWorldJournalEntry(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI18CWorldJournalEntryEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_CWorldJournalEntry(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEMEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEMEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEMED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP25NWPLAYERCHARACTERLISTITEMEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29CNWSPlayerJournalQuestUpdatesEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29CNWSPlayerJournalQuestUpdatesEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29CNWSPlayerJournalQuestUpdatesED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29CNWSPlayerJournalQuestUpdatesE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29CNWSPlayerJournalQuestUpdatesE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29CNWSPlayerJournalQuestUpdatesE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29CNWSPlayerJournalQuestUpdatesE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29CNWSPlayerJournalQuestUpdatesE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29CNWSPlayerJournalQuestUpdatesE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI29CNWSPlayerJournalQuestUpdatesEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_CResRef(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_CResRef(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_CResRef(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_CResRef(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_CResRef(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_CResRef(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_CResRef(__IntPtr __instance, global::NWN.LowLevel.CResRef.__Internal t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE9AddUniqueES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList____S_CResRef(__IntPtr __instance, global::NWN.LowLevel.CResRef.__Internal t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE8ContainsES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList____S_CResRef(__IntPtr __instance, global::NWN.LowLevel.CResRef.__Internal t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_CResRef(__IntPtr __instance, global::NWN.LowLevel.CResRef.__Internal t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE7IndexOfES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList____S_CResRef(__IntPtr __instance, global::NWN.LowLevel.CResRef.__Internal t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE6RemoveES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList____S_CResRef(__IntPtr __instance, global::NWN.LowLevel.CResRef.__Internal t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_CResRef(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI7CResRefEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_CResRef(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP14CStoreCustomerEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CStoreCustomer(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP14SSubNetProfileEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_SSubNetProfile(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogEC2ERKS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE3AddES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE9AddUniqueES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUniquec__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE8ContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Containsc__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE13DerefContainsES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DerefContainsc__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE6InsertES1_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, __IntPtr t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE7IndexOfES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IndexOfc__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE6RemoveES1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Removec__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, __IntPtr t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListIP10CScriptLogEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList_____S_CScriptLog(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29NWPlayerCharacterListClass_stEC2Ei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29NWPlayerCharacterListClass_stEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__IntPtr __instance, __IntPtr list);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29NWPlayerCharacterListClass_stED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29NWPlayerCharacterListClass_stE8AllocateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Allocatec__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29NWPlayerCharacterListClass_stE7SetSizeEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSizec__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__IntPtr __instance, int s);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29NWPlayerCharacterListClass_stE4PackEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Packc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29NWPlayerCharacterListClass_stE3AddES0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Addc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__IntPtr __instance, global::NWN.LowLevel.NWPlayerCharacterListClass_st.__Internal t);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29NWPlayerCharacterListClass_stE6InsertES0_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Insertc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__IntPtr __instance, global::NWN.LowLevel.NWPlayerCharacterListClass_st.__Internal t, int k);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29NWPlayerCharacterListClass_stE8DelIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DelIndexc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__IntPtr __instance, int i);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZNK13CExoArrayListI29NWPlayerCharacterListClass_stEixEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr OperatorSubscriptc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__IntPtr __instance, int i);
        }
    }

    public unsafe partial class CExoArrayList<T> : IDisposable
    {
        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CExoArrayList<T>> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CExoArrayList<T>>();

        protected bool __ownsNativeInstance;

        internal static CExoArrayList<T> __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new CExoArrayList<T>(native.ToPointer(), skipVTables);
        }

        internal static CExoArrayList<T> __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (CExoArrayList<T>)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static CExoArrayList<T> __CreateInstance(global::NWN.LowLevel.CExoArrayList.__Internal native, bool skipVTables = false)
        {
            return new CExoArrayList<T>(native, skipVTables);
        }

        private static void* __CopyValue(global::NWN.LowLevel.CExoArrayList.__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
            global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_CExoString(ret, new __IntPtr(&native));
            return ret.ToPointer();
        }

        private CExoArrayList(global::NWN.LowLevel.CExoArrayList.__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CExoArrayList(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public CExoArrayList(int s)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_CExoString(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CCombatInformationNode(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_CFileInfo(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CExoKeyTable(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList__I(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList__i(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_MaterialShaderParam(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_TextureReplaceInfo(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CGameObject(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList__f(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList__s(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CEffectIconObject(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CGameEffect(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CNWSExpression(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                throw new MissingMethodException("Method CExoArrayList_T_ ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoString>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CNWCCMessageData(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_CNWSPersonalReputation(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CNWLevelStats(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_ScriptParam(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_CNWItemProperty(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_SJournalEntry(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_CNWSTagNode(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_CWorldJournalEntry(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_CResRef(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CStoreCustomer(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_SSubNetProfile(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList_____S_CScriptLog(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoArrayList.__Internal.ctorc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__Instance, s);
                return;
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public CExoArrayList(global::NWN.LowLevel.CExoArrayList<T> list)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_CExoString(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CCombatInformationNode(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_CFileInfo(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CExoKeyTable(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList__I(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList__i(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_MaterialShaderParam(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_TextureReplaceInfo(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CGameObject(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList__f(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList__s(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CEffectIconObject(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CGameEffect(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CNWSExpression(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CExoString(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CNWCCMessageData(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_CNWSPersonalReputation(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CNWLevelStats(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_ScriptParam(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_CNWItemProperty(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_SJournalEntry(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_CNWSTagNode(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_CWorldJournalEntry(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_CResRef(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CStoreCustomer(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_SSubNetProfile(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList_____S_CScriptLog(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoArrayList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(list, null))
                    throw new global::System.ArgumentNullException("list", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = list.__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.cctorc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__Instance, __arg0);
                return;
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::NWN.LowLevel.CExoArrayList<T> __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (disposing)
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_CExoString(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CCombatInformationNode(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_CFileInfo(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CExoKeyTable(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(int)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList__I(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList__i(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_MaterialShaderParam(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_TextureReplaceInfo(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CGameObject(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(float)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList__f(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(ushort)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList__s(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CEffectIconObject(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CGameEffect(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CNWSExpression(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CExoString(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CNWCCMessageData(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_CNWSPersonalReputation(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CNWLevelStats(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_ScriptParam(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_CNWItemProperty(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_SJournalEntry(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_CNWSTagNode(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_CWorldJournalEntry(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_CResRef(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CStoreCustomer(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_SSubNetProfile(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList_____S_CScriptLog(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
                {
                    global::NWN.LowLevel.CExoArrayList.__Internal.dtorc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__Instance);
                    return;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public void Allocate(int s)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_CExoString(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CCombatInformationNode(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_CFileInfo(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CExoKeyTable(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList__I(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList__i(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_MaterialShaderParam(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_TextureReplaceInfo(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CGameObject(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList__f(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList__s(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CEffectIconObject(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CGameEffect(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CNWSExpression(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocate1c__S_CExoArrayList_____S_CExoString(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CNWCCMessageData(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_CNWSPersonalReputation(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CNWLevelStats(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_ScriptParam(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_CNWItemProperty(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_SJournalEntry(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_CNWSTagNode(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_CWorldJournalEntry(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_CResRef(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CStoreCustomer(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_SSubNetProfile(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList_____S_CScriptLog(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Allocatec__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__Instance, s);
                return;
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public void SetSize(int s)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_CExoString(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CCombatInformationNode(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_CFileInfo(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CExoKeyTable(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList__I(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList__i(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_MaterialShaderParam(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_TextureReplaceInfo(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CGameObject(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList__f(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList__s(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CEffectIconObject(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CGameEffect(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CNWSExpression(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSize1c__S_CExoArrayList_____S_CExoString(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CNWCCMessageData(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_CNWSPersonalReputation(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CNWLevelStats(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_ScriptParam(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_CNWItemProperty(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_SJournalEntry(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_CNWSTagNode(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_CWorldJournalEntry(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_CResRef(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CStoreCustomer(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_SSubNetProfile(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList_____S_CScriptLog(__Instance, s);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.SetSizec__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__Instance, s);
                return;
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public void Pack()
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_CExoString(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CCombatInformationNode(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_CFileInfo(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CExoKeyTable(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList__I(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList__i(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_MaterialShaderParam(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_TextureReplaceInfo(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CGameObject(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList__f(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList__s(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CEffectIconObject(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CGameEffect(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CNWSExpression(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Pack1c__S_CExoArrayList_____S_CExoString(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CNWCCMessageData(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_CNWSPersonalReputation(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CNWLevelStats(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_ScriptParam(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_CNWItemProperty(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_SJournalEntry(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_CNWSTagNode(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_CWorldJournalEntry(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_CResRef(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CStoreCustomer(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_SSubNetProfile(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList_____S_CScriptLog(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.Packc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__Instance);
                return;
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public void Add(T t)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_CExoString(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CCombatInformationNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CCombatInformationNode) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CCombatInformationNode(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CFileInfo) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_CFileInfo(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoKeyTable) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoKeyTable) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CExoKeyTable(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                var __arg0 = (int) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList__I(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                var __arg0 = (uint) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList__i(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.MaterialShaderParam) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_MaterialShaderParam(__Instance, *(global::NWN.LowLevel.MaterialShaderParam.__Internal*) __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.TextureReplaceInfo) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_TextureReplaceInfo(__Instance, *(global::NWN.LowLevel.TextureReplaceInfo.__Internal*) __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameObject) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CGameObject(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                var __arg0 = (float) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList__f(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                var __arg0 = (ushort) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList__s(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CEffectIconObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CEffectIconObject) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CEffectIconObject(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameEffect) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CGameEffect(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSExpression) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSExpression) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CNWSExpression(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CExoString(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWCCMessageData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWCCMessageData) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CNWCCMessageData(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWVisibilityNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWVisibilityNode) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CNWSPersonalReputation) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_CNWSPersonalReputation(__Instance, *(global::NWN.LowLevel.CNWSPersonalReputation.__Internal*) __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                var __arg0 = ((global::NWN.LowLevel.CFeatUseListEntry) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CFeatUseListEntry) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWLevelStats) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWLevelStats) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CNWLevelStats(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.ScriptParam) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_ScriptParam(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CNWItemProperty) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_CNWItemProperty(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.SJournalEntry) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_SJournalEntry(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CNWSTagNode) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_CNWSTagNode(__Instance, *(global::NWN.LowLevel.CNWSTagNode.__Internal*) __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CWorldJournalEntry) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_CWorldJournalEntry(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                var __arg0 = ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CResRef) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_CResRef(__Instance, *(global::NWN.LowLevel.CResRef.__Internal*) __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                var __arg0 = ((global::NWN.LowLevel.CStoreCustomer) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CStoreCustomer) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CStoreCustomer(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                var __arg0 = ((global::NWN.LowLevel.SSubNetProfile) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.SSubNetProfile) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_SSubNetProfile(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                var __arg0 = ((global::NWN.LowLevel.CScriptLog) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CScriptLog) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList_____S_CScriptLog(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.NWPlayerCharacterListClass_st) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Addc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__Instance, *(global::NWN.LowLevel.NWPlayerCharacterListClass_st.__Internal*) __arg0);
                return;
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public int AddUnique(T t)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList____S_CExoString(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CCombatInformationNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CCombatInformationNode) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CCombatInformationNode(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CFileInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoKeyTable) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoKeyTable) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CExoKeyTable(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                var __arg0 = (int) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList__I(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                var __arg0 = (uint) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList__i(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.MaterialShaderParam>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.TextureReplaceInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameObject) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CGameObject(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                var __arg0 = (float) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList__f(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                var __arg0 = (ushort) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList__s(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CEffectIconObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CEffectIconObject) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CEffectIconObject(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameEffect) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CGameEffect(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSExpression) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSExpression) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CNWSExpression(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CExoString(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWCCMessageData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWCCMessageData) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CNWCCMessageData(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWVisibilityNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWVisibilityNode) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPersonalReputation>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                var __arg0 = ((global::NWN.LowLevel.CFeatUseListEntry) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CFeatUseListEntry) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWLevelStats) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWLevelStats) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CNWLevelStats(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.ScriptParam>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWItemProperty>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.SJournalEntry>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSTagNode>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CWorldJournalEntry>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                var __arg0 = ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CResRef) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList____S_CResRef(__Instance, *(global::NWN.LowLevel.CResRef.__Internal*) __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                var __arg0 = ((global::NWN.LowLevel.CStoreCustomer) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CStoreCustomer) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CStoreCustomer(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                var __arg0 = ((global::NWN.LowLevel.SSubNetProfile) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.SSubNetProfile) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_SSubNetProfile(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                var __arg0 = ((global::NWN.LowLevel.CScriptLog) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CScriptLog) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.AddUniquec__S_CExoArrayList_____S_CScriptLog(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                throw new MissingMethodException("Method AddUnique ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public int Contains(T t)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList____S_CExoString(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CCombatInformationNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CCombatInformationNode) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CCombatInformationNode(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CFileInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoKeyTable) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoKeyTable) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CExoKeyTable(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                var __arg0 = (int) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList__I(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                var __arg0 = (uint) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList__i(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.MaterialShaderParam>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.TextureReplaceInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameObject) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CGameObject(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                var __arg0 = (float) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList__f(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                var __arg0 = (ushort) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList__s(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CEffectIconObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CEffectIconObject) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CEffectIconObject(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameEffect) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CGameEffect(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSExpression) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSExpression) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CNWSExpression(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CExoString(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWCCMessageData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWCCMessageData) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CNWCCMessageData(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWVisibilityNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWVisibilityNode) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPersonalReputation>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                var __arg0 = ((global::NWN.LowLevel.CFeatUseListEntry) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CFeatUseListEntry) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWLevelStats) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWLevelStats) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CNWLevelStats(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.ScriptParam>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWItemProperty>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.SJournalEntry>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSTagNode>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CWorldJournalEntry>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                var __arg0 = ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CResRef) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList____S_CResRef(__Instance, *(global::NWN.LowLevel.CResRef.__Internal*) __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                var __arg0 = ((global::NWN.LowLevel.CStoreCustomer) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CStoreCustomer) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CStoreCustomer(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                var __arg0 = ((global::NWN.LowLevel.SSubNetProfile) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.SSubNetProfile) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_SSubNetProfile(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                var __arg0 = ((global::NWN.LowLevel.CScriptLog) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CScriptLog) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.Containsc__S_CExoArrayList_____S_CScriptLog(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                throw new MissingMethodException("Method Contains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public int DerefContains(T t)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoString>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CCombatInformationNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CCombatInformationNode) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CCombatInformationNode(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CFileInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoKeyTable) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoKeyTable) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CExoKeyTable(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<int>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<uint>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.MaterialShaderParam>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.TextureReplaceInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameObject) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CGameObject(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<float>.");
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<ushort>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CEffectIconObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CEffectIconObject) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CEffectIconObject(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameEffect) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CGameEffect(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSExpression) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSExpression) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CNWSExpression(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CExoString(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWCCMessageData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWCCMessageData) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CNWCCMessageData(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWVisibilityNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWVisibilityNode) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPersonalReputation>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                var __arg0 = ((global::NWN.LowLevel.CFeatUseListEntry) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CFeatUseListEntry) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWLevelStats) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWLevelStats) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CNWLevelStats(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.ScriptParam>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWItemProperty>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.SJournalEntry>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSTagNode>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CWorldJournalEntry>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                var __arg0 = ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CResRef>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                var __arg0 = ((global::NWN.LowLevel.CStoreCustomer) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CStoreCustomer) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CStoreCustomer(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                var __arg0 = ((global::NWN.LowLevel.SSubNetProfile) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.SSubNetProfile) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_SSubNetProfile(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                var __arg0 = ((global::NWN.LowLevel.CScriptLog) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CScriptLog) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.DerefContainsc__S_CExoArrayList_____S_CScriptLog(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                throw new MissingMethodException("Method DerefContains ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public void Insert(T t, int k)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_CExoString(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CCombatInformationNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CCombatInformationNode) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CCombatInformationNode(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CFileInfo) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_CFileInfo(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoKeyTable) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoKeyTable) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CExoKeyTable(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                var __arg0 = (int) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList__I(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                var __arg0 = (uint) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList__i(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.MaterialShaderParam) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_MaterialShaderParam(__Instance, *(global::NWN.LowLevel.MaterialShaderParam.__Internal*) __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.TextureReplaceInfo) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_TextureReplaceInfo(__Instance, *(global::NWN.LowLevel.TextureReplaceInfo.__Internal*) __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameObject) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CGameObject(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                var __arg0 = (float) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList__f(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                var __arg0 = (ushort) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList__s(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CEffectIconObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CEffectIconObject) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CEffectIconObject(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameEffect) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CGameEffect(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSExpression) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSExpression) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CNWSExpression(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CExoString(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWCCMessageData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWCCMessageData) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CNWCCMessageData(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWVisibilityNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWVisibilityNode) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CNWSPersonalReputation) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_CNWSPersonalReputation(__Instance, *(global::NWN.LowLevel.CNWSPersonalReputation.__Internal*) __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                var __arg0 = ((global::NWN.LowLevel.CFeatUseListEntry) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CFeatUseListEntry) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWLevelStats) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWLevelStats) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CNWLevelStats(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.ScriptParam) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_ScriptParam(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CNWItemProperty) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_CNWItemProperty(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.SJournalEntry) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_SJournalEntry(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CNWSTagNode) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_CNWSTagNode(__Instance, *(global::NWN.LowLevel.CNWSTagNode.__Internal*) __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CWorldJournalEntry) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_CWorldJournalEntry(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                var __arg0 = ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CResRef) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_CResRef(__Instance, *(global::NWN.LowLevel.CResRef.__Internal*) __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                var __arg0 = ((global::NWN.LowLevel.CStoreCustomer) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CStoreCustomer) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CStoreCustomer(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                var __arg0 = ((global::NWN.LowLevel.SSubNetProfile) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.SSubNetProfile) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_SSubNetProfile(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                var __arg0 = ((global::NWN.LowLevel.CScriptLog) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CScriptLog) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList_____S_CScriptLog(__Instance, __arg0, k);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.NWPlayerCharacterListClass_st) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Insertc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__Instance, *(global::NWN.LowLevel.NWPlayerCharacterListClass_st.__Internal*) __arg0, k);
                return;
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public int IndexOf(T t)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList____S_CExoString(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CCombatInformationNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CCombatInformationNode) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CCombatInformationNode(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CFileInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoKeyTable) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoKeyTable) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CExoKeyTable(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                var __arg0 = (int) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList__I(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                var __arg0 = (uint) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList__i(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.MaterialShaderParam>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.TextureReplaceInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameObject) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CGameObject(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                var __arg0 = (float) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList__f(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                var __arg0 = (ushort) (object) t;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList__s(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CEffectIconObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CEffectIconObject) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CEffectIconObject(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameEffect) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CGameEffect(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSExpression) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSExpression) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CNWSExpression(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CExoString(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWCCMessageData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWCCMessageData) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CNWCCMessageData(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWVisibilityNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWVisibilityNode) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPersonalReputation>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                var __arg0 = ((global::NWN.LowLevel.CFeatUseListEntry) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CFeatUseListEntry) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWLevelStats) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWLevelStats) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CNWLevelStats(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.ScriptParam>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWItemProperty>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.SJournalEntry>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSTagNode>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CWorldJournalEntry>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                var __arg0 = ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>.");
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CResRef) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList____S_CResRef(__Instance, *(global::NWN.LowLevel.CResRef.__Internal*) __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                var __arg0 = ((global::NWN.LowLevel.CStoreCustomer) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CStoreCustomer) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CStoreCustomer(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                var __arg0 = ((global::NWN.LowLevel.SSubNetProfile) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.SSubNetProfile) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_SSubNetProfile(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                var __arg0 = ((global::NWN.LowLevel.CScriptLog) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CScriptLog) (object) t).__Instance;
                var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.IndexOfc__S_CExoArrayList_____S_CScriptLog(__Instance, __arg0);
                return __ret;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                throw new MissingMethodException("Method IndexOf ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public void Remove(T t)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList____S_CExoString(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CCombatInformationNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CCombatInformationNode) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CCombatInformationNode(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CFileInfo>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoKeyTable) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoKeyTable) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CExoKeyTable(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                var __arg0 = (int) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList__I(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CLoopingVisualEffect) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                var __arg0 = (uint) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList__i(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.MaterialShaderParam>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.TextureReplaceInfo>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameObject) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CGameObject(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                var __arg0 = (float) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList__f(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                var __arg0 = (ushort) (object) t;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList__s(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                var __arg0 = ((global::NWN.LowLevel.CEffectIconObject) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CEffectIconObject) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CEffectIconObject(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                var __arg0 = ((global::NWN.LowLevel.CGameEffect) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameEffect) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CGameEffect(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSExpression) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSExpression) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CNWSExpression(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                var __arg0 = ((global::NWN.LowLevel.CExoString) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoString) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CExoString(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSSpellScriptData) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWCCMessageData) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWCCMessageData) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CNWCCMessageData(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWVisibilityNode) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWVisibilityNode) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPersonalReputation>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                var __arg0 = ((global::NWN.LowLevel.CFeatUseListEntry) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CFeatUseListEntry) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                var __arg0 = ((global::NWN.LowLevel.CNWLevelStats) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWLevelStats) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CNWLevelStats(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.ScriptParam>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWItemProperty>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.SJournalEntry>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSTagNode>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CWorldJournalEntry>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                var __arg0 = ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>.");
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                if (ReferenceEquals(t, null))
                    throw new global::System.ArgumentNullException("t", "Cannot be null because it is passed by value.");
                var __arg0 = ((global::NWN.LowLevel.CResRef) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList____S_CResRef(__Instance, *(global::NWN.LowLevel.CResRef.__Internal*) __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                var __arg0 = ((global::NWN.LowLevel.CStoreCustomer) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CStoreCustomer) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CStoreCustomer(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                var __arg0 = ((global::NWN.LowLevel.SSubNetProfile) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.SSubNetProfile) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_SSubNetProfile(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                var __arg0 = ((global::NWN.LowLevel.CScriptLog) (object) t) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CScriptLog) (object) t).__Instance;
                global::NWN.LowLevel.CExoArrayList.__Internal.Removec__S_CExoArrayList_____S_CScriptLog(__Instance, __arg0);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                throw new MissingMethodException("Method Remove ignored in specialization global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
                return;
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public void DelIndex(int i)
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_CExoString(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CCombatInformationNode(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_CFileInfo(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CExoKeyTable(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(int)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList__I(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList__i(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_MaterialShaderParam(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_TextureReplaceInfo(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CGameObject(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(float)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList__f(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(ushort)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList__s(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CEffectIconObject(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CGameEffect(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CNWSExpression(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndex1c__S_CExoArrayList_____S_CExoString(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CNWCCMessageData(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_CNWSPersonalReputation(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CNWLevelStats(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_ScriptParam(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_CNWItemProperty(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_SJournalEntry(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_CNWSTagNode(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_CWorldJournalEntry(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_CResRef(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CStoreCustomer(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_SSubNetProfile(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList_____S_CScriptLog(__Instance, i);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
            {
                global::NWN.LowLevel.CExoArrayList.__Internal.DelIndexc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__Instance, i);
                return;
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
        }

        public static implicit operator global::NWN.LowLevel.CExoArrayList<T>(int s)
        {
            return new global::NWN.LowLevel.CExoArrayList<T>(s);
        }

        public T this[int i]
        {
            get
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CExoString(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CCombatInformationNode(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CCombatInformationNode.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CFileInfo(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.CFileInfo.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CExoKeyTable(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CExoKeyTable.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(int)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList__I(__Instance, i);
                    return (T) (object) *__ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CLoopingVisualEffect.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList__i(__Instance, i);
                    return (T) (object) *__ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_MaterialShaderParam(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.MaterialShaderParam.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_TextureReplaceInfo(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.TextureReplaceInfo.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CGameObject(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CGameObject.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(float)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList__f(__Instance, i);
                    return (T) (object) *__ret;
                }
                if (__T.IsAssignableFrom(typeof(ushort)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList__s(__Instance, i);
                    return (T) (object) *__ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CEffectIconObject(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CEffectIconObject.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CGameEffect(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CGameEffect.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CNWSExpression(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CNWSExpression.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CExoString(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CExoString.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CNWSSpellScriptData.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CNWCCMessageData(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CNWCCMessageData.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CNWVisibilityNode.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CNWSPersonalReputation(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.CNWSPersonalReputation.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CFeatUseListEntry.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CNWLevelStats(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CNWLevelStats.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_ScriptParam(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.ScriptParam.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CNWItemProperty(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.CNWItemProperty.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_SJournalEntry(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.SJournalEntry.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CNWSTagNode(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.CNWSTagNode.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CWorldJournalEntry(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.CWorldJournalEntry.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CResRef(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.CResRef.__CreateInstance(__ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CStoreCustomer(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CStoreCustomer.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_SSubNetProfile(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.SSubNetProfile.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CScriptLog(__Instance, i);
                    __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
                    return (T) (object) global::NWN.LowLevel.CScriptLog.__CreateInstance(____ret);
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
                {
                    var __ret = global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__Instance, i);
                    return (T) (object) global::NWN.LowLevel.NWPlayerCharacterListClass_st.__CreateInstance(__ret);
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }

            set
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    global::NWN.LowLevel.CExoString.__Internal.cctor_1(global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CExoString(__Instance, i), ((global::NWN.LowLevel.CExoString) (object) value).__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CCombatInformationNode(__Instance, i) = ((global::NWN.LowLevel.CCombatInformationNode) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CCombatInformationNode) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    global::NWN.LowLevel.CFileInfo.__Internal.cctor(global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CFileInfo(__Instance, i), ((global::NWN.LowLevel.CFileInfo) (object) value).__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CExoKeyTable(__Instance, i) = ((global::NWN.LowLevel.CExoKeyTable) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoKeyTable) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(int)))
                {
                    *global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList__I(__Instance, i) = (int) (object) value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CLoopingVisualEffect(__Instance, i) = ((global::NWN.LowLevel.CLoopingVisualEffect) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CLoopingVisualEffect) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    *global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList__i(__Instance, i) = (uint) (object) value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    *(global::NWN.LowLevel.MaterialShaderParam.__Internal*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_MaterialShaderParam(__Instance, i) = *(global::NWN.LowLevel.MaterialShaderParam.__Internal*) ((global::NWN.LowLevel.MaterialShaderParam) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    *(global::NWN.LowLevel.TextureReplaceInfo.__Internal*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_TextureReplaceInfo(__Instance, i) = *(global::NWN.LowLevel.TextureReplaceInfo.__Internal*) ((global::NWN.LowLevel.TextureReplaceInfo) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo.__Internal.cctor(global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CNetLayerPlayerCDKeyInfo(__Instance, i), ((global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo) (object) value).__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CGameObject(__Instance, i) = ((global::NWN.LowLevel.CGameObject) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameObject) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(float)))
                {
                    *global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList__f(__Instance, i) = (float) (object) value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(ushort)))
                {
                    *global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList__s(__Instance, i) = (ushort) (object) value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CEffectIconObject(__Instance, i) = ((global::NWN.LowLevel.CEffectIconObject) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CEffectIconObject) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CGameEffect(__Instance, i) = ((global::NWN.LowLevel.CGameEffect) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameEffect) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CNWSExpression(__Instance, i) = ((global::NWN.LowLevel.CNWSExpression) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSExpression) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CExoString(__Instance, i) = ((global::NWN.LowLevel.CExoString) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoString) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CNWSSpellScriptData(__Instance, i) = ((global::NWN.LowLevel.CNWSSpellScriptData) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSSpellScriptData) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CNWCCMessageData(__Instance, i) = ((global::NWN.LowLevel.CNWCCMessageData) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWCCMessageData) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CNWVisibilityNode(__Instance, i) = ((global::NWN.LowLevel.CNWVisibilityNode) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWVisibilityNode) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    *(global::NWN.LowLevel.CNWSPersonalReputation.__Internal*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CNWSPersonalReputation(__Instance, i) = *(global::NWN.LowLevel.CNWSPersonalReputation.__Internal*) ((global::NWN.LowLevel.CNWSPersonalReputation) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CFeatUseListEntry(__Instance, i) = ((global::NWN.LowLevel.CFeatUseListEntry) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CFeatUseListEntry) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CNWLevelStats(__Instance, i) = ((global::NWN.LowLevel.CNWLevelStats) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWLevelStats) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    global::NWN.LowLevel.ScriptParam.__Internal.cctor(global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_ScriptParam(__Instance, i), ((global::NWN.LowLevel.ScriptParam) (object) value).__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    global::NWN.LowLevel.CNWItemProperty.__Internal.cctor(global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CNWItemProperty(__Instance, i), ((global::NWN.LowLevel.CNWItemProperty) (object) value).__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    global::NWN.LowLevel.SJournalEntry.__Internal.cctor(global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_SJournalEntry(__Instance, i), ((global::NWN.LowLevel.SJournalEntry) (object) value).__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    *(global::NWN.LowLevel.CNWSTagNode.__Internal*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CNWSTagNode(__Instance, i) = *(global::NWN.LowLevel.CNWSTagNode.__Internal*) ((global::NWN.LowLevel.CNWSTagNode) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    global::NWN.LowLevel.CWorldJournalEntry.__Internal.cctor(global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CWorldJournalEntry(__Instance, i), ((global::NWN.LowLevel.CWorldJournalEntry) (object) value).__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_NWPLAYERCHARACTERLISTITEM(__Instance, i) = ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates.__Internal.cctor(global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CNWSPlayerJournalQuestUpdates(__Instance, i), ((global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates) (object) value).__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    *(global::NWN.LowLevel.CResRef.__Internal*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_CResRef(__Instance, i) = *(global::NWN.LowLevel.CResRef.__Internal*) ((global::NWN.LowLevel.CResRef) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CStoreCustomer(__Instance, i) = ((global::NWN.LowLevel.CStoreCustomer) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CStoreCustomer) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_SSubNetProfile(__Instance, i) = ((global::NWN.LowLevel.SSubNetProfile) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.SSubNetProfile) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
                {
                    *(__IntPtr*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList_____S_CScriptLog(__Instance, i) = ((global::NWN.LowLevel.CScriptLog) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CScriptLog) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    *(global::NWN.LowLevel.NWPlayerCharacterListClass_st.__Internal*) global::NWN.LowLevel.CExoArrayList.__Internal.OperatorSubscriptc__S_CExoArrayList____S_NWPlayerCharacterListClass_st(__Instance, i) = *(global::NWN.LowLevel.NWPlayerCharacterListClass_st.__Internal*) ((global::NWN.LowLevel.NWPlayerCharacterListClass_st) (object) value).__Instance;
                    return;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }
        }

        public T Element
        {
            get
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
                {
                    var __result0 = global::NWN.LowLevel.CCombatInformationNode.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
                {
                    var __result0 = global::NWN.LowLevel.CFileInfo.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
                {
                    var __result0 = global::NWN.LowLevel.CExoKeyTable.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(int)))
                {
                    return (T) (object) ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
                {
                    var __result0 = global::NWN.LowLevel.CLoopingVisualEffect.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    return (T) (object) ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
                {
                    var __result0 = global::NWN.LowLevel.MaterialShaderParam.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
                {
                    var __result0 = global::NWN.LowLevel.TextureReplaceInfo.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
                {
                    var __result0 = global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
                {
                    var __result0 = global::NWN.LowLevel.CGameObject.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(float)))
                {
                    return (T) (object) ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element;
                }
                if (__T.IsAssignableFrom(typeof(ushort)))
                {
                    return (T) (object) ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
                {
                    var __result0 = global::NWN.LowLevel.CEffectIconObject.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
                {
                    var __result0 = global::NWN.LowLevel.CGameEffect.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
                {
                    var __result0 = global::NWN.LowLevel.CNWSExpression.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
                {
                    var __result0 = global::NWN.LowLevel.CNWSSpellScriptData.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
                {
                    var __result0 = global::NWN.LowLevel.CNWCCMessageData.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
                {
                    var __result0 = global::NWN.LowLevel.CNWVisibilityNode.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
                {
                    var __result0 = global::NWN.LowLevel.CNWSPersonalReputation.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
                {
                    var __result0 = global::NWN.LowLevel.CFeatUseListEntry.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
                {
                    var __result0 = global::NWN.LowLevel.CNWLevelStats.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
                {
                    var __result0 = global::NWN.LowLevel.ScriptParam.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
                {
                    var __result0 = global::NWN.LowLevel.CNWItemProperty.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
                {
                    var __result0 = global::NWN.LowLevel.SJournalEntry.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
                {
                    var __result0 = global::NWN.LowLevel.CNWSTagNode.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
                {
                    var __result0 = global::NWN.LowLevel.CWorldJournalEntry.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
                {
                    var __result0 = global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
                {
                    var __result0 = global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    var __result0 = global::NWN.LowLevel.CResRef.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
                {
                    var __result0 = global::NWN.LowLevel.CStoreCustomer.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
                {
                    var __result0 = global::NWN.LowLevel.SSubNetProfile.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
                {
                    var __result0 = global::NWN.LowLevel.CScriptLog.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
                {
                    var __result0 = global::NWN.LowLevel.NWPlayerCharacterListClass_st.__GetOrCreateInstance(((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element, false);
                    return (T) (object) (T) (object) __result0;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }

            set
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.CExoString) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoString) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
                {
                    var __value = ((global::NWN.LowLevel.CCombatInformationNode) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CCombatInformationNode) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.CFileInfo) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CFileInfo) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
                {
                    var __value = ((global::NWN.LowLevel.CExoKeyTable) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoKeyTable) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(int)))
                {
                    var __value0 = (int) (object) value;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = (__IntPtr) (object) __value0;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
                {
                    var __value = ((global::NWN.LowLevel.CLoopingVisualEffect) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CLoopingVisualEffect) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    var __value0 = (uint) (object) value;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = (__IntPtr) (object) __value0;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.MaterialShaderParam) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.MaterialShaderParam) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.TextureReplaceInfo) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.TextureReplaceInfo) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
                {
                    var __value = ((global::NWN.LowLevel.CGameObject) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameObject) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(float)))
                {
                    var __value0 = (float) (object) value;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = (__IntPtr) (object) __value0;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(ushort)))
                {
                    var __value0 = (ushort) (object) value;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = (__IntPtr) (object) __value0;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
                {
                    var __value = ((global::NWN.LowLevel.CEffectIconObject) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CEffectIconObject) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
                {
                    var __value = ((global::NWN.LowLevel.CGameEffect) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CGameEffect) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
                {
                    var __value = ((global::NWN.LowLevel.CNWSExpression) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSExpression) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    var __value = ((global::NWN.LowLevel.CExoString) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CExoString) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
                {
                    var __value = ((global::NWN.LowLevel.CNWSSpellScriptData) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSSpellScriptData) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
                {
                    var __value = ((global::NWN.LowLevel.CNWCCMessageData) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWCCMessageData) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
                {
                    var __value = ((global::NWN.LowLevel.CNWVisibilityNode) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWVisibilityNode) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.CNWSPersonalReputation) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSPersonalReputation) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
                {
                    var __value = ((global::NWN.LowLevel.CFeatUseListEntry) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CFeatUseListEntry) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
                {
                    var __value = ((global::NWN.LowLevel.CNWLevelStats) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWLevelStats) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.ScriptParam) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.ScriptParam) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.CNWItemProperty) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWItemProperty) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.SJournalEntry) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.SJournalEntry) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.CNWSTagNode) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSTagNode) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.CWorldJournalEntry) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CWorldJournalEntry) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
                {
                    var __value = ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.CResRef) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CResRef) (object) value).__Instance;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
                {
                    var __value = ((global::NWN.LowLevel.CStoreCustomer) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CStoreCustomer) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
                {
                    var __value = ((global::NWN.LowLevel.SSubNetProfile) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.SSubNetProfile) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
                {
                    var __value = ((global::NWN.LowLevel.CScriptLog) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.CScriptLog) (object) value).__Instance;
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = new __IntPtr(&__value);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->element = ((global::NWN.LowLevel.NWPlayerCharacterListClass_st) (object) value) is null ? __IntPtr.Zero : ((global::NWN.LowLevel.NWPlayerCharacterListClass_st) (object) value).__Instance;
                    return;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }
        }

        public int Num
        {
            get
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(int)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(float)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(ushort)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }

            set
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(int)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(float)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(ushort)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->num = value;
                    return;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }
        }

        public int ArraySize
        {
            get
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(int)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(float)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(ushort)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
                {
                    return ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }

            set
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CCombatInformationNode)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFileInfo)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoKeyTable)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(int)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CLoopingVisualEffect)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.MaterialShaderParam)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.TextureReplaceInfo)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameObject)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(float)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(ushort)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CEffectIconObject)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CGameEffect)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSExpression)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSSpellScriptData)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWCCMessageData)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWVisibilityNode)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPersonalReputation)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CFeatUseListEntry)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWLevelStats)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.ScriptParam)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWItemProperty)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SJournalEntry)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSTagNode)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CWorldJournalEntry)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CStoreCustomer)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.SSubNetProfile)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CScriptLog)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPlayerCharacterListClass_st)))
                {
                    ((global::NWN.LowLevel.CExoArrayList.__Internal*)__Instance)->array_size = value;
                    return;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoArrayList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CCombatInformationNode>, <global::NWN.LowLevel.CFileInfo>, <global::NWN.LowLevel.CExoKeyTable>, <int>, <global::NWN.LowLevel.CLoopingVisualEffect>, <uint>, <global::NWN.LowLevel.MaterialShaderParam>, <global::NWN.LowLevel.TextureReplaceInfo>, <global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo>, <global::NWN.LowLevel.CGameObject>, <float>, <ushort>, <global::NWN.LowLevel.CEffectIconObject>, <global::NWN.LowLevel.CGameEffect>, <global::NWN.LowLevel.CNWSExpression>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CNWSSpellScriptData>, <global::NWN.LowLevel.CNWCCMessageData>, <global::NWN.LowLevel.CNWVisibilityNode>, <global::NWN.LowLevel.CNWSPersonalReputation>, <global::NWN.LowLevel.CFeatUseListEntry>, <global::NWN.LowLevel.CNWLevelStats>, <global::NWN.LowLevel.ScriptParam>, <global::NWN.LowLevel.CNWItemProperty>, <global::NWN.LowLevel.SJournalEntry>, <global::NWN.LowLevel.CNWSTagNode>, <global::NWN.LowLevel.CWorldJournalEntry>, <global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.CStoreCustomer>, <global::NWN.LowLevel.SSubNetProfile>, <global::NWN.LowLevel.CScriptLog>, <global::NWN.LowLevel.NWPlayerCharacterListClass_st>.");
            }
        }
    }

    public unsafe static partial class CExoArrayListExtensions
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI10CExoStringE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_1(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP22CCombatInformationNodeE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_1(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI9CFileInfoE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_2(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI9CFileInfoE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_2(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_3(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP12CExoKeyTableE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_3(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int* Begin_4(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIiE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int* End_4(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_5(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP20CLoopingVisualEffectE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_5(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* Begin_6(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIjE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* End_6(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI19MaterialShaderParamE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_7(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI19MaterialShaderParamE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_7(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18TextureReplaceInfoE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_8(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18TextureReplaceInfoE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_8(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI24CNetLayerPlayerCDKeyInfoE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_9(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI24CNetLayerPlayerCDKeyInfoE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_9(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_10(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameObjectE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_10(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern float* Begin_11(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIfE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern float* End_11(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort* Begin_12(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListItE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort* End_12(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_13(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CEffectIconObjectE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_13(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_14(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP11CGameEffectE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_14(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_15(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CNWSExpressionE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_15(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_16(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CExoStringE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_16(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_17(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP19CNWSSpellScriptDataE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_17(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_18(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP16CNWCCMessageDataE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_18(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_19(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CNWVisibilityNodeE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_19(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI22CNWSPersonalReputationE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_20(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI22CNWSPersonalReputationE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_20(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_21(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP17CFeatUseListEntryE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_21(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_22(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP13CNWLevelStatsE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_22(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11ScriptParamE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_23(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11ScriptParamE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_23(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI15CNWItemPropertyE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_24(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI15CNWItemPropertyE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_24(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI13SJournalEntryE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_25(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI13SJournalEntryE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_25(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11CNWSTagNodeE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_26(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI11CNWSTagNodeE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_26(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18CWorldJournalEntryE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_27(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI18CWorldJournalEntryE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_27(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_28(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_28(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29CNWSPlayerJournalQuestUpdatesE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_29(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29CNWSPlayerJournalQuestUpdatesE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_29(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_30(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI7CResRefE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_30(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_31(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14CStoreCustomerE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_31(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_32(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP14SSubNetProfileE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_32(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_33(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListIP10CScriptLogE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_33(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29NWPlayerCharacterListClass_stE5beginEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Begin_34(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN13CExoArrayListI29NWPlayerCharacterListClass_stE3endEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr End_34(__IntPtr __instance);
        }

        public static global::NWN.LowLevel.CExoString Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin(__arg0);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoString End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End(__arg0);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CCombatInformationNode Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CCombatInformationNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_1(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CCombatInformationNode.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CCombatInformationNode End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CCombatInformationNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_1(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CCombatInformationNode.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CFileInfo Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CFileInfo> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_2(__arg0);
            var __result0 = global::NWN.LowLevel.CFileInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CFileInfo End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CFileInfo> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_2(__arg0);
            var __result0 = global::NWN.LowLevel.CFileInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoKeyTable Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoKeyTable> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_3(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CExoKeyTable.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoKeyTable End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoKeyTable> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_3(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CExoKeyTable.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static int* Begin(this global::NWN.LowLevel.CExoArrayList<int> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_4(__arg0);
            return __ret;
        }

        public static int* End(this global::NWN.LowLevel.CExoArrayList<int> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_4(__arg0);
            return __ret;
        }

        public static global::NWN.LowLevel.CLoopingVisualEffect Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CLoopingVisualEffect> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_5(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CLoopingVisualEffect.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CLoopingVisualEffect End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CLoopingVisualEffect> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_5(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CLoopingVisualEffect.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static uint* Begin(this global::NWN.LowLevel.CExoArrayList<uint> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_6(__arg0);
            return __ret;
        }

        public static uint* End(this global::NWN.LowLevel.CExoArrayList<uint> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_6(__arg0);
            return __ret;
        }

        public static global::NWN.LowLevel.MaterialShaderParam Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.MaterialShaderParam> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_7(__arg0);
            var __result0 = global::NWN.LowLevel.MaterialShaderParam.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.MaterialShaderParam End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.MaterialShaderParam> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_7(__arg0);
            var __result0 = global::NWN.LowLevel.MaterialShaderParam.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.TextureReplaceInfo Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.TextureReplaceInfo> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_8(__arg0);
            var __result0 = global::NWN.LowLevel.TextureReplaceInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.TextureReplaceInfo End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.TextureReplaceInfo> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_8(__arg0);
            var __result0 = global::NWN.LowLevel.TextureReplaceInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_9(__arg0);
            var __result0 = global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_9(__arg0);
            var __result0 = global::NWN.LowLevel.CNetLayerPlayerCDKeyInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CGameObject Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CGameObject> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_10(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CGameObject.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CGameObject End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CGameObject> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_10(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CGameObject.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static float* Begin(this global::NWN.LowLevel.CExoArrayList<float> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_11(__arg0);
            return __ret;
        }

        public static float* End(this global::NWN.LowLevel.CExoArrayList<float> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_11(__arg0);
            return __ret;
        }

        public static ushort* Begin(this global::NWN.LowLevel.CExoArrayList<ushort> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_12(__arg0);
            return __ret;
        }

        public static ushort* End(this global::NWN.LowLevel.CExoArrayList<ushort> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_12(__arg0);
            return __ret;
        }

        public static global::NWN.LowLevel.CEffectIconObject Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CEffectIconObject> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_13(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CEffectIconObject.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CEffectIconObject End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CEffectIconObject> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_13(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CEffectIconObject.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CGameEffect Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CGameEffect> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_14(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CGameEffect.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CGameEffect End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CGameEffect> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_14(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CGameEffect.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSExpression Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSExpression> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_15(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CNWSExpression.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSExpression End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSExpression> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_15(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CNWSExpression.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoString Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_16(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoString End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_16(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSSpellScriptData Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSSpellScriptData> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_17(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CNWSSpellScriptData.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSSpellScriptData End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSSpellScriptData> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_17(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CNWSSpellScriptData.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWCCMessageData Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWCCMessageData> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_18(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CNWCCMessageData.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWCCMessageData End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWCCMessageData> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_18(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CNWCCMessageData.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWVisibilityNode Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWVisibilityNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_19(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CNWVisibilityNode.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWVisibilityNode End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWVisibilityNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_19(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CNWVisibilityNode.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPersonalReputation Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPersonalReputation> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_20(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPersonalReputation.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPersonalReputation End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPersonalReputation> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_20(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPersonalReputation.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CFeatUseListEntry Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CFeatUseListEntry> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_21(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CFeatUseListEntry.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CFeatUseListEntry End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CFeatUseListEntry> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_21(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CFeatUseListEntry.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWLevelStats Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWLevelStats> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_22(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CNWLevelStats.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWLevelStats End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWLevelStats> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_22(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CNWLevelStats.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.ScriptParam Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.ScriptParam> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_23(__arg0);
            var __result0 = global::NWN.LowLevel.ScriptParam.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.ScriptParam End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.ScriptParam> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_23(__arg0);
            var __result0 = global::NWN.LowLevel.ScriptParam.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWItemProperty Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWItemProperty> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_24(__arg0);
            var __result0 = global::NWN.LowLevel.CNWItemProperty.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWItemProperty End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWItemProperty> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_24(__arg0);
            var __result0 = global::NWN.LowLevel.CNWItemProperty.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.SJournalEntry Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.SJournalEntry> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_25(__arg0);
            var __result0 = global::NWN.LowLevel.SJournalEntry.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.SJournalEntry End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.SJournalEntry> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_25(__arg0);
            var __result0 = global::NWN.LowLevel.SJournalEntry.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSTagNode Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSTagNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_26(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSTagNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSTagNode End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSTagNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_26(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSTagNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CWorldJournalEntry Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CWorldJournalEntry> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_27(__arg0);
            var __result0 = global::NWN.LowLevel.CWorldJournalEntry.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CWorldJournalEntry End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CWorldJournalEntry> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_27(__arg0);
            var __result0 = global::NWN.LowLevel.CWorldJournalEntry.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_28(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_28(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_29(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_29(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPlayerJournalQuestUpdates.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CResRef Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CResRef> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_30(__arg0);
            var __result0 = global::NWN.LowLevel.CResRef.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CResRef End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CResRef> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_30(__arg0);
            var __result0 = global::NWN.LowLevel.CResRef.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CStoreCustomer Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CStoreCustomer> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_31(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CStoreCustomer.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CStoreCustomer End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CStoreCustomer> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_31(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CStoreCustomer.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.SSubNetProfile Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.SSubNetProfile> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_32(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.SSubNetProfile.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.SSubNetProfile End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.SSubNetProfile> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_32(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.SSubNetProfile.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CScriptLog Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CScriptLog> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_33(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CScriptLog.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CScriptLog End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CScriptLog> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_33(__arg0);
            __IntPtr ____ret = __ret == __IntPtr.Zero ? __IntPtr.Zero : new __IntPtr(*(void**) __ret);
            var __result0 = global::NWN.LowLevel.CScriptLog.__GetOrCreateInstance(____ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPlayerCharacterListClass_st Begin(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.NWPlayerCharacterListClass_st> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.Begin_34(__arg0);
            var __result0 = global::NWN.LowLevel.NWPlayerCharacterListClass_st.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPlayerCharacterListClass_st End(this global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.NWPlayerCharacterListClass_st> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.End_34(__arg0);
            var __result0 = global::NWN.LowLevel.NWPlayerCharacterListClass_st.__GetOrCreateInstance(__ret, false);
            return __result0;
        }
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
