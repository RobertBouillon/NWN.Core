// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    public unsafe partial class CNWSPlayer : global::NWN.LowLevel.CNWSClient, IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 240)]
        public new partial struct __Internal
        {
            [FieldOffset(0)]
            internal __IntPtr vptr_CNWSClient;

            [FieldOffset(8)]
            internal uint m_nPlayerID;

            [FieldOffset(12)]
            internal int m_nLanguage;

            [FieldOffset(16)]
            internal __IntPtr m_pActiveObjectsLastUpdate;

            [FieldOffset(24)]
            internal __IntPtr m_pActivePartyObjectsLastUpdate;

            [FieldOffset(32)]
            internal int m_nAreaTransitionBMP;

            [FieldOffset(40)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sAreaTransitionName;

            [FieldOffset(56)]
            internal int m_bFloatyEffects;

            [FieldOffset(60)]
            internal int m_nAreas;

            [FieldOffset(64)]
            internal __IntPtr m_pAreas;

            [FieldOffset(72)]
            internal byte m_nLoginState;

            [FieldOffset(76)]
            internal uint m_oidNWSObject;

            [FieldOffset(80)]
            internal ulong m_nLastUpdatedTime;

            [FieldOffset(88)]
            internal uint m_oidLastObjectControlled;

            [FieldOffset(92)]
            internal uint m_oidPCObject;

            [FieldOffset(96)]
            internal int m_bIsPrimaryPlayer;

            [FieldOffset(100)]
            internal int m_bFromSaveGame;

            [FieldOffset(104)]
            internal int m_bFromTURD;

            [FieldOffset(108)]
            internal uint m_nPlayerListIndex;

            [FieldOffset(112)]
            internal int m_bPlayModuleListingCharacters;

            [FieldOffset(120)]
            internal __IntPtr m_pJournalQuest;

            [FieldOffset(128)]
            internal __IntPtr m_pStoreGUI;

            [FieldOffset(136)]
            internal __IntPtr m_pCharSheetGUI;

            [FieldOffset(144)]
            internal __IntPtr m_pInventoryGUI;

            [FieldOffset(152)]
            internal __IntPtr m_pOtherInventoryGUI;

            [FieldOffset(160)]
            internal __IntPtr m_pPlayerLUO;

            [FieldOffset(168)]
            internal int m_bAlwaysRun;

            [FieldOffset(172)]
            internal byte m_nCharacterType;

            [FieldOffset(173)]
            internal global::NWN.LowLevel.CResRef.__Internal m_resFileName;

            [FieldOffset(208)]
            internal int m_bCommunityNameAuthorized;

            [FieldOffset(212)]
            internal int m_bModuleInfoSucceeded;

            [FieldOffset(216)]
            internal uint m_nIFOCharacterIndex;

            [FieldOffset(220)]
            internal int m_bCutsceneState;

            [FieldOffset(224)]
            internal int m_bTargetMode;

            [FieldOffset(228)]
            internal uint m_oidDungeonMasterAvatar;

            [FieldOffset(232)]
            internal byte m_nPossessState;

            [FieldOffset(236)]
            internal int m_bWasSentITP;

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayerC2Ej", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctor(__IntPtr __instance, uint nPlayerID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayerC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer24ClearPlayerOnDestroyGameEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ClearPlayerOnDestroyGame(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer18LoadLocalCharacterEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint LoadLocalCharacter(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer15LoadDMCharacterEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint LoadDMCharacter(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer19LoadServerCharacterE7CResRefi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint LoadServerCharacter(__IntPtr __instance, global::NWN.LowLevel.CResRef.__Internal cResRef, int bSubDirChar);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer20LoadCharacterFromIFOEjiiii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr LoadCharacterFromIFO(__IntPtr __instance, uint nIndex, int bAreaLoaded, int bRunPostProcess, int bAddObjectToArray, int bDoingCharacterCopy);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer19LoadTURDInfoFromIFOEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadTURDInfoFromIFO(__IntPtr __instance, uint nIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer23GetCharacterInfoFromIFOERhPiPhRj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCharacterInfoFromIFO(__IntPtr __instance, byte* nNumClasses, int* pClasses, byte* pLevels, uint* nXP);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer16LoadCreatureDataE7CResRefP12CNWSCreature", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint LoadCreatureData(__IntPtr __instance, global::NWN.LowLevel.CResRef.__Internal cResRef, __IntPtr pCreature);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer19SaveServerCharacterEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SaveServerCharacter(__IntPtr __instance, int bBackupPlayer);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer21BackupServerCharacterERK10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int BackupServerCharacter(__IntPtr __instance, __IntPtr sFilename);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer17ValidateCharacterEPi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint ValidateCharacter(__IntPtr __instance, int* bFailedServerRestriction);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer37ValidateCharacter_SetNormalBonusFlagsEtRiS0_h", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ValidateCharacterSetNormalBonusFlags(__IntPtr __instance, ushort nFeatID, int* bNormalListFeat, int* bBonusListFeat, byte nClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer40StripAllInvalidItemPropertiesInInventoryEP12CNWSCreature", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void StripAllInvalidItemPropertiesInInventory(__IntPtr __instance, __IntPtr pCreature);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer35StripAllInvalidItemPropertiesOnItemEP8CNWSItem", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void StripAllInvalidItemPropertiesOnItem(__IntPtr __instance, __IntPtr pItem);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer14AddDMAbilitiesEP12CNWSCreature", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddDMAbilities(__IntPtr __instance, __IntPtr pCreature);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer19GetLastUpdateObjectEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetLastUpdateObject(__IntPtr __instance, uint oidLastUpdateObject);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer20SetAreaTransitionBMPEi10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetAreaTransitionBMP(__IntPtr __instance, int nIndex, __IntPtr sString);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer13AllocateAreasEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AllocateAreas(__IntPtr __instance, int nAreas);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer7AddAreaEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddArea(__IntPtr __instance, uint oidArea);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer8DropTURDEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DropTURD(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer7EatTURDEP14CNWSPlayerTURD", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void EatTURD(__IntPtr __instance, __IntPtr pTURD);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer12CleanMyTURDsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CleanMyTURDs(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer31CreateNewPlayerLastUpdateObjectEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr CreateNewPlayerLastUpdateObject(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer27ClearPlayerLastUpdateObjectEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ClearPlayerLastUpdateObject(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer32PermittedToDisplayCharacterSheetEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int PermittedToDisplayCharacterSheet(__IntPtr __instance, uint oidCreature);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer16HasExpansionPackEhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int HasExpansionPack(__IntPtr __instance, byte nPack, int bOrBetter);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer19StoreCameraSettingsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void StoreCameraSettings(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer21RestoreCameraSettingsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RestoreCameraSettings(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer14SatisfiesBuildEii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SatisfiesBuild(__IntPtr __instance, int nBuild, int nRevision);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer15PossessCreatureEjh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void PossessCreature(__IntPtr __instance, uint oidTarget, byte possessType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer23PackCreatureIntoMessageEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int PackCreatureIntoMessage(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer13GetGameObjectEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetGameObject(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer13SetGameObjectEP10CNWSObject", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetGameObject(__IntPtr __instance, __IntPtr pObject);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer13GetPlayerNameEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetPlayerName(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer18GetIsAllowedToSaveEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsAllowedToSave(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer7GetIsDMEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsDM(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSPlayer13GetIsPlayerDMEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsPlayerDM(__IntPtr __instance);
        }

        internal static new CNWSPlayer __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new CNWSPlayer(native.ToPointer(), skipVTables);
        }

        internal static new CNWSPlayer __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (CNWSPlayer)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static new CNWSPlayer __GetInstance(__IntPtr native)
        {
            if (!NativeToManagedMap.TryGetValue(native, out var managed))
                throw new System.Exception("No managed instance was found");
            var result = (CNWSPlayer)managed;
            if (result.__ownsNativeInstance)
                result.SetupVTables();
            return result;
        }

        internal static CNWSPlayer __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new CNWSPlayer(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            global::NWN.LowLevel.CNWSPlayer.__Internal.cctor(ret, new __IntPtr(&native));
            return ret.ToPointer();
        }

        private CNWSPlayer(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CNWSPlayer(void* native, bool skipVTables = false)
            : base((void*) native)
        {
            if (native == null)
                return;
            if (!skipVTables)
                SetupVTables(true);
        }

        public CNWSPlayer(uint nPlayerID)
            : this((void*) null)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWSPlayer.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            __Internal.ctor(__Instance, nPlayerID);
            SetupVTables(GetType().FullName == "NWN.LowLevel.CNWSPlayer");
        }

        public CNWSPlayer(global::NWN.LowLevel.CNWSPlayer _0)
            : this((void*) null)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWSPlayer.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            if (ReferenceEquals(_0, null))
                throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = _0.__Instance;
            __Internal.cctor(__Instance, __arg0);
            SetupVTables(GetType().FullName == "NWN.LowLevel.CNWSPlayer");
        }

        public void ClearPlayerOnDestroyGame()
        {
            __Internal.ClearPlayerOnDestroyGame(__Instance);
        }

        public uint LoadLocalCharacter()
        {
            var __ret = __Internal.LoadLocalCharacter(__Instance);
            return __ret;
        }

        public uint LoadDMCharacter()
        {
            var __ret = __Internal.LoadDMCharacter(__Instance);
            return __ret;
        }

        public uint LoadServerCharacter(global::NWN.LowLevel.CResRef cResRef, int bSubDirChar)
        {
            if (ReferenceEquals(cResRef, null))
                throw new global::System.ArgumentNullException("cResRef", "Cannot be null because it is passed by value.");
            var __arg0 = cResRef.__Instance;
            var __ret = __Internal.LoadServerCharacter(__Instance, *(global::NWN.LowLevel.CResRef.__Internal*) __arg0, bSubDirChar);
            return __ret;
        }

        public global::NWN.LowLevel.CNWSCreature LoadCharacterFromIFO(uint nIndex, int bAreaLoaded, int bRunPostProcess, int bAddObjectToArray, int bDoingCharacterCopy)
        {
            var __ret = __Internal.LoadCharacterFromIFO(__Instance, nIndex, bAreaLoaded, bRunPostProcess, bAddObjectToArray, bDoingCharacterCopy);
            var __result0 = global::NWN.LowLevel.CNWSCreature.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public void LoadTURDInfoFromIFO(uint nIndex)
        {
            __Internal.LoadTURDInfoFromIFO(__Instance, nIndex);
        }

        public int GetCharacterInfoFromIFO(byte* nNumClasses, ref int pClasses, byte* pLevels, ref uint nXP)
        {
            fixed (int* __pClasses1 = &pClasses)
            {
                var __arg1 = __pClasses1;
                fixed (uint* __nXP3 = &nXP)
                {
                    var __arg3 = __nXP3;
                    var __ret = __Internal.GetCharacterInfoFromIFO(__Instance, nNumClasses, __arg1, pLevels, __arg3);
                    return __ret;
                }
            }
        }

        public uint LoadCreatureData(global::NWN.LowLevel.CResRef cResRef, global::NWN.LowLevel.CNWSCreature pCreature)
        {
            if (ReferenceEquals(cResRef, null))
                throw new global::System.ArgumentNullException("cResRef", "Cannot be null because it is passed by value.");
            var __arg0 = cResRef.__Instance;
            var __arg1 = pCreature is null ? __IntPtr.Zero : pCreature.__Instance;
            var __ret = __Internal.LoadCreatureData(__Instance, *(global::NWN.LowLevel.CResRef.__Internal*) __arg0, __arg1);
            return __ret;
        }

        public int SaveServerCharacter(int bBackupPlayer)
        {
            var __ret = __Internal.SaveServerCharacter(__Instance, bBackupPlayer);
            return __ret;
        }

        public int BackupServerCharacter(global::NWN.LowLevel.CExoString sFilename)
        {
            if (ReferenceEquals(sFilename, null))
                throw new global::System.ArgumentNullException("sFilename", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sFilename.__Instance;
            var __ret = __Internal.BackupServerCharacter(__Instance, __arg0);
            return __ret;
        }

        public uint ValidateCharacter(ref int bFailedServerRestriction)
        {
            fixed (int* __bFailedServerRestriction0 = &bFailedServerRestriction)
            {
                var __arg0 = __bFailedServerRestriction0;
                var __ret = __Internal.ValidateCharacter(__Instance, __arg0);
                return __ret;
            }
        }

        public void ValidateCharacterSetNormalBonusFlags(ushort nFeatID, ref int bNormalListFeat, ref int bBonusListFeat, byte nClass)
        {
            fixed (int* __bNormalListFeat1 = &bNormalListFeat)
            {
                var __arg1 = __bNormalListFeat1;
                fixed (int* __bBonusListFeat2 = &bBonusListFeat)
                {
                    var __arg2 = __bBonusListFeat2;
                    __Internal.ValidateCharacterSetNormalBonusFlags(__Instance, nFeatID, __arg1, __arg2, nClass);
                }
            }
        }

        public void StripAllInvalidItemPropertiesInInventory(global::NWN.LowLevel.CNWSCreature pCreature)
        {
            var __arg0 = pCreature is null ? __IntPtr.Zero : pCreature.__Instance;
            __Internal.StripAllInvalidItemPropertiesInInventory(__Instance, __arg0);
        }

        public void StripAllInvalidItemPropertiesOnItem(global::NWN.LowLevel.CNWSItem pItem)
        {
            var __arg0 = pItem is null ? __IntPtr.Zero : pItem.__Instance;
            __Internal.StripAllInvalidItemPropertiesOnItem(__Instance, __arg0);
        }

        public void AddDMAbilities(global::NWN.LowLevel.CNWSCreature pCreature)
        {
            var __arg0 = pCreature is null ? __IntPtr.Zero : pCreature.__Instance;
            __Internal.AddDMAbilities(__Instance, __arg0);
        }

        public global::NWN.LowLevel.CLastUpdateObject GetLastUpdateObject(uint oidLastUpdateObject)
        {
            var __ret = __Internal.GetLastUpdateObject(__Instance, oidLastUpdateObject);
            var __result0 = global::NWN.LowLevel.CLastUpdateObject.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public void SetAreaTransitionBMP(int nIndex, global::NWN.LowLevel.CExoString sString)
        {
            if (ReferenceEquals(sString, null))
                throw new global::System.ArgumentNullException("sString", "Cannot be null because it is passed by value.");
            var __arg1 = sString.__Instance;
            __Internal.SetAreaTransitionBMP(__Instance, nIndex, __arg1);
        }

        public void AllocateAreas(int nAreas)
        {
            __Internal.AllocateAreas(__Instance, nAreas);
        }

        public int AddArea(uint oidArea)
        {
            var __ret = __Internal.AddArea(__Instance, oidArea);
            return __ret;
        }

        public void DropTURD()
        {
            __Internal.DropTURD(__Instance);
        }

        public void EatTURD(global::NWN.LowLevel.CNWSPlayerTURD pTURD)
        {
            var __arg0 = pTURD is null ? __IntPtr.Zero : pTURD.__Instance;
            __Internal.EatTURD(__Instance, __arg0);
        }

        public void CleanMyTURDs()
        {
            __Internal.CleanMyTURDs(__Instance);
        }

        public global::NWN.LowLevel.CNWSPlayerLastUpdateObject CreateNewPlayerLastUpdateObject()
        {
            var __ret = __Internal.CreateNewPlayerLastUpdateObject(__Instance);
            var __result0 = global::NWN.LowLevel.CNWSPlayerLastUpdateObject.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public void ClearPlayerLastUpdateObject()
        {
            __Internal.ClearPlayerLastUpdateObject(__Instance);
        }

        public int PermittedToDisplayCharacterSheet(uint oidCreature)
        {
            var __ret = __Internal.PermittedToDisplayCharacterSheet(__Instance, oidCreature);
            return __ret;
        }

        public int HasExpansionPack(byte nPack, int bOrBetter)
        {
            var __ret = __Internal.HasExpansionPack(__Instance, nPack, bOrBetter);
            return __ret;
        }

        public void StoreCameraSettings()
        {
            __Internal.StoreCameraSettings(__Instance);
        }

        public void RestoreCameraSettings()
        {
            __Internal.RestoreCameraSettings(__Instance);
        }

        public int SatisfiesBuild(int nBuild, int nRevision)
        {
            var __ret = __Internal.SatisfiesBuild(__Instance, nBuild, nRevision);
            return __ret;
        }

        public void PossessCreature(uint oidTarget, byte possessType)
        {
            __Internal.PossessCreature(__Instance, oidTarget, possessType);
        }

        public static implicit operator global::NWN.LowLevel.CNWSPlayer(uint nPlayerID)
        {
            return new global::NWN.LowLevel.CNWSPlayer(nPlayerID);
        }

        public int MNAreaTransitionBMP
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAreaTransitionBMP;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAreaTransitionBMP = value;
            }
        }

        public global::NWN.LowLevel.CExoString MSAreaTransitionName
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sAreaTransitionName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sAreaTransitionName = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public int MBFloatyEffects
        {
            get
            {
                return ((__Internal*)__Instance)->m_bFloatyEffects;
            }

            set
            {
                ((__Internal*)__Instance)->m_bFloatyEffects = value;
            }
        }

        public int MNAreas
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAreas;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAreas = value;
            }
        }

        public uint* MPAreas
        {
            get
            {
                return (uint*) ((__Internal*)__Instance)->m_pAreas;
            }

            set
            {
                ((__Internal*)__Instance)->m_pAreas = (__IntPtr) value;
            }
        }

        public byte MNLoginState
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLoginState;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLoginState = value;
            }
        }

        public uint MOidNWSObject
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidNWSObject;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidNWSObject = value;
            }
        }

        public ulong MNLastUpdatedTime
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastUpdatedTime;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastUpdatedTime = value;
            }
        }

        public uint MOidLastObjectControlled
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastObjectControlled;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastObjectControlled = value;
            }
        }

        public uint MOidPCObject
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidPCObject;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidPCObject = value;
            }
        }

        public int MBIsPrimaryPlayer
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIsPrimaryPlayer;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIsPrimaryPlayer = value;
            }
        }

        public int MBFromSaveGame
        {
            get
            {
                return ((__Internal*)__Instance)->m_bFromSaveGame;
            }

            set
            {
                ((__Internal*)__Instance)->m_bFromSaveGame = value;
            }
        }

        public int MBFromTURD
        {
            get
            {
                return ((__Internal*)__Instance)->m_bFromTURD;
            }

            set
            {
                ((__Internal*)__Instance)->m_bFromTURD = value;
            }
        }

        public uint MNPlayerListIndex
        {
            get
            {
                return ((__Internal*)__Instance)->m_nPlayerListIndex;
            }

            set
            {
                ((__Internal*)__Instance)->m_nPlayerListIndex = value;
            }
        }

        public int MBPlayModuleListingCharacters
        {
            get
            {
                return ((__Internal*)__Instance)->m_bPlayModuleListingCharacters;
            }

            set
            {
                ((__Internal*)__Instance)->m_bPlayModuleListingCharacters = value;
            }
        }

        public global::NWN.LowLevel.CNWSPlayerJournalQuest MPJournalQuest
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CNWSPlayerJournalQuest.__GetOrCreateInstance(((__Internal*)__Instance)->m_pJournalQuest, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pJournalQuest = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.CNWSPlayerStoreGUI MPStoreGUI
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CNWSPlayerStoreGUI.__GetOrCreateInstance(((__Internal*)__Instance)->m_pStoreGUI, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pStoreGUI = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.CNWSPlayerCharSheetGUI MPCharSheetGUI
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CNWSPlayerCharSheetGUI.__GetOrCreateInstance(((__Internal*)__Instance)->m_pCharSheetGUI, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pCharSheetGUI = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.CNWSPlayerInventoryGUI MPInventoryGUI
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CNWSPlayerInventoryGUI.__GetOrCreateInstance(((__Internal*)__Instance)->m_pInventoryGUI, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pInventoryGUI = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.CNWSPlayerInventoryGUI MPOtherInventoryGUI
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CNWSPlayerInventoryGUI.__GetOrCreateInstance(((__Internal*)__Instance)->m_pOtherInventoryGUI, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pOtherInventoryGUI = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.CNWSPlayerLastUpdateObject MPPlayerLUO
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CNWSPlayerLastUpdateObject.__GetOrCreateInstance(((__Internal*)__Instance)->m_pPlayerLUO, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pPlayerLUO = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public int MBAlwaysRun
        {
            get
            {
                return ((__Internal*)__Instance)->m_bAlwaysRun;
            }

            set
            {
                ((__Internal*)__Instance)->m_bAlwaysRun = value;
            }
        }

        public byte MNCharacterType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCharacterType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCharacterType = value;
            }
        }

        public global::NWN.LowLevel.CResRef MResFileName
        {
            get
            {
                return global::NWN.LowLevel.CResRef.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_resFileName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_resFileName = *(global::NWN.LowLevel.CResRef.__Internal*) value.__Instance;
            }
        }

        public int MBCommunityNameAuthorized
        {
            get
            {
                return ((__Internal*)__Instance)->m_bCommunityNameAuthorized;
            }

            set
            {
                ((__Internal*)__Instance)->m_bCommunityNameAuthorized = value;
            }
        }

        public int MBModuleInfoSucceeded
        {
            get
            {
                return ((__Internal*)__Instance)->m_bModuleInfoSucceeded;
            }

            set
            {
                ((__Internal*)__Instance)->m_bModuleInfoSucceeded = value;
            }
        }

        public uint MNIFOCharacterIndex
        {
            get
            {
                return ((__Internal*)__Instance)->m_nIFOCharacterIndex;
            }

            set
            {
                ((__Internal*)__Instance)->m_nIFOCharacterIndex = value;
            }
        }

        public int MBCutsceneState
        {
            get
            {
                return ((__Internal*)__Instance)->m_bCutsceneState;
            }

            set
            {
                ((__Internal*)__Instance)->m_bCutsceneState = value;
            }
        }

        public int MBTargetMode
        {
            get
            {
                return ((__Internal*)__Instance)->m_bTargetMode;
            }

            set
            {
                ((__Internal*)__Instance)->m_bTargetMode = value;
            }
        }

        public uint MOidDungeonMasterAvatar
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidDungeonMasterAvatar;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidDungeonMasterAvatar = value;
            }
        }

        public byte MNPossessState
        {
            get
            {
                return ((__Internal*)__Instance)->m_nPossessState;
            }

            set
            {
                ((__Internal*)__Instance)->m_nPossessState = value;
            }
        }

        public int MBWasSentITP
        {
            get
            {
                return ((__Internal*)__Instance)->m_bWasSentITP;
            }

            set
            {
                ((__Internal*)__Instance)->m_bWasSentITP = value;
            }
        }

        public override global::NWN.LowLevel.CNWSPlayer AsNWSPlayer
        {
            get
            {
                return base.AsNWSPlayer;
            }
        }

        public override global::NWN.LowLevel.CNWSPlayer AsNWSDungeonMaster
        {
            get
            {
                return base.AsNWSDungeonMaster;
            }
        }

        public int PackCreatureIntoMessage
        {
            get
            {
                var __ret = __Internal.PackCreatureIntoMessage(__Instance);
                return __ret;
            }
        }

        public global::NWN.LowLevel.CNWSObject GameObject
        {
            get
            {
                var __ret = __Internal.GetGameObject(__Instance);
                var __result0 = global::NWN.LowLevel.CNWSObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }

            set
            {
                var __arg0 = value is null ? __IntPtr.Zero : value.__Instance;
                __Internal.SetGameObject(__Instance, __arg0);
            }
        }

        public global::NWN.LowLevel.CExoString PlayerName
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CExoString.__Internal();
                __Internal.GetPlayerName(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
            }
        }

        public int IsAllowedToSave
        {
            get
            {
                var __ret = __Internal.GetIsAllowedToSave(__Instance);
                return __ret;
            }
        }

        public int IsDM
        {
            get
            {
                var __ret = __Internal.GetIsDM(__Instance);
                return __ret;
            }
        }

        public int IsPlayerDM
        {
            get
            {
                var __ret = __Internal.GetIsPlayerDM(__Instance);
                return __ret;
            }
        }

        #region Virtual table interop

        // virtual ~CNWSPlayer()
        private static global::NWN.LowLevel.Delegates.Action___IntPtr _dtorDelegateInstance;

        private static void _dtorDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSPlayer.__GetInstance(__instance);
            __target.Dispose(true);
        }

        // CNWSPlayer * AsNWSDungeonMaster()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSDungeonMasterDelegateInstance;

        private static __IntPtr _AsNWSDungeonMasterDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSPlayer.__GetInstance(__instance);
            var __ret = __target.AsNWSDungeonMaster;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSPlayer * AsNWSPlayer()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSPlayerDelegateInstance;

        private static __IntPtr _AsNWSPlayerDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSPlayer.__GetInstance(__instance);
            var __ret = __target.AsNWSPlayer;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        internal static new class VTableLoader
        {
            private static volatile bool initialized;
            private static readonly IntPtr*[] ManagedVTables = new IntPtr*[1];
            private static readonly IntPtr*[] ManagedVTablesDtorOnly = new IntPtr*[1];
            private static readonly IntPtr[] Thunks = new IntPtr[3];
            private static CppSharp.Runtime.VTables VTables;
            private static readonly global::System.Collections.Generic.List<CppSharp.Runtime.SafeUnmanagedMemoryHandle>
                SafeHandles = new global::System.Collections.Generic.List<CppSharp.Runtime.SafeUnmanagedMemoryHandle>();

            static VTableLoader()
            {
                _dtorDelegateInstance += _dtorDelegateHook;
                _AsNWSDungeonMasterDelegateInstance += _AsNWSDungeonMasterDelegateHook;
                _AsNWSPlayerDelegateInstance += _AsNWSPlayerDelegateHook;
                Thunks[0] = Marshal.GetFunctionPointerForDelegate(_dtorDelegateInstance);
                Thunks[1] = Marshal.GetFunctionPointerForDelegate(_AsNWSDungeonMasterDelegateInstance);
                Thunks[2] = Marshal.GetFunctionPointerForDelegate(_AsNWSPlayerDelegateInstance);
            }

            public static CppSharp.Runtime.VTables SetupVTables(IntPtr instance, bool destructorOnly = false)
            {
                if (!initialized)
                {
                    lock (ManagedVTables)
                    {
                        if (!initialized)
                        {
                            initialized = true;
                            VTables.Tables = new IntPtr[] { *(IntPtr*)(instance + 0) };
                            VTables.Methods = new Delegate[1][];
                            ManagedVTablesDtorOnly[0] = CppSharp.Runtime.VTables.CloneTable(SafeHandles, instance, 0, 6);
                            ManagedVTablesDtorOnly[0][1] = Thunks[0];
                            ManagedVTables[0] = CppSharp.Runtime.VTables.CloneTable(SafeHandles, instance, 0, 6);
                            ManagedVTables[0][1] = Thunks[0];
                            ManagedVTables[0][2] = Thunks[1];
                            ManagedVTables[0][3] = Thunks[2];
                            VTables.Methods[0] = new Delegate[6];
                        }
                    }
                }

                if (destructorOnly)
                {
                    *(IntPtr**)(instance + 0) = ManagedVTablesDtorOnly[0];
                }
                else
                {
                    *(IntPtr**)(instance + 0) = ManagedVTables[0];
                }
                return VTables;
            }
        }

        internal override CppSharp.Runtime.VTables __VTables
        { 
            get {
                if (__vtables.IsEmpty)
                    __vtables.Tables = new IntPtr[] { *(IntPtr*)(__Instance + 0) };
                return __vtables;
            }

            set {        
                __vtables = value;
            }
        }

        internal override void SetupVTables(bool destructorOnly = false)
        {
            if (__VTables.IsTransient)
                __VTables = VTableLoader.SetupVTables(__Instance, destructorOnly);
        }
        #endregion
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
