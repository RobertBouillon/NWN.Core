// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    public unsafe partial class CNWSItem : global::NWN.LowLevel.CNWItem, global::NWN.LowLevel.ICNWSObject, IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 1144)]
        public new partial struct __Internal
        {
            [FieldOffset(0)]
            internal __IntPtr vptr_CNWItem;

            [FieldOffset(8)]
            internal fixed byte m_nLayeredTextureColors[6];

            [FieldOffset(16)]
            internal __IntPtr m_pLayeredTextureColorsPerPart;

            [FieldOffset(64)]
            internal uint m_nBaseItem;

            [FieldOffset(72)]
            internal __IntPtr vptr_CGameObject;

            [FieldOffset(80)]
            internal uint m_idSelf;

            [FieldOffset(84)]
            internal byte m_nObjectType;

            [FieldOffset(88)]
            internal __IntPtr m_pNwnxData;

            [FieldOffset(96)]
            internal global::NWN.LowLevel.CExoLocString.__Internal m_sForGCC;

            [FieldOffset(112)]
            internal ushort m_nGroupID;

            [FieldOffset(114)]
            internal ushort m_nLastGroupID;

            [FieldOffset(120)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sTag;

            [FieldOffset(136)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sTemplate;

            [FieldOffset(152)]
            internal global::NWN.LowLevel.CResRef.__Internal m_cPortrait;

            [FieldOffset(184)]
            internal ushort m_nPortraitId;

            [FieldOffset(192)]
            internal __IntPtr m_pDialog;

            [FieldOffset(200)]
            internal uint m_nDialogDelayCalendar;

            [FieldOffset(204)]
            internal uint m_nDialogDelayTimeOfDay;

            [FieldOffset(208)]
            internal int m_bDialogStored;

            [FieldOffset(212)]
            internal uint m_nDialogStoredEntry;

            [FieldOffset(216)]
            internal int m_bDialogPaused;

            [FieldOffset(220)]
            internal uint m_oidDialogOwner;

            [FieldOffset(224)]
            internal int m_nDialogAnimation;

            [FieldOffset(228)]
            internal int m_nAILevel;

            [FieldOffset(232)]
            internal int m_bLock;

            [FieldOffset(240)]
            internal __IntPtr m_pAIPosList;

            [FieldOffset(248)]
            internal ushort m_nCurrentAction;

            [FieldOffset(252)]
            internal uint m_oidCurrentActionTarget;

            [FieldOffset(256)]
            internal __IntPtr m_pAnimation;

            [FieldOffset(264)]
            internal uint m_oidArea;

            [FieldOffset(268)]
            internal global::NWN.LowLevel.Vector.__Internal m_vPosition;

            [FieldOffset(280)]
            internal global::NWN.LowLevel.Vector.__Internal m_vOrientation;

            [FieldOffset(292)]
            internal uint m_nLastUpdateCalendarDay;

            [FieldOffset(296)]
            internal uint m_nLastUpdateTimeOfDay;

            [FieldOffset(300)]
            internal uint m_nStartActionCalendarDay;

            [FieldOffset(304)]
            internal uint m_nStartActionTimeOfDay;

            [FieldOffset(308)]
            internal uint m_nLastAnimationCalendarDay;

            [FieldOffset(312)]
            internal uint m_nLastAnimationTimeOfDay;

            [FieldOffset(316)]
            internal uint m_nAIUpdateDifference;

            [FieldOffset(320)]
            internal int m_nAnimation;

            [FieldOffset(324)]
            internal float m_fAnimSpeed;

            [FieldOffset(328)]
            internal int m_nCurrentHitPoints;

            [FieldOffset(332)]
            internal int m_nBaseHitPoints;

            [FieldOffset(336)]
            internal int m_nTemporaryHitPoints;

            [FieldOffset(340)]
            internal int m_bAbleToModifyActionQueue;

            [FieldOffset(344)]
            internal int m_bDestroyable;

            [FieldOffset(348)]
            internal int m_bRaiseable;

            [FieldOffset(352)]
            internal int m_bSelectableWhenDead;

            [FieldOffset(356)]
            internal int m_bPlotObject;

            [FieldOffset(360)]
            internal global::NWN.LowLevel.CExoLinkedList.__Internal m_lQueuedActions;

            [FieldOffset(368)]
            internal global::NWN.LowLevel.CNWSScriptVarTable.__Internal m_ScriptVars;

            [FieldOffset(432)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_appliedEffects;

            [FieldOffset(448)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_lstLoopingVisualEffects;

            [FieldOffset(464)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_lstEffectTargets;

            [FieldOffset(480)]
            internal int m_bPendingEffectRemoval;

            [FieldOffset(484)]
            internal uint m_nSavingThrowSpellId;

            [FieldOffset(488)]
            internal int m_nCustomScriptEventId;

            [FieldOffset(492)]
            internal uint m_oidKiller;

            [FieldOffset(496)]
            internal uint m_oidLastHostileActor;

            [FieldOffset(500)]
            internal uint m_oidLastAttacker;

            [FieldOffset(504)]
            internal uint m_oidLastDamager;

            [FieldOffset(508)]
            internal uint m_oidLastDisturbed;

            [FieldOffset(512)]
            internal __IntPtr m_pLastDamageList;

            [FieldOffset(520)]
            internal ushort m_nLastAttackType;

            [FieldOffset(522)]
            internal byte m_nLastAttackMode;

            [FieldOffset(524)]
            internal uint m_oidLastWeaponAttackedWith;

            [FieldOffset(528)]
            internal uint m_oidInventoryDisturbItem;

            [FieldOffset(532)]
            internal int m_nInventoryDisturbType;

            [FieldOffset(536)]
            internal uint m_oidLastSpeaker;

            [FieldOffset(540)]
            internal int m_bPrivateConversation;

            [FieldOffset(544)]
            internal int m_nConversationPlayHello;

            [FieldOffset(552)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sLastConversationResref;

            [FieldOffset(568)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_aListenExpressions;

            [FieldOffset(584)]
            internal int m_nMatchedPos;

            [FieldOffset(588)]
            internal int m_bListening;

            [FieldOffset(592)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_aExpressionStrings;

            [FieldOffset(608)]
            internal __IntPtr m_nDamageImmunity;

            [FieldOffset(616)]
            internal global::NWN.LowLevel.Vector.__Internal m_vLastSpellTarget;

            [FieldOffset(628)]
            internal uint m_oidLastSpellTarget;

            [FieldOffset(632)]
            internal uint m_nLastSpellId;

            [FieldOffset(636)]
            internal byte m_nLastDomainLevel;

            [FieldOffset(640)]
            internal uint m_nLastSpellProjectileTime;

            [FieldOffset(644)]
            internal int m_bLastSpellCast;

            [FieldOffset(648)]
            internal int m_bLastSpellCastSpontaneous;

            [FieldOffset(652)]
            internal byte m_nLastSpellCastMulticlass;

            [FieldOffset(653)]
            internal byte m_nLastSpellCastMetaType;

            [FieldOffset(656)]
            internal uint m_oidLastSpellCastAtMeCaster;

            [FieldOffset(660)]
            internal uint m_nLastSpellCastAtMe;

            [FieldOffset(664)]
            internal int m_bLastSpellCastAtMeHarmful;

            [FieldOffset(668)]
            internal ushort m_nLastSpellCastFeat;

            [FieldOffset(672)]
            internal __IntPtr m_pExecutingAIAction;

            [FieldOffset(680)]
            internal ushort m_nEffectArrayIndex;

            [FieldOffset(684)]
            internal int m_bApplyingPostProcessEffects;

            [FieldOffset(688)]
            internal int m_bOpenDoorAnimationPlayed;

            [FieldOffset(692)]
            internal global::NWN.LowLevel.Vector.__Internal m_vHiliteColor;

            [FieldOffset(704)]
            internal int m_nMouseCursor;

            [FieldOffset(712)]
            internal global::NWN.LowLevel.CNWSTransition.__Internal m_pTransition;

            [FieldOffset(736)]
            internal global::Std.SharedPtr.__Internal m_sqlite_db;

            [FieldOffset(752)]
            internal global::NWN.LowLevel.ObjectVisualTransformData.__Internal m_pVisualTransformData;

            [FieldOffset(792)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_lMaterialShaderParameters;

            [FieldOffset(808)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_lTextureReplaceInfo;

            [FieldOffset(824)]
            internal global::NWN.LowLevel.CNWSUUID.__Internal m_pUUID;

            [FieldOffset(856)]
            internal byte m_nLastUsedActiveProperties;

            [FieldOffset(857)]
            internal fixed byte m_pLastUsedActivePropertyUsesLeft[8];

            [FieldOffset(868)]
            internal int m_nArmorValue;

            [FieldOffset(872)]
            internal int m_bIdentified;

            [FieldOffset(876)]
            internal uint m_nOpenCount;

            [FieldOffset(880)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_lstActiveProperties;

            [FieldOffset(896)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_lstPassiveProperties;

            [FieldOffset(912)]
            internal int m_nNumCharges;

            [FieldOffset(916)]
            internal uint m_nBaseUnitCost;

            [FieldOffset(920)]
            internal uint m_nUnidentifiedCost;

            [FieldOffset(924)]
            internal int m_nAdditionalCost;

            [FieldOffset(928)]
            internal int m_bRecalculateCost;

            [FieldOffset(932)]
            internal fixed byte m_nModelPart[3];

            [FieldOffset(935)]
            internal fixed byte m_nArmorModelPart[19];

            [FieldOffset(954)]
            internal fixed byte m_nUnalteredArmorModelPart[19];

            [FieldOffset(976)]
            internal uint m_oidPossessor;

            [FieldOffset(984)]
            internal __IntPtr m_pItemRepository;

            [FieldOffset(992)]
            internal byte m_nRepositoryPositionX;

            [FieldOffset(993)]
            internal byte m_nRepositoryPositionY;

            [FieldOffset(1000)]
            internal global::NWN.LowLevel.CExoLocString.__Internal m_sIdentifiedDescription;

            [FieldOffset(1016)]
            internal global::NWN.LowLevel.CExoLocString.__Internal m_sUnidentifiedDescription;

            [FieldOffset(1032)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sIdentifiedDescriptionOverride;

            [FieldOffset(1048)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sUnidentifiedDescriptionOverride;

            [FieldOffset(1064)]
            internal global::NWN.LowLevel.CExoLocString.__Internal m_sName;

            [FieldOffset(1080)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sDisplayName;

            [FieldOffset(1096)]
            internal int m_nUpdateDisplayNameSeq;

            [FieldOffset(1100)]
            internal int m_bInfinite;

            [FieldOffset(1104)]
            internal int m_bDroppable;

            [FieldOffset(1108)]
            internal int m_bPickPocketable;

            [FieldOffset(1112)]
            internal int m_bCursed;

            [FieldOffset(1116)]
            internal int m_nStackSize;

            [FieldOffset(1120)]
            internal int m_bStolen;

            [FieldOffset(1124)]
            internal int m_nWeight;

            [FieldOffset(1128)]
            internal ushort m_nRepositoryArrayIndex;

            [FieldOffset(1130)]
            internal byte m_nVisualEffect;

            [FieldOffset(1132)]
            internal uint m_oidBarterOwner;

            [FieldOffset(1136)]
            internal int m_bHidden;

            [FieldOffset(1140)]
            internal int m_nUpdateHiddenSeq;

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItemC2Ej", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctor(__IntPtr __instance, uint oidID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItemC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem9AddToAreaEP8CNWSAreafffi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddToArea(__IntPtr __instance, __IntPtr pArea, float fX, float fY, float fZ, int bRunScripts);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem14InitRepositoryEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void InitRepository(__IntPtr __instance, uint nObjectID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem16LoadFromTemplateE7CResRefP10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int LoadFromTemplate(__IntPtr __instance, global::NWN.LowLevel.CResRef.__Internal cResRef, __IntPtr pTag);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem8LoadItemEP7CResGFFP10CResStructi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int LoadItem(__IntPtr __instance, __IntPtr pRes, __IntPtr cItemStruct, int bIsInsideAContainer);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem13ComputeWeightEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ComputeWeight(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem8SaveItemEP7CResGFFP10CResStructi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SaveItem(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct, int bExportingChar);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem11AcquireItemEPPS_jhhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AcquireItem(__IntPtr __instance, __IntPtr pItem, uint oidPossessor, byte x, byte y, int bDisplayFeedback);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem18SaveContainerItemsEP7CResGFFP10CResStructi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SaveContainerItems(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct, int bExportingChar);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem18SaveItemPropertiesEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SaveItemProperties(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem15LoadDataFromGffEP7CResGFFP10CResStructi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int LoadDataFromGff(__IntPtr __instance, __IntPtr pRes, __IntPtr pCreatureStruct, int bIsInsideAContainer);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem14RemoveFromAreaEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveFromArea(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem12SetPossessorEjiii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetPossessor(__IntPtr __instance, uint oidPossessor, int bRunScripts, int bDisplayFeedback, int nStackSize);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem13OpenInventoryEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void OpenInventory(__IntPtr __instance, uint oidOpener);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem14CloseInventoryEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CloseInventory(__IntPtr __instance, uint oidCloser, int bUpdatePlayer);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem8CopyItemEPS_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CopyItem(__IntPtr __instance, __IntPtr pSourceItem, int bCopyVars);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem25ReadContainerItemsFromGffEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ReadContainerItemsFromGff(__IntPtr __instance, __IntPtr pRes, __IntPtr pGffItemStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem7GetCostEiiii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetCost(__IntPtr __instance, int bIncludeStackSize, int bIdentifiedCost, int bUseILRStackSize, int bIgnorePlotFlag);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem13SetIdentifiedEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetIdentified(__IntPtr __instance, int bIdentified);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem9MergeItemEPS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int MergeItem(__IntPtr __instance, __IntPtr pItemToMerge);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem9SplitItemEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr SplitItem(__IntPtr __instance, int nNumberToSplitOff);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem13SetNumChargesEii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetNumCharges(__IntPtr __instance, int nNumCharges, int bUpdateActiveProperties);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem29GetUsedActivePropertyUsesLeftEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetUsedActivePropertyUsesLeft(__IntPtr __instance, byte nProperty);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem26UpdateUsedActivePropertiesEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void UpdateUsedActiveProperties(__IntPtr __instance, int bSendFullList);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem27RestoreUsedActivePropertiesEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RestoreUsedActiveProperties(__IntPtr __instance, int bLoading);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem25RestoreUsedActivePropertyEP15CNWItemPropertyi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RestoreUsedActiveProperty(__IntPtr __instance, __IntPtr pProperty, int bLoading);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem14ActivePropertyEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int ActiveProperty(__IntPtr __instance, ushort nPropertyName);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem17AddActivePropertyE15CNWItemProperty", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddActiveProperty(__IntPtr __instance, __IntPtr cNewProperty);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem20RemoveActivePropertyEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int RemoveActiveProperty(__IntPtr __instance, int nIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem18AddPassivePropertyE15CNWItemProperty", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddPassiveProperty(__IntPtr __instance, __IntPtr cNewProperty);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem21RemovePassivePropertyEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int RemovePassiveProperty(__IntPtr __instance, int nIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem17GetActivePropertyEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetActiveProperty(__IntPtr __instance, int nIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem18GetPassivePropertyEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPassiveProperty(__IntPtr __instance, int nIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem23GetPropertyByTypeExistsEtt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetPropertyByTypeExists(__IntPtr __instance, ushort nPropertyName, ushort nSubType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem17GetPropertyByTypeEPP15CNWItemPropertytt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetPropertyByType(__IntPtr __instance, __IntPtr ppcItemProperty, ushort nPropertyName, ushort nSubType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem19ApplyItemPropertiesEP12CNWSCreatureji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ApplyItemProperties(__IntPtr __instance, __IntPtr pCreature, uint nInventorySlot, int bLoadingGame);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem20RemoveItemPropertiesEP12CNWSCreaturej", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveItemProperties(__IntPtr __instance, __IntPtr pCreature, uint nInventorySlot);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem11CompareItemEPS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CompareItem(__IntPtr __instance, __IntPtr pItemToCompare);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem22CloseItemForAllPlayersEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CloseItemForAllPlayers(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem18UpdateVisualEffectEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void UpdateVisualEffect(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem18CalculateBaseCostsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CalculateBaseCosts(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem20CalculatePassiveCostEP15CNWItemProperty", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern float CalculatePassiveCost(__IntPtr __instance, __IntPtr pItemProperty);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject14TestActionListEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TestActionList(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject9AddActionEjtjPvjS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddAction(__IntPtr __instance, uint nActionId, ushort nGroupId, uint nParamType1, __IntPtr pParameter1, uint nParamType2, __IntPtr pParameter2, uint nParamType3, __IntPtr pParameter3, uint nParamType4, __IntPtr pParameter4, uint nParamType5, __IntPtr pParameter5, uint nParamType6, __IntPtr pParameter6, uint nParamType7, __IntPtr pParameter7, uint nParamType8, __IntPtr pParameter8, uint nParamType9, __IntPtr pParameter9, uint nParamType10, __IntPtr pParameter10, uint nParamType11, __IntPtr pParameter11, uint nParamType12, __IntPtr pParameter12);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject16AddActionToFrontEjtjPvjS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddActionToFront(__IntPtr __instance, uint nActionId, ushort nGroupId, uint nParamType1, __IntPtr pParameter1, uint nParamType2, __IntPtr pParameter2, uint nParamType3, __IntPtr pParameter3, uint nParamType4, __IntPtr pParameter4, uint nParamType5, __IntPtr pParameter5, uint nParamType6, __IntPtr pParameter6, uint nParamType7, __IntPtr pParameter7, uint nParamType8, __IntPtr pParameter8, uint nParamType9, __IntPtr pParameter9, uint nParamType10, __IntPtr pParameter10, uint nParamType11, __IntPtr pParameter11, uint nParamType12, __IntPtr pParameter12);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject19AddActionAfterFrontEjtjPvjS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_jS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddActionAfterFront(__IntPtr __instance, uint nActionId, ushort nGroupId, uint nParamType1, __IntPtr pParameter1, uint nParamType2, __IntPtr pParameter2, uint nParamType3, __IntPtr pParameter3, uint nParamType4, __IntPtr pParameter4, uint nParamType5, __IntPtr pParameter5, uint nParamType6, __IntPtr pParameter6, uint nParamType7, __IntPtr pParameter7, uint nParamType8, __IntPtr pParameter8, uint nParamType9, __IntPtr pParameter9, uint nParamType10, __IntPtr pParameter10, uint nParamType11, __IntPtr pParameter11, uint nParamType12, __IntPtr pParameter12);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject21SetGroupInterruptableEti", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetGroupInterruptable(__IntPtr __instance, ushort nGroupId, int bActionInterruptable);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18AddUseObjectActionEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUseObjectAction(__IntPtr __instance, uint oidObjectToUse);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18AddDoCommandActionEPv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddDoCommandAction(__IntPtr __instance, __IntPtr pScript);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18AddGiveItemActionsEjji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddGiveItemActions(__IntPtr __instance, uint oidItem, uint oidGiveTo, int bOriginatingFromScript);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18AddTakeItemActionsEjji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddTakeItemActions(__IntPtr __instance, uint oidItem, uint oidTakeFrom, int bOriginatingFromScript);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17AddOpenDoorActionEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddOpenDoorAction(__IntPtr __instance, uint oidDoor, int bRunToDoor);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18AddCloseDoorActionEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddCloseDoorAction(__IntPtr __instance, uint oidDoor, int bRunToDoor);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject21AddUnlockObjectActionEjji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddUnlockObjectAction(__IntPtr __instance, uint oidTarget, uint oidThievesTool, int nActivePropertyIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject19AddLockObjectActionEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddLockObjectAction(__IntPtr __instance, uint oidTarget);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject19AnimationStationaryEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AnimationStationary(__IntPtr __instance, ushort nAnimation);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18BindEventToHandlerEj10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void BindEventToHandler(__IntPtr __instance, uint nEventId, __IntPtr sScriptName);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject15ClearAllActionsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ClearAllActions(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject22ClearAllHostileActionsEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ClearAllHostileActions(__IntPtr __instance, uint oidTarget);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject19GetAcceptableActionEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetAcceptableAction(__IntPtr __instance, uint nActionId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18GetActionByGroupIdEtPP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetActionByGroupId(__IntPtr __instance, ushort nGroupId, __IntPtr pReturnNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject23GetPositionByGroupIndexEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPositionByGroupIndex(__IntPtr __instance, int nIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject11GetNodeByIdEtt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNodeById(__IntPtr __instance, ushort nActionId, ushort nGroupId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject11RemoveGroupEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveGroup(__IntPtr __instance, ushort nGroupId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17GetAQActionIDByIDEti", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetAQActionIDByID(__IntPtr __instance, ushort nId, int bFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17GetIDByAQActionIDEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetIDByAQActionID(__IntPtr __instance, ushort nAQActionId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject15LoadObjectStateEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadObjectState(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject15SaveObjectStateEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveObjectState(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject14CopyScriptVarsEP18CNWSScriptVarTable", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CopyScriptVars(__IntPtr __instance, __IntPtr pVarTable);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject14SetOrientationE6Vector", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetOrientation(__IntPtr __instance, global::NWN.LowLevel.Vector.__Internal vOrientation);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject11SetPositionE6Vectori", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetPosition(__IntPtr __instance, global::NWN.LowLevel.Vector.__Internal vPosition, int bDoingCharacterCopy);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject14SetDialogDelayEf", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetDialogDelay(__IntPtr __instance, float fDialogDelaySec);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject11StartDialogEjRK10CExoStringii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int StartDialog(__IntPtr __instance, uint oidObjectToDialog, __IntPtr sDialogResRef, int bPrivate, int bPlayHello);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17RunDialogOneLinerERK10CExoStringj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int RunDialogOneLiner(__IntPtr __instance, __IntPtr sDialogResRef, uint oidTarget);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject15SendDialogEntryEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SendDialogEntry(__IntPtr __instance, uint iEntry, int bPlayHelloSound);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject11ReplyDialogEjjij", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int ReplyDialog(__IntPtr __instance, uint nPlayerId, uint nReplyIndex, int bEscapeDialog, uint currentEntryIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject22RemoveObjectFromDialogEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int RemoveObjectFromDialog(__IntPtr __instance, uint oidRemove);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject12PlaySoundSetEP10CNWSPlayerh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void PlaySoundSet(__IntPtr __instance, __IntPtr pPlayer, byte nVoiceSetId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject22GetNearestObjectByNameERK10CExoStringf", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetNearestObjectByName(__IntPtr __instance, __IntPtr sName, float fRange);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject14SetDialogOwnerEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetDialogOwner(__IntPtr __instance, uint oidDialogOwner);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17SetDamageImmunityEti", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetDamageImmunity(__IntPtr __instance, ushort nFlags, int nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject22DoSpellLevelAbsorptionEPS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DoSpellLevelAbsorption(__IntPtr __instance, __IntPtr pCaster);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject15DoSpellImmunityEPS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int DoSpellImmunity(__IntPtr __instance, __IntPtr pCaster);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject21DeleteCurrentAIActionEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DeleteCurrentAIAction(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject11ApplyEffectEP11CGameEffectii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ApplyEffect(__IntPtr __instance, __IntPtr e, int bLoadingGame, int bInitialApplication);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject12RemoveEffectEP11CGameEffect", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveEffect(__IntPtr __instance, __IntPtr e);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject16RemoveEffectByIdEm", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int RemoveEffectById(__IntPtr __instance, ulong pId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject21RemoveEffectByCreatorEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveEffectByCreator(__IntPtr __instance, uint oidCreator);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject31RemoveSomeEffectsOfDurationTypeEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveSomeEffectsOfDurationType(__IntPtr __instance, ushort nDurationType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject16UpdateEffectListEjj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void UpdateEffectList(__IntPtr __instance, uint nCalendarDay, uint nTimeOfDay);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18RemoveEffectTargetEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveEffectTarget(__IntPtr __instance, uint oidTarget);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject25ClearSpellEffectsOnOthersEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ClearSpellEffectsOnOthers(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject21HasSpellEffectAppliedEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int HasSpellEffectApplied(__IntPtr __instance, uint nSpellId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject21RemoveEffectBySpellIdEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveEffectBySpellId(__IntPtr __instance, uint nSpellId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject23GetHasFeatEffectAppliedEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetHasFeatEffectApplied(__IntPtr __instance, ushort nFeatId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject22AddLoopingVisualEffectEtjh25ObjectVisualTransformData", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddLoopingVisualEffect(__IntPtr __instance, ushort nVisEffectID, uint oidOriginator, byte nBodyPart, global::NWN.LowLevel.ObjectVisualTransformData.__Internal ovtd);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject25RemoveLoopingVisualEffectEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveLoopingVisualEffect(__IntPtr __instance, ushort nVisEffectID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject15BroadcastDialogE10CExoStringf", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void BroadcastDialog(__IntPtr __instance, __IntPtr sSpokenString, float fRadius);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject30CalculateSpellRangedMissTargetEjj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::NWN.LowLevel.Vector.__Internal CalculateSpellRangedMissTarget(__IntPtr __instance, uint oidSource, uint oidTarget);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject26GetLastDamageAmountByFlagsEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetLastDamageAmountByFlags(__IntPtr __instance, int nDamageFlags);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject19SetLastHostileActorEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetLastHostileActor(__IntPtr __instance, uint oidHostileActor, int bForceSet);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject19SetListenExpressionE10CExoStringi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SetListenExpression(__IntPtr __instance, __IntPtr sExpression, int nPos);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject20TestListenExpressionE10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int TestListenExpression(__IntPtr __instance, __IntPtr sStringToTest);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject22GetListenExpressionObjEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetListenExpressionObj(__IntPtr __instance, int n);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject26AddMatchedExpressionStringERK10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddMatchedExpressionString(__IntPtr __instance, __IntPtr sString);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject29ClearMatchedExpressionStringsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ClearMatchedExpressionStrings(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject13GetReputationEjRii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetReputation(__IntPtr __instance, uint oidSource, int* bIsInParty, int bUseOriginalFaction);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18GetAIStateReactionEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetAIStateReaction(__IntPtr __instance, uint oidTarget);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject25BroadcastCounterSpellDataEP8CNWSpellP16CNWCCMessageData", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void BroadcastCounterSpellData(__IntPtr __instance, __IntPtr pSpell, __IntPtr pMessageData);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18BroadcastSpellDataEP8CNWSpellP16CNWCCMessageData", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void BroadcastSpellData(__IntPtr __instance, __IntPtr pSpell, __IntPtr pMessageData);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject23BroadcastSafeProjectileEjj6VectorS0_jhjhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void BroadcastSafeProjectile(__IntPtr __instance, uint oidOriginator, uint oidTarget, global::NWN.LowLevel.Vector.__Internal vOriginator, global::NWN.LowLevel.Vector.__Internal vTarget, uint nDelta, byte nProjectileType, uint nSpellID, byte nAttackResult, byte nProjectilePathType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18SpellCastAndImpactEj6Vectorjhjiihi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SpellCastAndImpact(__IntPtr __instance, uint nSpellId, global::NWN.LowLevel.Vector.__Internal vTargetPosition, uint oidTarget, byte nMultiClass, uint oidItem, int bSpellCountered, int bCounteringSpell, byte nProjectilePathType, int bInstantSpell);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject32CalculateLastSpellProjectileTimeEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CalculateLastSpellProjectileTime(__IntPtr __instance, byte nProjectilePathType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject12SpawnBodyBagEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SpawnBodyBag(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject14ReportOverflowEiiii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ReportOverflow(__IntPtr __instance, int nOverflowFeedbackType, int nTotal, int nError, int bCritical);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject24DestroyObjectSqlDatabaseEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DestroyObjectSqlDatabase(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject19SaveVisualTransformEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveVisualTransform(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject19LoadVisualTransformEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadVisualTransform(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject21SaveMaterialOverridesEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveMaterialOverrides(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject21LoadMaterialOverridesEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadMaterialOverrides(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject15SaveMiscVisualsEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveMiscVisuals(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject15LoadMiscVisualsEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadMiscVisuals(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject20SaveTextureOverridesEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveTextureOverrides(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject20LoadTextureOverridesEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadTextureOverrides(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18LoadSqliteDatabaseEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadSqliteDatabase(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18SaveSqliteDatabaseEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveSqliteDatabase(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject22SetVisualTransformDataERK25ObjectVisualTransformData", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetVisualTransformData(__IntPtr __instance, __IntPtr data);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject23SetMaterialShaderParamIERK10CExoStringS2_i", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetMaterialShaderParamI(__IntPtr __instance, __IntPtr sMaterialName, __IntPtr sParamName, int nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject26SetMaterialShaderParamVec4ERK10CExoStringS2_ffff", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetMaterialShaderParamVec4(__IntPtr __instance, __IntPtr sMaterialName, __IntPtr sParamName, float fValue1, float fValue2, float fValue3, float fValue4);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject25ResetMaterialShaderParamsERK10CExoStringS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ResetMaterialShaderParams(__IntPtr __instance, __IntPtr sMaterialName, __IntPtr sParamName);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17SetTextureReplaceERK10CExoStringS2_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetTextureReplace(__IntPtr __instance, __IntPtr sOld, __IntPtr sNew);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject22AddActionNodeParameterEP20CNWSObjectActionNodejjPv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddActionNodeParameter(__IntPtr __instance, __IntPtr pNode, uint nParameterNumber, uint nParameterType, __IntPtr pParameter);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject10RunActionsEjjm", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RunActions(__IntPtr __instance, uint nCalendarDay, uint nTimeOfDay, ulong nStartOfUpdate);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject27TerminateAISliceAfterActionEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int TerminateAISliceAfterAction(__IntPtr __instance, uint nActionId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject15LoadActionQueueEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadActionQueue(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject15SaveActionQueueEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveActionQueue(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject12LoadVarTableEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadVarTable(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject12SaveVarTableEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveVarTable(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject14LoadEffectListEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadEffectList(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject14SaveEffectListEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveEffectList(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject14SaveListenDataEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveListenData(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject14LoadListenDataEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadListenData(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject20AIActionDialogObjectEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionDialogObject(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject19AIActionPauseDialogEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionPauseDialog(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject20AIActionResumeDialogEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionResumeDialog(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject19AIActionSpeakStrRefEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionSpeakStrRef(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject13AIActionSpeakEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionSpeak(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject12AIActionWaitEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionWait(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17AIActionDoCommandEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionDoCommand(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17AIActionPlaySoundEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionPlaySound(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject21AIActionPlayAnimationEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionPlayAnimation(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject16AIActionGiveItemEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionGiveItem(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject16AIActionTakeItemEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionTakeItem(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17AIActionCloseDoorEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionCloseDoor(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject16AIActionOpenDoorEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionOpenDoor(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject20AIActionUnlockObjectEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionUnlockObject(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18AIActionLockObjectEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionLockObject(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17AIActionUseObjectEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionUseObject(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject22AIActionSetCommandableEP20CNWSObjectActionNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint AIActionSetCommandable(__IntPtr __instance, __IntPtr pNode);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem17ComputeArmorClassEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int ComputeArmorClass(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem14GetDamageFlagsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetDamageFlags(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem9GetWeightEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetWeight(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN8CNWSItem16GetMinEquipLevelEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetMinEquipLevel(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject18GetNumActionGroupsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetNumActionGroups(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject7GetAreaEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetArea(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject7SetAreaEP8CNWSArea", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetArea(__IntPtr __instance, __IntPtr pArea);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject13IsDialogDelayEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsDialogDelay(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17SendDialogRepliesEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SendDialogReplies(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject12UpdateDialogEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int UpdateDialog(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject10StopDialogEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int StopDialog(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject17GetScriptLocationEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetScriptLocation(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject7GetDeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetDead(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject12GetIsPCDyingEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsPCDying(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject14GetDamageLevelEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetDamageLevel(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSObject13GetNewGroupIDEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetNewGroupID(__IntPtr __instance);
        }

        internal static new CNWSItem __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new CNWSItem(native.ToPointer(), skipVTables);
        }

        internal static new CNWSItem __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (CNWSItem)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static new CNWSItem __GetInstance(__IntPtr native)
        {
            if (!NativeToManagedMap.TryGetValue(native, out var managed))
                throw new System.Exception("No managed instance was found");
            var result = (CNWSItem)managed;
            if (result.__ownsNativeInstance)
                result.SetupVTables();
            return result;
        }

        internal static CNWSItem __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new CNWSItem(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            global::NWN.LowLevel.CNWSItem.__Internal.cctor(ret, new __IntPtr(&native));
            return ret.ToPointer();
        }

        private CNWSItem(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CNWSItem(void* native, bool skipVTables = false)
            : base((void*) native)
        {
            if (native == null)
                return;
            if (!skipVTables)
                SetupVTables(true);
        }

        public CNWSItem(uint oidID)
            : this((void*) null)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWSItem.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            __Internal.ctor(__Instance, oidID);
            SetupVTables(GetType().FullName == "NWN.LowLevel.CNWSItem");
        }

        public CNWSItem(global::NWN.LowLevel.CNWSItem _0)
            : this((void*) null)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWSItem.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            if (ReferenceEquals(_0, null))
                throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = _0.__Instance;
            __Internal.cctor(__Instance, __arg0);
            SetupVTables(GetType().FullName == "NWN.LowLevel.CNWSItem");
        }

        public void AddToArea(global::NWN.LowLevel.CNWSArea pArea, float fX, float fY, float fZ, int bRunScripts)
        {
            var __arg0 = pArea is null ? __IntPtr.Zero : pArea.__Instance;
            __Internal.AddToArea(__Instance, __arg0, fX, fY, fZ, bRunScripts);
        }

        public virtual void AIUpdate()
        {
            var ___AIUpdateDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr>(0, 2);
            ___AIUpdateDelegate(__Instance);
        }

        public virtual void EventHandler(uint nEventId, uint nCallerObjectId, __IntPtr pScript, uint nCalendarDay, uint nTimeOfDay)
        {
            var ___EventHandlerDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_uint_uint___IntPtr_uint_uint>(0, 4);
            ___EventHandlerDelegate(__Instance, nEventId, nCallerObjectId, pScript, nCalendarDay, nTimeOfDay);
        }

        public void InitRepository(uint nObjectID)
        {
            __Internal.InitRepository(__Instance, nObjectID);
        }

        public int LoadFromTemplate(global::NWN.LowLevel.CResRef cResRef, global::NWN.LowLevel.CExoString pTag)
        {
            if (ReferenceEquals(cResRef, null))
                throw new global::System.ArgumentNullException("cResRef", "Cannot be null because it is passed by value.");
            var __arg0 = cResRef.__Instance;
            var __arg1 = pTag is null ? __IntPtr.Zero : pTag.__Instance;
            var __ret = __Internal.LoadFromTemplate(__Instance, *(global::NWN.LowLevel.CResRef.__Internal*) __arg0, __arg1);
            return __ret;
        }

        public int LoadItem(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct cItemStruct, int bIsInsideAContainer)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = cItemStruct is null ? __IntPtr.Zero : cItemStruct.__Instance;
            var __ret = __Internal.LoadItem(__Instance, __arg0, __arg1, bIsInsideAContainer);
            return __ret;
        }

        public void ComputeWeight()
        {
            __Internal.ComputeWeight(__Instance);
        }

        public int SaveItem(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct, int bExportingChar)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            var __ret = __Internal.SaveItem(__Instance, __arg0, __arg1, bExportingChar);
            return __ret;
        }

        public int AcquireItem(global::NWN.LowLevel.CNWSItem pItem, uint oidPossessor, byte x, byte y, int bDisplayFeedback)
        {
            var ____arg0 = pItem is null ? __IntPtr.Zero : pItem.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.AcquireItem(__Instance, __arg0, oidPossessor, x, y, bDisplayFeedback);
            return __ret;
        }

        public int SaveContainerItems(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct, int bExportingChar)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            var __ret = __Internal.SaveContainerItems(__Instance, __arg0, __arg1, bExportingChar);
            return __ret;
        }

        public int SaveItemProperties(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            var __ret = __Internal.SaveItemProperties(__Instance, __arg0, __arg1);
            return __ret;
        }

        public int LoadDataFromGff(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pCreatureStruct, int bIsInsideAContainer)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pCreatureStruct is null ? __IntPtr.Zero : pCreatureStruct.__Instance;
            var __ret = __Internal.LoadDataFromGff(__Instance, __arg0, __arg1, bIsInsideAContainer);
            return __ret;
        }

        public void RemoveFromArea()
        {
            __Internal.RemoveFromArea(__Instance);
        }

        public void SetPossessor(uint oidPossessor, int bRunScripts, int bDisplayFeedback, int nStackSize)
        {
            __Internal.SetPossessor(__Instance, oidPossessor, bRunScripts, bDisplayFeedback, nStackSize);
        }

        public void OpenInventory(uint oidOpener)
        {
            __Internal.OpenInventory(__Instance, oidOpener);
        }

        public void CloseInventory(uint oidCloser, int bUpdatePlayer)
        {
            __Internal.CloseInventory(__Instance, oidCloser, bUpdatePlayer);
        }

        public int CopyItem(global::NWN.LowLevel.CNWSItem pSourceItem, int bCopyVars)
        {
            var __arg0 = pSourceItem is null ? __IntPtr.Zero : pSourceItem.__Instance;
            var __ret = __Internal.CopyItem(__Instance, __arg0, bCopyVars);
            return __ret;
        }

        public void ReadContainerItemsFromGff(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pGffItemStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pGffItemStruct is null ? __IntPtr.Zero : pGffItemStruct.__Instance;
            __Internal.ReadContainerItemsFromGff(__Instance, __arg0, __arg1);
        }

        public uint GetCost(int bIncludeStackSize, int bIdentifiedCost, int bUseILRStackSize, int bIgnorePlotFlag)
        {
            var __ret = __Internal.GetCost(__Instance, bIncludeStackSize, bIdentifiedCost, bUseILRStackSize, bIgnorePlotFlag);
            return __ret;
        }

        public void SetIdentified(int bIdentified)
        {
            __Internal.SetIdentified(__Instance, bIdentified);
        }

        public int MergeItem(global::NWN.LowLevel.CNWSItem pItemToMerge)
        {
            var __arg0 = pItemToMerge is null ? __IntPtr.Zero : pItemToMerge.__Instance;
            var __ret = __Internal.MergeItem(__Instance, __arg0);
            return __ret;
        }

        public global::NWN.LowLevel.CNWSItem SplitItem(int nNumberToSplitOff)
        {
            var __ret = __Internal.SplitItem(__Instance, nNumberToSplitOff);
            var __result0 = global::NWN.LowLevel.CNWSItem.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public void SetNumCharges(int nNumCharges, int bUpdateActiveProperties)
        {
            __Internal.SetNumCharges(__Instance, nNumCharges, bUpdateActiveProperties);
        }

        public ushort GetUsedActivePropertyUsesLeft(byte nProperty)
        {
            var __ret = __Internal.GetUsedActivePropertyUsesLeft(__Instance, nProperty);
            return __ret;
        }

        public void UpdateUsedActiveProperties(int bSendFullList)
        {
            __Internal.UpdateUsedActiveProperties(__Instance, bSendFullList);
        }

        public void RestoreUsedActiveProperties(int bLoading)
        {
            __Internal.RestoreUsedActiveProperties(__Instance, bLoading);
        }

        public void RestoreUsedActiveProperty(global::NWN.LowLevel.CNWItemProperty pProperty, int bLoading)
        {
            var __arg0 = pProperty is null ? __IntPtr.Zero : pProperty.__Instance;
            __Internal.RestoreUsedActiveProperty(__Instance, __arg0, bLoading);
        }

        public int ActiveProperty(ushort nPropertyName)
        {
            var __ret = __Internal.ActiveProperty(__Instance, nPropertyName);
            return __ret;
        }

        public void AddActiveProperty(global::NWN.LowLevel.CNWItemProperty cNewProperty)
        {
            if (ReferenceEquals(cNewProperty, null))
                throw new global::System.ArgumentNullException("cNewProperty", "Cannot be null because it is passed by value.");
            var __arg0 = cNewProperty.__Instance;
            __Internal.AddActiveProperty(__Instance, __arg0);
        }

        public int RemoveActiveProperty(int nIndex)
        {
            var __ret = __Internal.RemoveActiveProperty(__Instance, nIndex);
            return __ret;
        }

        public void AddPassiveProperty(global::NWN.LowLevel.CNWItemProperty cNewProperty)
        {
            if (ReferenceEquals(cNewProperty, null))
                throw new global::System.ArgumentNullException("cNewProperty", "Cannot be null because it is passed by value.");
            var __arg0 = cNewProperty.__Instance;
            __Internal.AddPassiveProperty(__Instance, __arg0);
        }

        public int RemovePassiveProperty(int nIndex)
        {
            var __ret = __Internal.RemovePassiveProperty(__Instance, nIndex);
            return __ret;
        }

        public global::NWN.LowLevel.CNWItemProperty GetActiveProperty(int nIndex)
        {
            var __ret = __Internal.GetActiveProperty(__Instance, nIndex);
            var __result0 = global::NWN.LowLevel.CNWItemProperty.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public global::NWN.LowLevel.CNWItemProperty GetPassiveProperty(int nIndex)
        {
            var __ret = __Internal.GetPassiveProperty(__Instance, nIndex);
            var __result0 = global::NWN.LowLevel.CNWItemProperty.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public int GetPropertyByTypeExists(ushort nPropertyName, ushort nSubType)
        {
            var __ret = __Internal.GetPropertyByTypeExists(__Instance, nPropertyName, nSubType);
            return __ret;
        }

        public int GetPropertyByType(global::NWN.LowLevel.CNWItemProperty ppcItemProperty, ushort nPropertyName, ushort nSubType)
        {
            var ____arg0 = ppcItemProperty is null ? __IntPtr.Zero : ppcItemProperty.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.GetPropertyByType(__Instance, __arg0, nPropertyName, nSubType);
            return __ret;
        }

        public void ApplyItemProperties(global::NWN.LowLevel.CNWSCreature pCreature, uint nInventorySlot, int bLoadingGame)
        {
            var __arg0 = pCreature is null ? __IntPtr.Zero : pCreature.__Instance;
            __Internal.ApplyItemProperties(__Instance, __arg0, nInventorySlot, bLoadingGame);
        }

        public void RemoveItemProperties(global::NWN.LowLevel.CNWSCreature pCreature, uint nInventorySlot)
        {
            var __arg0 = pCreature is null ? __IntPtr.Zero : pCreature.__Instance;
            __Internal.RemoveItemProperties(__Instance, __arg0, nInventorySlot);
        }

        public int CompareItem(global::NWN.LowLevel.CNWSItem pItemToCompare)
        {
            var __arg0 = pItemToCompare is null ? __IntPtr.Zero : pItemToCompare.__Instance;
            var __ret = __Internal.CompareItem(__Instance, __arg0);
            return __ret;
        }

        public void CloseItemForAllPlayers()
        {
            __Internal.CloseItemForAllPlayers(__Instance);
        }

        public void UpdateVisualEffect()
        {
            __Internal.UpdateVisualEffect(__Instance);
        }

        public void CalculateBaseCosts()
        {
            __Internal.CalculateBaseCosts(__Instance);
        }

        public float CalculatePassiveCost(global::NWN.LowLevel.CNWItemProperty pItemProperty)
        {
            var __arg0 = pItemProperty is null ? __IntPtr.Zero : pItemProperty.__Instance;
            var __ret = __Internal.CalculatePassiveCost(__Instance, __arg0);
            return __ret;
        }

        public static implicit operator global::NWN.LowLevel.CNWSItem(uint oidID)
        {
            return new global::NWN.LowLevel.CNWSItem(oidID);
        }

        public void TestActionList()
        {
            __Internal.TestActionList(__Instance + 72);
        }

        public void AddAction(uint nActionId, ushort nGroupId, uint nParamType1, __IntPtr pParameter1, uint nParamType2, __IntPtr pParameter2, uint nParamType3, __IntPtr pParameter3, uint nParamType4, __IntPtr pParameter4, uint nParamType5, __IntPtr pParameter5, uint nParamType6, __IntPtr pParameter6, uint nParamType7, __IntPtr pParameter7, uint nParamType8, __IntPtr pParameter8, uint nParamType9, __IntPtr pParameter9, uint nParamType10, __IntPtr pParameter10, uint nParamType11, __IntPtr pParameter11, uint nParamType12, __IntPtr pParameter12)
        {
            __Internal.AddAction(__Instance + 72, nActionId, nGroupId, nParamType1, pParameter1, nParamType2, pParameter2, nParamType3, pParameter3, nParamType4, pParameter4, nParamType5, pParameter5, nParamType6, pParameter6, nParamType7, pParameter7, nParamType8, pParameter8, nParamType9, pParameter9, nParamType10, pParameter10, nParamType11, pParameter11, nParamType12, pParameter12);
        }

        public void AddActionToFront(uint nActionId, ushort nGroupId, uint nParamType1, __IntPtr pParameter1, uint nParamType2, __IntPtr pParameter2, uint nParamType3, __IntPtr pParameter3, uint nParamType4, __IntPtr pParameter4, uint nParamType5, __IntPtr pParameter5, uint nParamType6, __IntPtr pParameter6, uint nParamType7, __IntPtr pParameter7, uint nParamType8, __IntPtr pParameter8, uint nParamType9, __IntPtr pParameter9, uint nParamType10, __IntPtr pParameter10, uint nParamType11, __IntPtr pParameter11, uint nParamType12, __IntPtr pParameter12)
        {
            __Internal.AddActionToFront(__Instance + 72, nActionId, nGroupId, nParamType1, pParameter1, nParamType2, pParameter2, nParamType3, pParameter3, nParamType4, pParameter4, nParamType5, pParameter5, nParamType6, pParameter6, nParamType7, pParameter7, nParamType8, pParameter8, nParamType9, pParameter9, nParamType10, pParameter10, nParamType11, pParameter11, nParamType12, pParameter12);
        }

        public void AddActionAfterFront(uint nActionId, ushort nGroupId, uint nParamType1, __IntPtr pParameter1, uint nParamType2, __IntPtr pParameter2, uint nParamType3, __IntPtr pParameter3, uint nParamType4, __IntPtr pParameter4, uint nParamType5, __IntPtr pParameter5, uint nParamType6, __IntPtr pParameter6, uint nParamType7, __IntPtr pParameter7, uint nParamType8, __IntPtr pParameter8, uint nParamType9, __IntPtr pParameter9, uint nParamType10, __IntPtr pParameter10, uint nParamType11, __IntPtr pParameter11, uint nParamType12, __IntPtr pParameter12)
        {
            __Internal.AddActionAfterFront(__Instance + 72, nActionId, nGroupId, nParamType1, pParameter1, nParamType2, pParameter2, nParamType3, pParameter3, nParamType4, pParameter4, nParamType5, pParameter5, nParamType6, pParameter6, nParamType7, pParameter7, nParamType8, pParameter8, nParamType9, pParameter9, nParamType10, pParameter10, nParamType11, pParameter11, nParamType12, pParameter12);
        }

        public void SetGroupInterruptable(ushort nGroupId, int bActionInterruptable)
        {
            __Internal.SetGroupInterruptable(__Instance + 72, nGroupId, bActionInterruptable);
        }

        public int AddUseObjectAction(uint oidObjectToUse)
        {
            var __ret = __Internal.AddUseObjectAction(__Instance + 72, oidObjectToUse);
            return __ret;
        }

        public int AddDoCommandAction(__IntPtr pScript)
        {
            var __ret = __Internal.AddDoCommandAction(__Instance + 72, pScript);
            return __ret;
        }

        public int AddGiveItemActions(uint oidItem, uint oidGiveTo, int bOriginatingFromScript)
        {
            var __ret = __Internal.AddGiveItemActions(__Instance + 72, oidItem, oidGiveTo, bOriginatingFromScript);
            return __ret;
        }

        public int AddTakeItemActions(uint oidItem, uint oidTakeFrom, int bOriginatingFromScript)
        {
            var __ret = __Internal.AddTakeItemActions(__Instance + 72, oidItem, oidTakeFrom, bOriginatingFromScript);
            return __ret;
        }

        public int AddOpenDoorAction(uint oidDoor, int bRunToDoor)
        {
            var __ret = __Internal.AddOpenDoorAction(__Instance + 72, oidDoor, bRunToDoor);
            return __ret;
        }

        public int AddCloseDoorAction(uint oidDoor, int bRunToDoor)
        {
            var __ret = __Internal.AddCloseDoorAction(__Instance + 72, oidDoor, bRunToDoor);
            return __ret;
        }

        public int AddUnlockObjectAction(uint oidTarget, uint oidThievesTool, int nActivePropertyIndex)
        {
            var __ret = __Internal.AddUnlockObjectAction(__Instance + 72, oidTarget, oidThievesTool, nActivePropertyIndex);
            return __ret;
        }

        public int AddLockObjectAction(uint oidTarget)
        {
            var __ret = __Internal.AddLockObjectAction(__Instance + 72, oidTarget);
            return __ret;
        }

        public int AnimationStationary(ushort nAnimation)
        {
            var __ret = __Internal.AnimationStationary(__Instance + 72, nAnimation);
            return __ret;
        }

        public void BindEventToHandler(uint nEventId, global::NWN.LowLevel.CExoString sScriptName)
        {
            if (ReferenceEquals(sScriptName, null))
                throw new global::System.ArgumentNullException("sScriptName", "Cannot be null because it is passed by value.");
            var __arg1 = sScriptName.__Instance;
            __Internal.BindEventToHandler(__Instance + 72, nEventId, __arg1);
        }

        public void ClearAllActions()
        {
            __Internal.ClearAllActions(__Instance + 72);
        }

        public void ClearAllHostileActions(uint oidTarget)
        {
            __Internal.ClearAllHostileActions(__Instance + 72, oidTarget);
        }

        public virtual int ClearAction(global::NWN.LowLevel.CNWSObjectActionNode pNode, int bIsTopmostAction)
        {
            var ___ClearActionDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_int___IntPtr___IntPtr_int>(0, 31);
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = ___ClearActionDelegate(__Instance + 72, __arg0, bIsTopmostAction);
            return __ret;
        }

        public int GetAcceptableAction(uint nActionId)
        {
            var __ret = __Internal.GetAcceptableAction(__Instance + 72, nActionId);
            return __ret;
        }

        public ushort GetActionByGroupId(ushort nGroupId, global::NWN.LowLevel.CNWSObjectActionNode pReturnNode)
        {
            var ____arg1 = pReturnNode is null ? __IntPtr.Zero : pReturnNode.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetActionByGroupId(__Instance + 72, nGroupId, __arg1);
            return __ret;
        }

        public global::NWN.LowLevel.CExoLinkedListNode GetPositionByGroupIndex(int nIndex)
        {
            var __ret = __Internal.GetPositionByGroupIndex(__Instance + 72, nIndex);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public global::NWN.LowLevel.CNWSObjectActionNode GetNodeById(ushort nActionId, ushort nGroupId)
        {
            var __ret = __Internal.GetNodeById(__Instance + 72, nActionId, nGroupId);
            var __result0 = global::NWN.LowLevel.CNWSObjectActionNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public void RemoveGroup(ushort nGroupId)
        {
            __Internal.RemoveGroup(__Instance + 72, nGroupId);
        }

        public ushort GetAQActionIDByID(ushort nId, int bFeat)
        {
            var __ret = __Internal.GetAQActionIDByID(__Instance + 72, nId, bFeat);
            return __ret;
        }

        public ushort GetIDByAQActionID(ushort nAQActionId)
        {
            var __ret = __Internal.GetIDByAQActionID(__Instance + 72, nAQActionId);
            return __ret;
        }

        public void LoadObjectState(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.LoadObjectState(__Instance + 72, __arg0, __arg1);
        }

        public void SaveObjectState(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveObjectState(__Instance + 72, __arg0, __arg1);
        }

        public void CopyScriptVars(global::NWN.LowLevel.CNWSScriptVarTable pVarTable)
        {
            var __arg0 = pVarTable is null ? __IntPtr.Zero : pVarTable.__Instance;
            __Internal.CopyScriptVars(__Instance + 72, __arg0);
        }

        public virtual void SetAnimation(int nAnimation)
        {
            var ___SetAnimationDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_int>(0, 33);
            ___SetAnimationDelegate(__Instance + 72, nAnimation);
        }

        public void SetOrientation(global::NWN.LowLevel.Vector vOrientation)
        {
            if (ReferenceEquals(vOrientation, null))
                throw new global::System.ArgumentNullException("vOrientation", "Cannot be null because it is passed by value.");
            var __arg0 = vOrientation.__Instance;
            __Internal.SetOrientation(__Instance + 72, *(global::NWN.LowLevel.Vector.__Internal*) __arg0);
        }

        public void SetPosition(global::NWN.LowLevel.Vector vPosition, int bDoingCharacterCopy)
        {
            if (ReferenceEquals(vPosition, null))
                throw new global::System.ArgumentNullException("vPosition", "Cannot be null because it is passed by value.");
            var __arg0 = vPosition.__Instance;
            __Internal.SetPosition(__Instance + 72, *(global::NWN.LowLevel.Vector.__Internal*) __arg0, bDoingCharacterCopy);
        }

        public void SetDialogDelay(float fDialogDelaySec)
        {
            __Internal.SetDialogDelay(__Instance + 72, fDialogDelaySec);
        }

        public int StartDialog(uint oidObjectToDialog, global::NWN.LowLevel.CExoString sDialogResRef, int bPrivate, int bPlayHello)
        {
            if (ReferenceEquals(sDialogResRef, null))
                throw new global::System.ArgumentNullException("sDialogResRef", "Cannot be null because it is a C++ reference (&).");
            var __arg1 = sDialogResRef.__Instance;
            var __ret = __Internal.StartDialog(__Instance + 72, oidObjectToDialog, __arg1, bPrivate, bPlayHello);
            return __ret;
        }

        public int RunDialogOneLiner(global::NWN.LowLevel.CExoString sDialogResRef, uint oidTarget)
        {
            if (ReferenceEquals(sDialogResRef, null))
                throw new global::System.ArgumentNullException("sDialogResRef", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sDialogResRef.__Instance;
            var __ret = __Internal.RunDialogOneLiner(__Instance + 72, __arg0, oidTarget);
            return __ret;
        }

        public int SendDialogEntry(uint iEntry, int bPlayHelloSound)
        {
            var __ret = __Internal.SendDialogEntry(__Instance + 72, iEntry, bPlayHelloSound);
            return __ret;
        }

        public int ReplyDialog(uint nPlayerId, uint nReplyIndex, int bEscapeDialog, uint currentEntryIndex)
        {
            var __ret = __Internal.ReplyDialog(__Instance + 72, nPlayerId, nReplyIndex, bEscapeDialog, currentEntryIndex);
            return __ret;
        }

        public int RemoveObjectFromDialog(uint oidRemove)
        {
            var __ret = __Internal.RemoveObjectFromDialog(__Instance + 72, oidRemove);
            return __ret;
        }

        public void PlaySoundSet(global::NWN.LowLevel.CNWSPlayer pPlayer, byte nVoiceSetId)
        {
            var __arg0 = pPlayer is null ? __IntPtr.Zero : pPlayer.__Instance;
            __Internal.PlaySoundSet(__Instance + 72, __arg0, nVoiceSetId);
        }

        public uint GetNearestObjectByName(global::NWN.LowLevel.CExoString sName, float fRange)
        {
            if (ReferenceEquals(sName, null))
                throw new global::System.ArgumentNullException("sName", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sName.__Instance;
            var __ret = __Internal.GetNearestObjectByName(__Instance + 72, __arg0, fRange);
            return __ret;
        }

        public void SetDialogOwner(uint oidDialogOwner)
        {
            __Internal.SetDialogOwner(__Instance + 72, oidDialogOwner);
        }

        public virtual short GetMaxHitPoints(int bIncludeToughness)
        {
            var ___GetMaxHitPointsDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_short___IntPtr_int>(0, 39);
            var __ret = ___GetMaxHitPointsDelegate(__Instance + 72, bIncludeToughness);
            return __ret;
        }

        public virtual short GetCurrentHitPoints(int bExcludeTemporaryHits)
        {
            var ___GetCurrentHitPointsDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_short___IntPtr_int>(0, 40);
            var __ret = ___GetCurrentHitPointsDelegate(__Instance + 72, bExcludeTemporaryHits);
            return __ret;
        }

        public virtual void DoDamage(int nDamage)
        {
            var ___DoDamageDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_int>(0, 41);
            ___DoDamageDelegate(__Instance + 72, nDamage);
        }

        public virtual int DoDamageReduction(global::NWN.LowLevel.CNWSCreature pDamager, int nDamage, byte nDamagePower, int bSimulation, int bCombatDamage)
        {
            var ___DoDamageReductionDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_int___IntPtr___IntPtr_int_byte_int_int>(0, 42);
            var __arg0 = pDamager is null ? __IntPtr.Zero : pDamager.__Instance;
            var __ret = ___DoDamageReductionDelegate(__Instance + 72, __arg0, nDamage, nDamagePower, bSimulation, bCombatDamage);
            return __ret;
        }

        public virtual int DoDamageResistance(global::NWN.LowLevel.CNWSCreature pDamager, int nDamage, ushort nFlags, int bSimulation, int bCombatDamage, int bBaseWeaponDamage)
        {
            var ___DoDamageResistanceDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_int___IntPtr___IntPtr_int_ushort_int_int_int>(0, 43);
            var __arg0 = pDamager is null ? __IntPtr.Zero : pDamager.__Instance;
            var __ret = ___DoDamageResistanceDelegate(__Instance + 72, __arg0, nDamage, nFlags, bSimulation, bCombatDamage, bBaseWeaponDamage);
            return __ret;
        }

        public virtual int GetMaximumDamageResistanceVsDamageFlag(ushort nDamageFlag, ref int nBestIndex)
        {
            var ___GetMaximumDamageResistanceVsDamageFlagDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_int___IntPtr_ushort_intPtr>(0, 44);
            fixed (int* __nBestIndex1 = &nBestIndex)
            {
                var __arg1 = __nBestIndex1;
                var __ret = ___GetMaximumDamageResistanceVsDamageFlagDelegate(__Instance + 72, nDamageFlag, __arg1);
                return __ret;
            }
        }

        public virtual int DoDamageImmunity(global::NWN.LowLevel.CNWSCreature pDamager, int nDamage, ushort nFlags, int bSimulation, int bCombatDamage)
        {
            var ___DoDamageImmunityDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_int___IntPtr___IntPtr_int_ushort_int_int>(0, 45);
            var __arg0 = pDamager is null ? __IntPtr.Zero : pDamager.__Instance;
            var __ret = ___DoDamageImmunityDelegate(__Instance + 72, __arg0, nDamage, nFlags, bSimulation, bCombatDamage);
            return __ret;
        }

        public virtual sbyte GetDamageImmunity(byte nType)
        {
            var ___GetDamageImmunityDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_sbyte___IntPtr_byte>(0, 46);
            var __ret = ___GetDamageImmunityDelegate(__Instance + 72, nType);
            return __ret;
        }

        public virtual sbyte GetDamageImmunityByFlags(ushort nFlags)
        {
            var ___GetDamageImmunityByFlagsDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_sbyte___IntPtr_ushort>(0, 47);
            var __ret = ___GetDamageImmunityByFlagsDelegate(__Instance + 72, nFlags);
            return __ret;
        }

        public void SetDamageImmunity(ushort nFlags, int nValue)
        {
            __Internal.SetDamageImmunity(__Instance + 72, nFlags, nValue);
        }

        public int DoSpellLevelAbsorption(global::NWN.LowLevel.ICNWSObject pCaster)
        {
            var __arg0 = pCaster is null ? __IntPtr.Zero : pCaster.__PointerToCNWSObject;
            var __ret = __Internal.DoSpellLevelAbsorption(__Instance + 72, __arg0);
            return __ret;
        }

        public int DoSpellImmunity(global::NWN.LowLevel.ICNWSObject pCaster)
        {
            var __arg0 = pCaster is null ? __IntPtr.Zero : pCaster.__PointerToCNWSObject;
            var __ret = __Internal.DoSpellImmunity(__Instance + 72, __arg0);
            return __ret;
        }

        public void DeleteCurrentAIAction()
        {
            __Internal.DeleteCurrentAIAction(__Instance + 72);
        }

        public void ApplyEffect(global::NWN.LowLevel.CGameEffect e, int bLoadingGame, int bInitialApplication)
        {
            var __arg0 = e is null ? __IntPtr.Zero : e.__Instance;
            __Internal.ApplyEffect(__Instance + 72, __arg0, bLoadingGame, bInitialApplication);
        }

        public void RemoveEffect(global::NWN.LowLevel.CGameEffect e)
        {
            var __arg0 = e is null ? __IntPtr.Zero : e.__Instance;
            __Internal.RemoveEffect(__Instance + 72, __arg0);
        }

        public int RemoveEffectById(ulong pId)
        {
            var __ret = __Internal.RemoveEffectById(__Instance + 72, pId);
            return __ret;
        }

        public void RemoveEffectByCreator(uint oidCreator)
        {
            __Internal.RemoveEffectByCreator(__Instance + 72, oidCreator);
        }

        public void RemoveSomeEffectsOfDurationType(ushort nDurationType)
        {
            __Internal.RemoveSomeEffectsOfDurationType(__Instance + 72, nDurationType);
        }

        public void UpdateEffectList(uint nCalendarDay, uint nTimeOfDay)
        {
            __Internal.UpdateEffectList(__Instance + 72, nCalendarDay, nTimeOfDay);
        }

        public void RemoveEffectTarget(uint oidTarget)
        {
            __Internal.RemoveEffectTarget(__Instance + 72, oidTarget);
        }

        public void ClearSpellEffectsOnOthers()
        {
            __Internal.ClearSpellEffectsOnOthers(__Instance + 72);
        }

        public int HasSpellEffectApplied(uint nSpellId)
        {
            var __ret = __Internal.HasSpellEffectApplied(__Instance + 72, nSpellId);
            return __ret;
        }

        public void RemoveEffectBySpellId(uint nSpellId)
        {
            __Internal.RemoveEffectBySpellId(__Instance + 72, nSpellId);
        }

        public int GetHasFeatEffectApplied(ushort nFeatId)
        {
            var __ret = __Internal.GetHasFeatEffectApplied(__Instance + 72, nFeatId);
            return __ret;
        }

        public void AddLoopingVisualEffect(ushort nVisEffectID, uint oidOriginator, byte nBodyPart, global::NWN.LowLevel.ObjectVisualTransformData ovtd)
        {
            if (ReferenceEquals(ovtd, null))
                throw new global::System.ArgumentNullException("ovtd", "Cannot be null because it is passed by value.");
            var __arg3 = ovtd.__Instance;
            __Internal.AddLoopingVisualEffect(__Instance + 72, nVisEffectID, oidOriginator, nBodyPart, *(global::NWN.LowLevel.ObjectVisualTransformData.__Internal*) __arg3);
        }

        public void RemoveLoopingVisualEffect(ushort nVisEffectID)
        {
            __Internal.RemoveLoopingVisualEffect(__Instance + 72, nVisEffectID);
        }

        public void BroadcastDialog(global::NWN.LowLevel.CExoString sSpokenString, float fRadius)
        {
            if (ReferenceEquals(sSpokenString, null))
                throw new global::System.ArgumentNullException("sSpokenString", "Cannot be null because it is passed by value.");
            var __arg0 = sSpokenString.__Instance;
            __Internal.BroadcastDialog(__Instance + 72, __arg0, fRadius);
        }

        public global::NWN.LowLevel.Vector CalculateSpellRangedMissTarget(uint oidSource, uint oidTarget)
        {
            var __ret = __Internal.CalculateSpellRangedMissTarget(__Instance + 72, oidSource, oidTarget);
            return global::NWN.LowLevel.Vector.__CreateInstance(__ret);
        }

        public int GetLastDamageAmountByFlags(int nDamageFlags)
        {
            var __ret = __Internal.GetLastDamageAmountByFlags(__Instance + 72, nDamageFlags);
            return __ret;
        }

        public void SetLastHostileActor(uint oidHostileActor, int bForceSet)
        {
            __Internal.SetLastHostileActor(__Instance + 72, oidHostileActor, bForceSet);
        }

        public int SetListenExpression(global::NWN.LowLevel.CExoString sExpression, int nPos)
        {
            if (ReferenceEquals(sExpression, null))
                throw new global::System.ArgumentNullException("sExpression", "Cannot be null because it is passed by value.");
            var __arg0 = sExpression.__Instance;
            var __ret = __Internal.SetListenExpression(__Instance + 72, __arg0, nPos);
            return __ret;
        }

        public int TestListenExpression(global::NWN.LowLevel.CExoString sStringToTest)
        {
            if (ReferenceEquals(sStringToTest, null))
                throw new global::System.ArgumentNullException("sStringToTest", "Cannot be null because it is passed by value.");
            var __arg0 = sStringToTest.__Instance;
            var __ret = __Internal.TestListenExpression(__Instance + 72, __arg0);
            return __ret;
        }

        public global::NWN.LowLevel.CNWSExpression GetListenExpressionObj(int n)
        {
            var __ret = __Internal.GetListenExpressionObj(__Instance + 72, n);
            var __result0 = global::NWN.LowLevel.CNWSExpression.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public void AddMatchedExpressionString(global::NWN.LowLevel.CExoString sString)
        {
            if (ReferenceEquals(sString, null))
                throw new global::System.ArgumentNullException("sString", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sString.__Instance;
            __Internal.AddMatchedExpressionString(__Instance + 72, __arg0);
        }

        public void ClearMatchedExpressionStrings()
        {
            __Internal.ClearMatchedExpressionStrings(__Instance + 72);
        }

        public int GetReputation(uint oidSource, ref int bIsInParty, int bUseOriginalFaction)
        {
            fixed (int* __bIsInParty1 = &bIsInParty)
            {
                var __arg1 = __bIsInParty1;
                var __ret = __Internal.GetReputation(__Instance + 72, oidSource, __arg1, bUseOriginalFaction);
                return __ret;
            }
        }

        public byte GetAIStateReaction(uint oidTarget)
        {
            var __ret = __Internal.GetAIStateReaction(__Instance + 72, oidTarget);
            return __ret;
        }

        public void BroadcastCounterSpellData(global::NWN.LowLevel.CNWSpell pSpell, global::NWN.LowLevel.CNWCCMessageData pMessageData)
        {
            var __arg0 = pSpell is null ? __IntPtr.Zero : pSpell.__Instance;
            var __arg1 = pMessageData is null ? __IntPtr.Zero : pMessageData.__Instance;
            __Internal.BroadcastCounterSpellData(__Instance + 72, __arg0, __arg1);
        }

        public void BroadcastSpellData(global::NWN.LowLevel.CNWSpell pSpell, global::NWN.LowLevel.CNWCCMessageData pMessageData)
        {
            var __arg0 = pSpell is null ? __IntPtr.Zero : pSpell.__Instance;
            var __arg1 = pMessageData is null ? __IntPtr.Zero : pMessageData.__Instance;
            __Internal.BroadcastSpellData(__Instance + 72, __arg0, __arg1);
        }

        public void BroadcastSafeProjectile(uint oidOriginator, uint oidTarget, global::NWN.LowLevel.Vector vOriginator, global::NWN.LowLevel.Vector vTarget, uint nDelta, byte nProjectileType, uint nSpellID, byte nAttackResult, byte nProjectilePathType)
        {
            if (ReferenceEquals(vOriginator, null))
                throw new global::System.ArgumentNullException("vOriginator", "Cannot be null because it is passed by value.");
            var __arg2 = vOriginator.__Instance;
            if (ReferenceEquals(vTarget, null))
                throw new global::System.ArgumentNullException("vTarget", "Cannot be null because it is passed by value.");
            var __arg3 = vTarget.__Instance;
            __Internal.BroadcastSafeProjectile(__Instance + 72, oidOriginator, oidTarget, *(global::NWN.LowLevel.Vector.__Internal*) __arg2, *(global::NWN.LowLevel.Vector.__Internal*) __arg3, nDelta, nProjectileType, nSpellID, nAttackResult, nProjectilePathType);
        }

        public virtual void BroadcastFloatyData(global::NWN.LowLevel.CNWCCMessageData pMessageData)
        {
            var ___BroadcastFloatyDataDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr___IntPtr>(0, 56);
            var __arg0 = pMessageData is null ? __IntPtr.Zero : pMessageData.__Instance;
            ___BroadcastFloatyDataDelegate(__Instance + 72, __arg0);
        }

        public virtual void BroadcastFloatyDataSTRREF(uint nStrRef)
        {
            var ___BroadcastFloatyDataSTRREFDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_uint>(0, 57);
            ___BroadcastFloatyDataSTRREFDelegate(__Instance + 72, nStrRef);
        }

        public void SpellCastAndImpact(uint nSpellId, global::NWN.LowLevel.Vector vTargetPosition, uint oidTarget, byte nMultiClass, uint oidItem, int bSpellCountered, int bCounteringSpell, byte nProjectilePathType, int bInstantSpell)
        {
            if (ReferenceEquals(vTargetPosition, null))
                throw new global::System.ArgumentNullException("vTargetPosition", "Cannot be null because it is passed by value.");
            var __arg1 = vTargetPosition.__Instance;
            __Internal.SpellCastAndImpact(__Instance + 72, nSpellId, *(global::NWN.LowLevel.Vector.__Internal*) __arg1, oidTarget, nMultiClass, oidItem, bSpellCountered, bCounteringSpell, nProjectilePathType, bInstantSpell);
        }

        public void CalculateLastSpellProjectileTime(byte nProjectilePathType)
        {
            __Internal.CalculateLastSpellProjectileTime(__Instance + 72, nProjectilePathType);
        }

        public void SpawnBodyBag()
        {
            __Internal.SpawnBodyBag(__Instance + 72);
        }

        public void ReportOverflow(int nOverflowFeedbackType, int nTotal, int nError, int bCritical)
        {
            __Internal.ReportOverflow(__Instance + 72, nOverflowFeedbackType, nTotal, nError, bCritical);
        }

        public void DestroyObjectSqlDatabase()
        {
            __Internal.DestroyObjectSqlDatabase(__Instance + 72);
        }

        public void SaveVisualTransform(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveVisualTransform(__Instance + 72, __arg0, __arg1);
        }

        public void LoadVisualTransform(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.LoadVisualTransform(__Instance + 72, __arg0, __arg1);
        }

        public void SaveMaterialOverrides(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveMaterialOverrides(__Instance + 72, __arg0, __arg1);
        }

        public void LoadMaterialOverrides(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.LoadMaterialOverrides(__Instance + 72, __arg0, __arg1);
        }

        public void SaveMiscVisuals(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveMiscVisuals(__Instance + 72, __arg0, __arg1);
        }

        public void LoadMiscVisuals(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.LoadMiscVisuals(__Instance + 72, __arg0, __arg1);
        }

        public void SaveTextureOverrides(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveTextureOverrides(__Instance + 72, __arg0, __arg1);
        }

        public void LoadTextureOverrides(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.LoadTextureOverrides(__Instance + 72, __arg0, __arg1);
        }

        public void LoadSqliteDatabase(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.LoadSqliteDatabase(__Instance + 72, __arg0, __arg1);
        }

        public void SaveSqliteDatabase(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveSqliteDatabase(__Instance + 72, __arg0, __arg1);
        }

        public void SetVisualTransformData(global::NWN.LowLevel.ObjectVisualTransformData data)
        {
            if (ReferenceEquals(data, null))
                throw new global::System.ArgumentNullException("data", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = data.__Instance;
            __Internal.SetVisualTransformData(__Instance + 72, __arg0);
        }

        public void SetMaterialShaderParamI(global::NWN.LowLevel.CExoString sMaterialName, global::NWN.LowLevel.CExoString sParamName, int nValue)
        {
            if (ReferenceEquals(sMaterialName, null))
                throw new global::System.ArgumentNullException("sMaterialName", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sMaterialName.__Instance;
            if (ReferenceEquals(sParamName, null))
                throw new global::System.ArgumentNullException("sParamName", "Cannot be null because it is a C++ reference (&).");
            var __arg1 = sParamName.__Instance;
            __Internal.SetMaterialShaderParamI(__Instance + 72, __arg0, __arg1, nValue);
        }

        public void SetMaterialShaderParamVec4(global::NWN.LowLevel.CExoString sMaterialName, global::NWN.LowLevel.CExoString sParamName, float fValue1, float fValue2, float fValue3, float fValue4)
        {
            if (ReferenceEquals(sMaterialName, null))
                throw new global::System.ArgumentNullException("sMaterialName", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sMaterialName.__Instance;
            if (ReferenceEquals(sParamName, null))
                throw new global::System.ArgumentNullException("sParamName", "Cannot be null because it is a C++ reference (&).");
            var __arg1 = sParamName.__Instance;
            __Internal.SetMaterialShaderParamVec4(__Instance + 72, __arg0, __arg1, fValue1, fValue2, fValue3, fValue4);
        }

        public void ResetMaterialShaderParams(global::NWN.LowLevel.CExoString sMaterialName, global::NWN.LowLevel.CExoString sParamName)
        {
            if (ReferenceEquals(sMaterialName, null))
                throw new global::System.ArgumentNullException("sMaterialName", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sMaterialName.__Instance;
            if (ReferenceEquals(sParamName, null))
                throw new global::System.ArgumentNullException("sParamName", "Cannot be null because it is a C++ reference (&).");
            var __arg1 = sParamName.__Instance;
            __Internal.ResetMaterialShaderParams(__Instance + 72, __arg0, __arg1);
        }

        public void SetTextureReplace(global::NWN.LowLevel.CExoString sOld, global::NWN.LowLevel.CExoString sNew)
        {
            if (ReferenceEquals(sOld, null))
                throw new global::System.ArgumentNullException("sOld", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sOld.__Instance;
            if (ReferenceEquals(sNew, null))
                throw new global::System.ArgumentNullException("sNew", "Cannot be null because it is a C++ reference (&).");
            var __arg1 = sNew.__Instance;
            __Internal.SetTextureReplace(__Instance + 72, __arg0, __arg1);
        }

        public void AddActionNodeParameter(global::NWN.LowLevel.CNWSObjectActionNode pNode, uint nParameterNumber, uint nParameterType, __IntPtr pParameter)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            __Internal.AddActionNodeParameter(__Instance + 72, __arg0, nParameterNumber, nParameterType, pParameter);
        }

        public void RunActions(uint nCalendarDay, uint nTimeOfDay, ulong nStartOfUpdate)
        {
            __Internal.RunActions(__Instance + 72, nCalendarDay, nTimeOfDay, nStartOfUpdate);
        }

        public int TerminateAISliceAfterAction(uint nActionId)
        {
            var __ret = __Internal.TerminateAISliceAfterAction(__Instance + 72, nActionId);
            return __ret;
        }

        public void LoadActionQueue(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.LoadActionQueue(__Instance + 72, __arg0, __arg1);
        }

        public void SaveActionQueue(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveActionQueue(__Instance + 72, __arg0, __arg1);
        }

        public void LoadVarTable(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.LoadVarTable(__Instance + 72, __arg0, __arg1);
        }

        public void SaveVarTable(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveVarTable(__Instance + 72, __arg0, __arg1);
        }

        public void LoadEffectList(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.LoadEffectList(__Instance + 72, __arg0, __arg1);
        }

        public void SaveEffectList(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveEffectList(__Instance + 72, __arg0, __arg1);
        }

        public void SaveListenData(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveListenData(__Instance + 72, __arg0, __arg1);
        }

        public void LoadListenData(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.LoadListenData(__Instance + 72, __arg0, __arg1);
        }

        public uint AIActionDialogObject(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionDialogObject(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionPauseDialog(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionPauseDialog(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionResumeDialog(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionResumeDialog(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionSpeakStrRef(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionSpeakStrRef(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionSpeak(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionSpeak(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionWait(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionWait(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionDoCommand(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionDoCommand(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionPlaySound(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionPlaySound(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionPlayAnimation(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionPlayAnimation(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionGiveItem(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionGiveItem(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionTakeItem(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionTakeItem(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionCloseDoor(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionCloseDoor(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionOpenDoor(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionOpenDoor(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionUnlockObject(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionUnlockObject(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionLockObject(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionLockObject(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionUseObject(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionUseObject(__Instance + 72, __arg0);
            return __ret;
        }

        public uint AIActionSetCommandable(global::NWN.LowLevel.CNWSObjectActionNode pNode)
        {
            var __arg0 = pNode is null ? __IntPtr.Zero : pNode.__Instance;
            var __ret = __Internal.AIActionSetCommandable(__Instance + 72, __arg0);
            return __ret;
        }

        public virtual void UpdateEffectPtrs()
        {
            var ___UpdateEffectPtrsDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr>(0, 59);
            ___UpdateEffectPtrsDelegate(__Instance + 72);
        }

        public virtual void UpdateAttributesOnEffect(global::NWN.LowLevel.CGameEffect e, int bLoadingGame)
        {
            var ___UpdateAttributesOnEffectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr___IntPtr_int>(0, 60);
            var __arg0 = e is null ? __IntPtr.Zero : e.__Instance;
            ___UpdateAttributesOnEffectDelegate(__Instance + 72, __arg0, bLoadingGame);
        }

        public virtual void SetId(uint oidNew)
        {
            var ___SetIdDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_uint>(0, 2);
            ___SetIdDelegate(__Instance + 72, oidNew);
        }

        public virtual void ResetUpdateTimes(uint nCalendarDay, uint nTimeOfDay)
        {
            var ___ResetUpdateTimesDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_uint_uint>(0, 3);
            ___ResetUpdateTimesDelegate(__Instance + 72, nCalendarDay, nTimeOfDay);
        }

        public byte MNLastUsedActiveProperties
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastUsedActiveProperties;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastUsedActiveProperties = value;
            }
        }

        public byte[] MPLastUsedActivePropertyUsesLeft
        {
            get
            {
                return CppSharp.Runtime.MarshalUtil.GetArray<byte>(((__Internal*)__Instance)->m_pLastUsedActivePropertyUsesLeft, 8);
            }

            set
            {
                if (value != null)
                {
                    for (int i = 0; i < 8; i++)
                        ((__Internal*)__Instance)->m_pLastUsedActivePropertyUsesLeft[i] = value[i];
                }
            }
        }

        public int MNArmorValue
        {
            get
            {
                return ((__Internal*)__Instance)->m_nArmorValue;
            }

            set
            {
                ((__Internal*)__Instance)->m_nArmorValue = value;
            }
        }

        public int MBIdentified
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIdentified;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIdentified = value;
            }
        }

        public uint MNOpenCount
        {
            get
            {
                return ((__Internal*)__Instance)->m_nOpenCount;
            }

            set
            {
                ((__Internal*)__Instance)->m_nOpenCount = value;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWItemProperty> MLstActiveProperties
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWItemProperty>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstActiveProperties));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstActiveProperties = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWItemProperty> MLstPassiveProperties
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWItemProperty>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstPassiveProperties));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstPassiveProperties = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public int MNNumCharges
        {
            get
            {
                return ((__Internal*)__Instance)->m_nNumCharges;
            }

            set
            {
                ((__Internal*)__Instance)->m_nNumCharges = value;
            }
        }

        public uint MNBaseUnitCost
        {
            get
            {
                return ((__Internal*)__Instance)->m_nBaseUnitCost;
            }

            set
            {
                ((__Internal*)__Instance)->m_nBaseUnitCost = value;
            }
        }

        public uint MNUnidentifiedCost
        {
            get
            {
                return ((__Internal*)__Instance)->m_nUnidentifiedCost;
            }

            set
            {
                ((__Internal*)__Instance)->m_nUnidentifiedCost = value;
            }
        }

        public int MNAdditionalCost
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAdditionalCost;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAdditionalCost = value;
            }
        }

        public int MBRecalculateCost
        {
            get
            {
                return ((__Internal*)__Instance)->m_bRecalculateCost;
            }

            set
            {
                ((__Internal*)__Instance)->m_bRecalculateCost = value;
            }
        }

        public byte[] MNModelPart
        {
            get
            {
                return CppSharp.Runtime.MarshalUtil.GetArray<byte>(((__Internal*)__Instance)->m_nModelPart, 3);
            }

            set
            {
                if (value != null)
                {
                    for (int i = 0; i < 3; i++)
                        ((__Internal*)__Instance)->m_nModelPart[i] = value[i];
                }
            }
        }

        public byte[] MNArmorModelPart
        {
            get
            {
                return CppSharp.Runtime.MarshalUtil.GetArray<byte>(((__Internal*)__Instance)->m_nArmorModelPart, 19);
            }

            set
            {
                if (value != null)
                {
                    for (int i = 0; i < 19; i++)
                        ((__Internal*)__Instance)->m_nArmorModelPart[i] = value[i];
                }
            }
        }

        public byte[] MNUnalteredArmorModelPart
        {
            get
            {
                return CppSharp.Runtime.MarshalUtil.GetArray<byte>(((__Internal*)__Instance)->m_nUnalteredArmorModelPart, 19);
            }

            set
            {
                if (value != null)
                {
                    for (int i = 0; i < 19; i++)
                        ((__Internal*)__Instance)->m_nUnalteredArmorModelPart[i] = value[i];
                }
            }
        }

        public uint MOidPossessor
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidPossessor;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidPossessor = value;
            }
        }

        public global::NWN.LowLevel.CItemRepository MPItemRepository
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CItemRepository.__GetOrCreateInstance(((__Internal*)__Instance)->m_pItemRepository, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pItemRepository = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public byte MNRepositoryPositionX
        {
            get
            {
                return ((__Internal*)__Instance)->m_nRepositoryPositionX;
            }

            set
            {
                ((__Internal*)__Instance)->m_nRepositoryPositionX = value;
            }
        }

        public byte MNRepositoryPositionY
        {
            get
            {
                return ((__Internal*)__Instance)->m_nRepositoryPositionY;
            }

            set
            {
                ((__Internal*)__Instance)->m_nRepositoryPositionY = value;
            }
        }

        public global::NWN.LowLevel.CExoLocString MSIdentifiedDescription
        {
            get
            {
                return global::NWN.LowLevel.CExoLocString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sIdentifiedDescription));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sIdentifiedDescription = *(global::NWN.LowLevel.CExoLocString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoLocString MSUnidentifiedDescription
        {
            get
            {
                return global::NWN.LowLevel.CExoLocString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sUnidentifiedDescription));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sUnidentifiedDescription = *(global::NWN.LowLevel.CExoLocString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoString MSIdentifiedDescriptionOverride
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sIdentifiedDescriptionOverride));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sIdentifiedDescriptionOverride = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoString MSUnidentifiedDescriptionOverride
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sUnidentifiedDescriptionOverride));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sUnidentifiedDescriptionOverride = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoLocString MSName
        {
            get
            {
                return global::NWN.LowLevel.CExoLocString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sName = *(global::NWN.LowLevel.CExoLocString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoString MSDisplayName
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sDisplayName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sDisplayName = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public int MNUpdateDisplayNameSeq
        {
            get
            {
                return ((__Internal*)__Instance)->m_nUpdateDisplayNameSeq;
            }

            set
            {
                ((__Internal*)__Instance)->m_nUpdateDisplayNameSeq = value;
            }
        }

        public int MBInfinite
        {
            get
            {
                return ((__Internal*)__Instance)->m_bInfinite;
            }

            set
            {
                ((__Internal*)__Instance)->m_bInfinite = value;
            }
        }

        public int MBDroppable
        {
            get
            {
                return ((__Internal*)__Instance)->m_bDroppable;
            }

            set
            {
                ((__Internal*)__Instance)->m_bDroppable = value;
            }
        }

        public int MBPickPocketable
        {
            get
            {
                return ((__Internal*)__Instance)->m_bPickPocketable;
            }

            set
            {
                ((__Internal*)__Instance)->m_bPickPocketable = value;
            }
        }

        public int MBCursed
        {
            get
            {
                return ((__Internal*)__Instance)->m_bCursed;
            }

            set
            {
                ((__Internal*)__Instance)->m_bCursed = value;
            }
        }

        public int MNStackSize
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStackSize;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStackSize = value;
            }
        }

        public int MBStolen
        {
            get
            {
                return ((__Internal*)__Instance)->m_bStolen;
            }

            set
            {
                ((__Internal*)__Instance)->m_bStolen = value;
            }
        }

        public int MNWeight
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWeight;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWeight = value;
            }
        }

        public ushort MNRepositoryArrayIndex
        {
            get
            {
                return ((__Internal*)__Instance)->m_nRepositoryArrayIndex;
            }

            set
            {
                ((__Internal*)__Instance)->m_nRepositoryArrayIndex = value;
            }
        }

        public byte MNVisualEffect
        {
            get
            {
                return ((__Internal*)__Instance)->m_nVisualEffect;
            }

            set
            {
                ((__Internal*)__Instance)->m_nVisualEffect = value;
            }
        }

        public uint MOidBarterOwner
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidBarterOwner;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidBarterOwner = value;
            }
        }

        public int MBHidden
        {
            get
            {
                return ((__Internal*)__Instance)->m_bHidden;
            }

            set
            {
                ((__Internal*)__Instance)->m_bHidden = value;
            }
        }

        public int MNUpdateHiddenSeq
        {
            get
            {
                return ((__Internal*)__Instance)->m_nUpdateHiddenSeq;
            }

            set
            {
                ((__Internal*)__Instance)->m_nUpdateHiddenSeq = value;
            }
        }

        public global::NWN.LowLevel.CExoLocString MSForGCC
        {
            get
            {
                return global::NWN.LowLevel.CExoLocString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sForGCC));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sForGCC = *(global::NWN.LowLevel.CExoLocString.__Internal*) value.__Instance;
            }
        }

        public ushort MNGroupID
        {
            get
            {
                return ((__Internal*)__Instance)->m_nGroupID;
            }

            set
            {
                ((__Internal*)__Instance)->m_nGroupID = value;
            }
        }

        public ushort MNLastGroupID
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastGroupID;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastGroupID = value;
            }
        }

        public global::NWN.LowLevel.CExoString MSTag
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sTag));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sTag = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoString MSTemplate
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sTemplate));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sTemplate = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CResRef MCPortrait
        {
            get
            {
                return global::NWN.LowLevel.CResRef.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_cPortrait));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_cPortrait = *(global::NWN.LowLevel.CResRef.__Internal*) value.__Instance;
            }
        }

        public ushort MNPortraitId
        {
            get
            {
                return ((__Internal*)__Instance)->m_nPortraitId;
            }

            set
            {
                ((__Internal*)__Instance)->m_nPortraitId = value;
            }
        }

        public global::NWN.LowLevel.CNWSDialog MPDialog
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CNWSDialog.__GetOrCreateInstance(((__Internal*)__Instance)->m_pDialog, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pDialog = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public uint MNDialogDelayCalendar
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDialogDelayCalendar;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDialogDelayCalendar = value;
            }
        }

        public uint MNDialogDelayTimeOfDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDialogDelayTimeOfDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDialogDelayTimeOfDay = value;
            }
        }

        public int MBDialogStored
        {
            get
            {
                return ((__Internal*)__Instance)->m_bDialogStored;
            }

            set
            {
                ((__Internal*)__Instance)->m_bDialogStored = value;
            }
        }

        public uint MNDialogStoredEntry
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDialogStoredEntry;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDialogStoredEntry = value;
            }
        }

        public int MBDialogPaused
        {
            get
            {
                return ((__Internal*)__Instance)->m_bDialogPaused;
            }

            set
            {
                ((__Internal*)__Instance)->m_bDialogPaused = value;
            }
        }

        public uint MOidDialogOwner
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidDialogOwner;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidDialogOwner = value;
            }
        }

        public int MNDialogAnimation
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDialogAnimation;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDialogAnimation = value;
            }
        }

        public int MNAILevel
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAILevel;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAILevel = value;
            }
        }

        public int MBLock
        {
            get
            {
                return ((__Internal*)__Instance)->m_bLock;
            }

            set
            {
                ((__Internal*)__Instance)->m_bLock = value;
            }
        }

        public global::NWN.LowLevel.CExoLinkedListNode MPAIPosList
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(((__Internal*)__Instance)->m_pAIPosList, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pAIPosList = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ushort MNCurrentAction
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCurrentAction;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCurrentAction = value;
            }
        }

        public uint MOidCurrentActionTarget
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidCurrentActionTarget;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidCurrentActionTarget = value;
            }
        }

        public global::NWN.LowLevel.CNWSAnimBase MPAnimation
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CNWSAnimBase.__GetOrCreateInstance(((__Internal*)__Instance)->m_pAnimation, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pAnimation = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public uint MOidArea
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidArea;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidArea = value;
            }
        }

        public global::NWN.LowLevel.Vector MVPosition
        {
            get
            {
                return global::NWN.LowLevel.Vector.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_vPosition));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_vPosition = *(global::NWN.LowLevel.Vector.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.Vector MVOrientation
        {
            get
            {
                return global::NWN.LowLevel.Vector.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_vOrientation));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_vOrientation = *(global::NWN.LowLevel.Vector.__Internal*) value.__Instance;
            }
        }

        public uint MNLastUpdateCalendarDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastUpdateCalendarDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastUpdateCalendarDay = value;
            }
        }

        public uint MNLastUpdateTimeOfDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastUpdateTimeOfDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastUpdateTimeOfDay = value;
            }
        }

        public uint MNStartActionCalendarDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStartActionCalendarDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStartActionCalendarDay = value;
            }
        }

        public uint MNStartActionTimeOfDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStartActionTimeOfDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStartActionTimeOfDay = value;
            }
        }

        public uint MNLastAnimationCalendarDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastAnimationCalendarDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastAnimationCalendarDay = value;
            }
        }

        public uint MNLastAnimationTimeOfDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastAnimationTimeOfDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastAnimationTimeOfDay = value;
            }
        }

        public uint MNAIUpdateDifference
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAIUpdateDifference;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAIUpdateDifference = value;
            }
        }

        public int MNAnimation
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAnimation;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAnimation = value;
            }
        }

        public float MFAnimSpeed
        {
            get
            {
                return ((__Internal*)__Instance)->m_fAnimSpeed;
            }

            set
            {
                ((__Internal*)__Instance)->m_fAnimSpeed = value;
            }
        }

        public int MNCurrentHitPoints
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCurrentHitPoints;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCurrentHitPoints = value;
            }
        }

        public int MNBaseHitPoints
        {
            get
            {
                return ((__Internal*)__Instance)->m_nBaseHitPoints;
            }

            set
            {
                ((__Internal*)__Instance)->m_nBaseHitPoints = value;
            }
        }

        public int MNTemporaryHitPoints
        {
            get
            {
                return ((__Internal*)__Instance)->m_nTemporaryHitPoints;
            }

            set
            {
                ((__Internal*)__Instance)->m_nTemporaryHitPoints = value;
            }
        }

        public int MBAbleToModifyActionQueue
        {
            get
            {
                return ((__Internal*)__Instance)->m_bAbleToModifyActionQueue;
            }

            set
            {
                ((__Internal*)__Instance)->m_bAbleToModifyActionQueue = value;
            }
        }

        public int MBDestroyable
        {
            get
            {
                return ((__Internal*)__Instance)->m_bDestroyable;
            }

            set
            {
                ((__Internal*)__Instance)->m_bDestroyable = value;
            }
        }

        public int MBRaiseable
        {
            get
            {
                return ((__Internal*)__Instance)->m_bRaiseable;
            }

            set
            {
                ((__Internal*)__Instance)->m_bRaiseable = value;
            }
        }

        public int MBSelectableWhenDead
        {
            get
            {
                return ((__Internal*)__Instance)->m_bSelectableWhenDead;
            }

            set
            {
                ((__Internal*)__Instance)->m_bSelectableWhenDead = value;
            }
        }

        public int MBPlotObject
        {
            get
            {
                return ((__Internal*)__Instance)->m_bPlotObject;
            }

            set
            {
                ((__Internal*)__Instance)->m_bPlotObject = value;
            }
        }

        public global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> MLQueuedActions
        {
            get
            {
                return global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lQueuedActions));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lQueuedActions = *(global::NWN.LowLevel.CExoLinkedList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CNWSScriptVarTable MScriptVars
        {
            get
            {
                return global::NWN.LowLevel.CNWSScriptVarTable.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_ScriptVars));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_ScriptVars = *(global::NWN.LowLevel.CNWSScriptVarTable.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CGameEffect> MAppliedEffects
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CGameEffect>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_appliedEffects));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_appliedEffects = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CLoopingVisualEffect> MLstLoopingVisualEffects
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CLoopingVisualEffect>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstLoopingVisualEffects));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstLoopingVisualEffects = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<uint> MLstEffectTargets
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<uint>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstEffectTargets));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstEffectTargets = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public int MBPendingEffectRemoval
        {
            get
            {
                return ((__Internal*)__Instance)->m_bPendingEffectRemoval;
            }

            set
            {
                ((__Internal*)__Instance)->m_bPendingEffectRemoval = value;
            }
        }

        public uint MNSavingThrowSpellId
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSavingThrowSpellId;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSavingThrowSpellId = value;
            }
        }

        public int MNCustomScriptEventId
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCustomScriptEventId;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCustomScriptEventId = value;
            }
        }

        public uint MOidKiller
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidKiller;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidKiller = value;
            }
        }

        public uint MOidLastHostileActor
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastHostileActor;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastHostileActor = value;
            }
        }

        public uint MOidLastAttacker
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastAttacker;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastAttacker = value;
            }
        }

        public uint MOidLastDamager
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastDamager;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastDamager = value;
            }
        }

        public uint MOidLastDisturbed
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastDisturbed;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastDisturbed = value;
            }
        }

        public int* MPLastDamageList
        {
            get
            {
                return (int*) ((__Internal*)__Instance)->m_pLastDamageList;
            }

            set
            {
                ((__Internal*)__Instance)->m_pLastDamageList = (__IntPtr) value;
            }
        }

        public ushort MNLastAttackType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastAttackType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastAttackType = value;
            }
        }

        public byte MNLastAttackMode
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastAttackMode;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastAttackMode = value;
            }
        }

        public uint MOidLastWeaponAttackedWith
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastWeaponAttackedWith;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastWeaponAttackedWith = value;
            }
        }

        public uint MOidInventoryDisturbItem
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidInventoryDisturbItem;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidInventoryDisturbItem = value;
            }
        }

        public int MNInventoryDisturbType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nInventoryDisturbType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nInventoryDisturbType = value;
            }
        }

        public uint MOidLastSpeaker
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastSpeaker;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastSpeaker = value;
            }
        }

        public int MBPrivateConversation
        {
            get
            {
                return ((__Internal*)__Instance)->m_bPrivateConversation;
            }

            set
            {
                ((__Internal*)__Instance)->m_bPrivateConversation = value;
            }
        }

        public int MNConversationPlayHello
        {
            get
            {
                return ((__Internal*)__Instance)->m_nConversationPlayHello;
            }

            set
            {
                ((__Internal*)__Instance)->m_nConversationPlayHello = value;
            }
        }

        public global::NWN.LowLevel.CExoString MSLastConversationResref
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sLastConversationResref));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sLastConversationResref = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSExpression> MAListenExpressions
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSExpression>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_aListenExpressions));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_aListenExpressions = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public int MNMatchedPos
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMatchedPos;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMatchedPos = value;
            }
        }

        public int MBListening
        {
            get
            {
                return ((__Internal*)__Instance)->m_bListening;
            }

            set
            {
                ((__Internal*)__Instance)->m_bListening = value;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoString> MAExpressionStrings
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoString>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_aExpressionStrings));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_aExpressionStrings = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public sbyte* MNDamageImmunity
        {
            get
            {
                return (sbyte*) ((__Internal*)__Instance)->m_nDamageImmunity;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDamageImmunity = (__IntPtr) value;
            }
        }

        public global::NWN.LowLevel.Vector MVLastSpellTarget
        {
            get
            {
                return global::NWN.LowLevel.Vector.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_vLastSpellTarget));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_vLastSpellTarget = *(global::NWN.LowLevel.Vector.__Internal*) value.__Instance;
            }
        }

        public uint MOidLastSpellTarget
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastSpellTarget;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastSpellTarget = value;
            }
        }

        public uint MNLastSpellId
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastSpellId;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastSpellId = value;
            }
        }

        public byte MNLastDomainLevel
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastDomainLevel;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastDomainLevel = value;
            }
        }

        public uint MNLastSpellProjectileTime
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastSpellProjectileTime;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastSpellProjectileTime = value;
            }
        }

        public int MBLastSpellCast
        {
            get
            {
                return ((__Internal*)__Instance)->m_bLastSpellCast;
            }

            set
            {
                ((__Internal*)__Instance)->m_bLastSpellCast = value;
            }
        }

        public int MBLastSpellCastSpontaneous
        {
            get
            {
                return ((__Internal*)__Instance)->m_bLastSpellCastSpontaneous;
            }

            set
            {
                ((__Internal*)__Instance)->m_bLastSpellCastSpontaneous = value;
            }
        }

        public byte MNLastSpellCastMulticlass
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastSpellCastMulticlass;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastSpellCastMulticlass = value;
            }
        }

        public byte MNLastSpellCastMetaType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastSpellCastMetaType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastSpellCastMetaType = value;
            }
        }

        public uint MOidLastSpellCastAtMeCaster
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastSpellCastAtMeCaster;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastSpellCastAtMeCaster = value;
            }
        }

        public uint MNLastSpellCastAtMe
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastSpellCastAtMe;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastSpellCastAtMe = value;
            }
        }

        public int MBLastSpellCastAtMeHarmful
        {
            get
            {
                return ((__Internal*)__Instance)->m_bLastSpellCastAtMeHarmful;
            }

            set
            {
                ((__Internal*)__Instance)->m_bLastSpellCastAtMeHarmful = value;
            }
        }

        public ushort MNLastSpellCastFeat
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastSpellCastFeat;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastSpellCastFeat = value;
            }
        }

        public global::NWN.LowLevel.CNWSObjectActionNode MPExecutingAIAction
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CNWSObjectActionNode.__GetOrCreateInstance(((__Internal*)__Instance)->m_pExecutingAIAction, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pExecutingAIAction = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ushort MNEffectArrayIndex
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEffectArrayIndex;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEffectArrayIndex = value;
            }
        }

        public int MBApplyingPostProcessEffects
        {
            get
            {
                return ((__Internal*)__Instance)->m_bApplyingPostProcessEffects;
            }

            set
            {
                ((__Internal*)__Instance)->m_bApplyingPostProcessEffects = value;
            }
        }

        public int MBOpenDoorAnimationPlayed
        {
            get
            {
                return ((__Internal*)__Instance)->m_bOpenDoorAnimationPlayed;
            }

            set
            {
                ((__Internal*)__Instance)->m_bOpenDoorAnimationPlayed = value;
            }
        }

        public global::NWN.LowLevel.Vector MVHiliteColor
        {
            get
            {
                return global::NWN.LowLevel.Vector.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_vHiliteColor));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_vHiliteColor = *(global::NWN.LowLevel.Vector.__Internal*) value.__Instance;
            }
        }

        public int MNMouseCursor
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMouseCursor;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMouseCursor = value;
            }
        }

        public global::NWN.LowLevel.CNWSTransition MPTransition
        {
            get
            {
                return global::NWN.LowLevel.CNWSTransition.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_pTransition));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_pTransition = *(global::NWN.LowLevel.CNWSTransition.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.ObjectVisualTransformData MPVisualTransformData
        {
            get
            {
                return global::NWN.LowLevel.ObjectVisualTransformData.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_pVisualTransformData));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_pVisualTransformData = *(global::NWN.LowLevel.ObjectVisualTransformData.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.MaterialShaderParam> MLMaterialShaderParameters
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.MaterialShaderParam>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lMaterialShaderParameters));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lMaterialShaderParameters = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.TextureReplaceInfo> MLTextureReplaceInfo
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.TextureReplaceInfo>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lTextureReplaceInfo));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lTextureReplaceInfo = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CNWSUUID MPUUID
        {
            get
            {
                return global::NWN.LowLevel.CNWSUUID.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_pUUID));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_pUUID = *(global::NWN.LowLevel.CNWSUUID.__Internal*) value.__Instance;
            }
        }

        public __IntPtr __PointerToCNWSObject
        {
            get
            {
                return __Instance + 72;
            }
        }

        public uint MIdSelf
        {
            get
            {
                return ((__Internal*)__Instance)->m_idSelf;
            }

            set
            {
                ((__Internal*)__Instance)->m_idSelf = value;
            }
        }

        public byte MNObjectType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nObjectType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nObjectType = value;
            }
        }

        public __IntPtr MPNwnxData
        {
            get
            {
                return ((__Internal*)__Instance)->m_pNwnxData;
            }

            set
            {
                ((__Internal*)__Instance)->m_pNwnxData = (__IntPtr) value;
            }
        }

        public __IntPtr __PointerToCGameObject
        {
            get
            {
                return __Instance + 72;
            }
        }

        public __IntPtr __PointerToCCallbackHandlerBase
        {
            get
            {
                return __Instance + 72;
            }
        }

        public virtual global::NWN.LowLevel.CNWSItem AsNWSItem
        {
            get
            {
                var ___AsNWSItemDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 3);
                var __ret = ___AsNWSItemDelegate(__Instance);
                var __result0 = global::NWN.LowLevel.CNWSItem.__GetOrCreateInstance(__ret, true);
                return __result0;
            }
        }

        public int ComputeArmorClass
        {
            get
            {
                var __ret = __Internal.ComputeArmorClass(__Instance);
                return __ret;
            }
        }

        public ushort DamageFlags
        {
            get
            {
                var __ret = __Internal.GetDamageFlags(__Instance);
                return __ret;
            }
        }

        public int Weight
        {
            get
            {
                var __ret = __Internal.GetWeight(__Instance);
                return __ret;
            }
        }

        public byte MinEquipLevel
        {
            get
            {
                var __ret = __Internal.GetMinEquipLevel(__Instance);
                return __ret;
            }
        }

        public virtual global::NWN.LowLevel.ICNWSObject AsNWSObject
        {
            get
            {
                var ___AsNWSObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 5);
                var __ret = ___AsNWSObjectDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSObject.__GetOrCreateInstance(__ret, true);
                return __result0;
            }
        }

        public int NumActionGroups
        {
            get
            {
                var __ret = __Internal.GetNumActionGroups(__Instance + 72);
                return __ret;
            }
        }

        public global::NWN.LowLevel.CNWSArea Area
        {
            get
            {
                var __ret = __Internal.GetArea(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSArea.__GetOrCreateInstance(__ret, false);
                return __result0;
            }

            set
            {
                var __arg0 = value is null ? __IntPtr.Zero : value.__Instance;
                __Internal.SetArea(__Instance + 72, __arg0);
            }
        }

        public int IsDialogDelay
        {
            get
            {
                var __ret = __Internal.IsDialogDelay(__Instance + 72);
                return __ret;
            }
        }

        public int SendDialogReplies
        {
            get
            {
                var __ret = __Internal.SendDialogReplies(__Instance + 72);
                return __ret;
            }
        }

        public int UpdateDialog
        {
            get
            {
                var __ret = __Internal.UpdateDialog(__Instance + 72);
                return __ret;
            }
        }

        public int StopDialog
        {
            get
            {
                var __ret = __Internal.StopDialog(__Instance + 72);
                return __ret;
            }
        }

        public global::NWN.LowLevel.CScriptLocation ScriptLocation
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CScriptLocation.__Internal();
                __Internal.GetScriptLocation(new IntPtr(&__ret), __Instance + 72);
                return global::NWN.LowLevel.CScriptLocation.__CreateInstance(__ret);
            }
        }

        public virtual global::NWN.LowLevel.CResRef DialogResref
        {
            get
            {
                var ___GetDialogResrefDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr___IntPtr>(0, 34);
                var __ret = new global::NWN.LowLevel.CResRef.__Internal();
                ___GetDialogResrefDelegate(new IntPtr(&__ret), __Instance + 72);
                return global::NWN.LowLevel.CResRef.__CreateInstance(__ret);
            }
        }

        public virtual int DialogInterruptable
        {
            get
            {
                var ___GetDialogInterruptableDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_int___IntPtr>(0, 35);
                var __ret = ___GetDialogInterruptableDelegate(__Instance + 72);
                return __ret;
            }
        }

        public virtual byte Gender
        {
            get
            {
                var ___GetGenderDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_byte___IntPtr>(0, 36);
                var __ret = ___GetGenderDelegate(__Instance + 72);
                return __ret;
            }
        }

        public virtual global::NWN.LowLevel.CExoLocString FirstName
        {
            get
            {
                var ___GetFirstNameDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 37);
                var __ret = ___GetFirstNameDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CExoLocString.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CExoLocString LastName
        {
            get
            {
                var ___GetLastNameDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 38);
                var __ret = ___GetLastNameDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CExoLocString.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public int Dead
        {
            get
            {
                var __ret = __Internal.GetDead(__Instance + 72);
                return __ret;
            }
        }

        public int IsPCDying
        {
            get
            {
                var __ret = __Internal.GetIsPCDying(__Instance + 72);
                return __ret;
            }
        }

        public byte DamageLevel
        {
            get
            {
                var __ret = __Internal.GetDamageLevel(__Instance + 72);
                return __ret;
            }
        }

        public virtual uint EffectSpellId
        {
            get
            {
                var ___GetEffectSpellIdDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_uint___IntPtr>(0, 48);
                var __ret = ___GetEffectSpellIdDelegate(__Instance + 72);
                return __ret;
            }

            set
            {
                var ___SetEffectSpellIdDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_uint>(0, 49);
                ___SetEffectSpellIdDelegate(__Instance + 72, value);
            }
        }

        public virtual uint LockOrientationToObject
        {
            get
            {
                var ___GetLockOrientationToObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_uint___IntPtr>(0, 51);
                var __ret = ___GetLockOrientationToObjectDelegate(__Instance + 72);
                return __ret;
            }

            set
            {
                var ___SetLockOrientationToObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_uint>(0, 50);
                ___SetLockOrientationToObjectDelegate(__Instance + 72, value);
            }
        }

        public virtual global::NWN.LowLevel.CResRef Portrait
        {
            get
            {
                var ___GetPortraitDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr___IntPtr>(0, 52);
                var __ret = new global::NWN.LowLevel.CResRef.__Internal();
                ___GetPortraitDelegate(new IntPtr(&__ret), __Instance + 72);
                return global::NWN.LowLevel.CResRef.__CreateInstance(__ret);
            }

            set
            {
                var ___SetPortraitDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_NWN_LowLevel_CResRef___Internal>(0, 53);
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                var __arg0 = value.__Instance;
                ___SetPortraitDelegate(__Instance + 72, *(global::NWN.LowLevel.CResRef.__Internal*) __arg0);
            }
        }

        public virtual ushort PortraitId
        {
            get
            {
                var ___GetPortraitIdDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_ushort___IntPtr>(0, 54);
                var __ret = ___GetPortraitIdDelegate(__Instance + 72);
                return __ret;
            }

            set
            {
                var ___SetPortraitIdDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_ushort>(0, 55);
                ___SetPortraitIdDelegate(__Instance + 72, value);
            }
        }

        public virtual bool CanCarrySqlDatabase
        {
            get
            {
                var ___GetCanCarrySqlDatabaseDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func_bool___IntPtr>(0, 58);
                var __ret = ___GetCanCarrySqlDatabaseDelegate(__Instance + 72);
                return __ret;
            }
        }

        public ushort NewGroupID
        {
            get
            {
                var __ret = __Internal.GetNewGroupID(__Instance + 72);
                return __ret;
            }
        }

        public virtual global::NWN.LowLevel.CNWCObject AsNWCObject
        {
            get
            {
                var ___AsNWCObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 4);
                var __ret = ___AsNWCObjectDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCDoor AsNWCDoor
        {
            get
            {
                var ___AsNWCDoorDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 6);
                var __ret = ___AsNWCDoorDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCDoor.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSDoor AsNWSDoor
        {
            get
            {
                var ___AsNWSDoorDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 7);
                var __ret = ___AsNWSDoorDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSDoor.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCModule AsNWCModule
        {
            get
            {
                var ___AsNWCModuleDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 8);
                var __ret = ___AsNWCModuleDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCModule.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSModule AsNWSModule
        {
            get
            {
                var ___AsNWSModuleDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 9);
                var __ret = ___AsNWSModuleDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSModule.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCArea AsNWCArea
        {
            get
            {
                var ___AsNWCAreaDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 10);
                var __ret = ___AsNWCAreaDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCArea.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSArea AsNWSArea
        {
            get
            {
                var ___AsNWSAreaDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 11);
                var __ret = ___AsNWSAreaDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSArea.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCCreature AsNWCCreature
        {
            get
            {
                var ___AsNWCCreatureDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 12);
                var __ret = ___AsNWCCreatureDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCCreature.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSCreature AsNWSCreature
        {
            get
            {
                var ___AsNWSCreatureDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 13);
                var __ret = ___AsNWSCreatureDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSCreature.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCItem AsNWCItem
        {
            get
            {
                var ___AsNWCItemDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 14);
                var __ret = ___AsNWCItemDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCItem.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCTrigger AsNWCTrigger
        {
            get
            {
                var ___AsNWCTriggerDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 16);
                var __ret = ___AsNWCTriggerDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCTrigger.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSTrigger AsNWSTrigger
        {
            get
            {
                var ___AsNWSTriggerDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 17);
                var __ret = ___AsNWSTriggerDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSTrigger.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCProjectile AsNWCProjectile
        {
            get
            {
                var ___AsNWCProjectileDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 18);
                var __ret = ___AsNWCProjectileDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCProjectile.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSPlayerTURD AsNWSPlayerTURD
        {
            get
            {
                var ___AsNWSPlayerTURDDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 19);
                var __ret = ___AsNWSPlayerTURDDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSPlayerTURD.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSPlaceable AsNWSPlaceable
        {
            get
            {
                var ___AsNWSPlaceableDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 20);
                var __ret = ___AsNWSPlaceableDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSPlaceable.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCPlaceable AsNWCPlaceable
        {
            get
            {
                var ___AsNWCPlaceableDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 21);
                var __ret = ___AsNWCPlaceableDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCPlaceable.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSAreaOfEffectObject AsNWSAreaOfEffectObject
        {
            get
            {
                var ___AsNWSAreaOfEffectObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 22);
                var __ret = ___AsNWSAreaOfEffectObjectDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSAreaOfEffectObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCAreaOfEffectObject AsNWCAreaOfEffectObject
        {
            get
            {
                var ___AsNWCAreaOfEffectObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 23);
                var __ret = ___AsNWCAreaOfEffectObjectDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCAreaOfEffectObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSWaypoint AsNWSWaypoint
        {
            get
            {
                var ___AsNWSWaypointDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 24);
                var __ret = ___AsNWSWaypointDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSWaypoint.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSEncounter AsNWSEncounter
        {
            get
            {
                var ___AsNWSEncounterDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 25);
                var __ret = ___AsNWSEncounterDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSEncounter.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCStore AsNWCStore
        {
            get
            {
                var ___AsNWCStoreDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 26);
                var __ret = ___AsNWCStoreDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCStore.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSStore AsNWSStore
        {
            get
            {
                var ___AsNWSStoreDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 27);
                var __ret = ___AsNWSStoreDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSStore.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSSoundObject AsNWSSoundObject
        {
            get
            {
                var ___AsNWSSoundObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 28);
                var __ret = ___AsNWSSoundObjectDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWSSoundObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCSoundObject AsNWCSoundObject
        {
            get
            {
                var ___AsNWCSoundObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 29);
                var __ret = ___AsNWCSoundObjectDelegate(__Instance + 72);
                var __result0 = global::NWN.LowLevel.CNWCSoundObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        #region Virtual table interop

        // ~CNWSItem()
        private static global::NWN.LowLevel.Delegates.Action___IntPtr _dtorDelegateInstance;

        private static void _dtorDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.Dispose(true);
        }

        // void AIUpdate()
        private static global::NWN.LowLevel.Delegates.Action___IntPtr _AIUpdateDelegateInstance;

        private static void _AIUpdateDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.AIUpdate();
        }

        // CNWSItem * AsNWSItem()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSItemDelegateInstance;

        private static __IntPtr _AsNWSItemDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSItem;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // void EventHandler(uint32_t nEventId, OBJECT_ID nCallerObjectId, void * pScript, uint32_t nCalendarDay, uint32_t nTimeOfDay)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_uint_uint___IntPtr_uint_uint _EventHandlerDelegateInstance;

        private static void _EventHandlerDelegateHook(__IntPtr __instance, uint nEventId, uint nCallerObjectId, __IntPtr pScript, uint nCalendarDay, uint nTimeOfDay)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.EventHandler(nEventId, nCallerObjectId, pScript, nCalendarDay, nTimeOfDay);
        }

        // void SetId(OBJECT_ID oidNew)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_uint _SetIdDelegateInstance;

        private static void _SetIdDelegateHook(__IntPtr __instance, uint oidNew)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.SetId(oidNew);
        }

        // void ResetUpdateTimes(uint32_t nCalendarDay, uint32_t nTimeOfDay)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_uint_uint _ResetUpdateTimesDelegateInstance;

        private static void _ResetUpdateTimesDelegateHook(__IntPtr __instance, uint nCalendarDay, uint nTimeOfDay)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.ResetUpdateTimes(nCalendarDay, nTimeOfDay);
        }

        // CNWCObject * AsNWCObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCObjectDelegateInstance;

        private static __IntPtr _AsNWCObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCObject;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSObject * AsNWSObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSObjectDelegateInstance;

        private static __IntPtr _AsNWSObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSObject;
            return __ret is null ? __IntPtr.Zero : __ret.__PointerToCNWSObject;
        }

        // CNWCDoor * AsNWCDoor()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCDoorDelegateInstance;

        private static __IntPtr _AsNWCDoorDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCDoor;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSDoor * AsNWSDoor()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSDoorDelegateInstance;

        private static __IntPtr _AsNWSDoorDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSDoor;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCModule * AsNWCModule()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCModuleDelegateInstance;

        private static __IntPtr _AsNWCModuleDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCModule;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSModule * AsNWSModule()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSModuleDelegateInstance;

        private static __IntPtr _AsNWSModuleDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSModule;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCArea * AsNWCArea()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCAreaDelegateInstance;

        private static __IntPtr _AsNWCAreaDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCArea;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSArea * AsNWSArea()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSAreaDelegateInstance;

        private static __IntPtr _AsNWSAreaDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSArea;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCCreature * AsNWCCreature()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCCreatureDelegateInstance;

        private static __IntPtr _AsNWCCreatureDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCCreature;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSCreature * AsNWSCreature()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSCreatureDelegateInstance;

        private static __IntPtr _AsNWSCreatureDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSCreature;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCItem * AsNWCItem()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCItemDelegateInstance;

        private static __IntPtr _AsNWCItemDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCItem;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCTrigger * AsNWCTrigger()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCTriggerDelegateInstance;

        private static __IntPtr _AsNWCTriggerDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCTrigger;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSTrigger * AsNWSTrigger()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSTriggerDelegateInstance;

        private static __IntPtr _AsNWSTriggerDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSTrigger;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCProjectile * AsNWCProjectile()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCProjectileDelegateInstance;

        private static __IntPtr _AsNWCProjectileDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCProjectile;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSPlayerTURD * AsNWSPlayerTURD()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSPlayerTURDDelegateInstance;

        private static __IntPtr _AsNWSPlayerTURDDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSPlayerTURD;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSPlaceable * AsNWSPlaceable()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSPlaceableDelegateInstance;

        private static __IntPtr _AsNWSPlaceableDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSPlaceable;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCPlaceable * AsNWCPlaceable()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCPlaceableDelegateInstance;

        private static __IntPtr _AsNWCPlaceableDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCPlaceable;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSAreaOfEffectObject * AsNWSAreaOfEffectObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSAreaOfEffectObjectDelegateInstance;

        private static __IntPtr _AsNWSAreaOfEffectObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSAreaOfEffectObject;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCAreaOfEffectObject * AsNWCAreaOfEffectObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCAreaOfEffectObjectDelegateInstance;

        private static __IntPtr _AsNWCAreaOfEffectObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCAreaOfEffectObject;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSWaypoint * AsNWSWaypoint()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSWaypointDelegateInstance;

        private static __IntPtr _AsNWSWaypointDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSWaypoint;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSEncounter * AsNWSEncounter()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSEncounterDelegateInstance;

        private static __IntPtr _AsNWSEncounterDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSEncounter;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCStore * AsNWCStore()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCStoreDelegateInstance;

        private static __IntPtr _AsNWCStoreDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCStore;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSStore * AsNWSStore()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSStoreDelegateInstance;

        private static __IntPtr _AsNWSStoreDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSStore;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSSoundObject * AsNWSSoundObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSSoundObjectDelegateInstance;

        private static __IntPtr _AsNWSSoundObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWSSoundObject;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCSoundObject * AsNWCSoundObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCSoundObjectDelegateInstance;

        private static __IntPtr _AsNWCSoundObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.AsNWCSoundObject;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // BOOL ClearAction(CNWSObjectActionNode * pNode, BOOL bIsTopmostAction)
        private static global::NWN.LowLevel.Delegates.Func_int___IntPtr___IntPtr_int _ClearActionDelegateInstance;

        private static int _ClearActionDelegateHook(__IntPtr __instance, __IntPtr pNode, int bIsTopmostAction)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __result0 = global::NWN.LowLevel.CNWSObjectActionNode.__GetOrCreateInstance(pNode, false);
            return __target.ClearAction(__result0, bIsTopmostAction);
        }

        // void SetAnimation(int32_t nAnimation)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_int _SetAnimationDelegateInstance;

        private static void _SetAnimationDelegateHook(__IntPtr __instance, int nAnimation)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.SetAnimation(nAnimation);
        }

        // CResRef GetDialogResref()
        private static global::NWN.LowLevel.Delegates.Action___IntPtr___IntPtr _GetDialogResrefDelegateInstance;

        private static void _GetDialogResrefDelegateHook(__IntPtr @return, __IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.DialogResref;
            if (ReferenceEquals(__ret, null))
                throw new global::System.ArgumentNullException("__ret", "Cannot be null because it is passed by value.");
            *(global::NWN.LowLevel.CResRef.__Internal*) @return = *(global::NWN.LowLevel.CResRef.__Internal*) __ret.__Instance;
        }

        // BOOL GetDialogInterruptable()
        private static global::NWN.LowLevel.Delegates.Func_int___IntPtr _GetDialogInterruptableDelegateInstance;

        private static int _GetDialogInterruptableDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            return __target.DialogInterruptable;
        }

        // uint8_t GetGender()
        private static global::NWN.LowLevel.Delegates.Func_byte___IntPtr _GetGenderDelegateInstance;

        private static byte _GetGenderDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            return __target.Gender;
        }

        // CExoLocString & GetFirstName()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _GetFirstNameDelegateInstance;

        private static __IntPtr _GetFirstNameDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.FirstName;
            if (ReferenceEquals(__ret, null))
                throw new global::System.ArgumentNullException("__ret", "Cannot be null because it is a C++ reference (&).");
            return __ret.__Instance;
        }

        // CExoLocString & GetLastName()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _GetLastNameDelegateInstance;

        private static __IntPtr _GetLastNameDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.LastName;
            if (ReferenceEquals(__ret, null))
                throw new global::System.ArgumentNullException("__ret", "Cannot be null because it is a C++ reference (&).");
            return __ret.__Instance;
        }

        // int16_t GetMaxHitPoints(BOOL bIncludeToughness = true)
        private static global::NWN.LowLevel.Delegates.Func_short___IntPtr_int _GetMaxHitPointsDelegateInstance;

        private static short _GetMaxHitPointsDelegateHook(__IntPtr __instance, int bIncludeToughness)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            return __target.GetMaxHitPoints(bIncludeToughness);
        }

        // int16_t GetCurrentHitPoints(BOOL bExcludeTemporaryHits = false)
        private static global::NWN.LowLevel.Delegates.Func_short___IntPtr_int _GetCurrentHitPointsDelegateInstance;

        private static short _GetCurrentHitPointsDelegateHook(__IntPtr __instance, int bExcludeTemporaryHits)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            return __target.GetCurrentHitPoints(bExcludeTemporaryHits);
        }

        // void DoDamage(int32_t nDamage)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_int _DoDamageDelegateInstance;

        private static void _DoDamageDelegateHook(__IntPtr __instance, int nDamage)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.DoDamage(nDamage);
        }

        // int32_t DoDamageReduction(CNWSCreature * pDamager, int32_t nDamage, uint8_t nDamagePower, BOOL bSimulation, BOOL bCombatDamage)
        private static global::NWN.LowLevel.Delegates.Func_int___IntPtr___IntPtr_int_byte_int_int _DoDamageReductionDelegateInstance;

        private static int _DoDamageReductionDelegateHook(__IntPtr __instance, __IntPtr pDamager, int nDamage, byte nDamagePower, int bSimulation, int bCombatDamage)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __result0 = global::NWN.LowLevel.CNWSCreature.__GetOrCreateInstance(pDamager, false);
            return __target.DoDamageReduction(__result0, nDamage, nDamagePower, bSimulation, bCombatDamage);
        }

        // int32_t DoDamageResistance(CNWSCreature * pDamager, int32_t nDamage, uint16_t nFlags, BOOL bSimulation, BOOL bCombatDamage, BOOL bBaseWeaponDamage = false)
        private static global::NWN.LowLevel.Delegates.Func_int___IntPtr___IntPtr_int_ushort_int_int_int _DoDamageResistanceDelegateInstance;

        private static int _DoDamageResistanceDelegateHook(__IntPtr __instance, __IntPtr pDamager, int nDamage, ushort nFlags, int bSimulation, int bCombatDamage, int bBaseWeaponDamage)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __result0 = global::NWN.LowLevel.CNWSCreature.__GetOrCreateInstance(pDamager, false);
            return __target.DoDamageResistance(__result0, nDamage, nFlags, bSimulation, bCombatDamage, bBaseWeaponDamage);
        }

        // int32_t GetMaximumDamageResistanceVsDamageFlag(uint16_t nDamageFlag, int32_t * nBestIndex)
        private static global::NWN.LowLevel.Delegates.Func_int___IntPtr_ushort_intPtr _GetMaximumDamageResistanceVsDamageFlagDelegateInstance;

        private static int _GetMaximumDamageResistanceVsDamageFlagDelegateHook(__IntPtr __instance, ushort nDamageFlag, int* nBestIndex)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            return __target.GetMaximumDamageResistanceVsDamageFlag(nDamageFlag, ref *nBestIndex);
        }

        // int32_t DoDamageImmunity(CNWSCreature * pDamager, int32_t nDamage, uint16_t nFlags, BOOL bSimulation, BOOL bCombatDamage)
        private static global::NWN.LowLevel.Delegates.Func_int___IntPtr___IntPtr_int_ushort_int_int _DoDamageImmunityDelegateInstance;

        private static int _DoDamageImmunityDelegateHook(__IntPtr __instance, __IntPtr pDamager, int nDamage, ushort nFlags, int bSimulation, int bCombatDamage)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __result0 = global::NWN.LowLevel.CNWSCreature.__GetOrCreateInstance(pDamager, false);
            return __target.DoDamageImmunity(__result0, nDamage, nFlags, bSimulation, bCombatDamage);
        }

        // char GetDamageImmunity(uint8_t nType)
        private static global::NWN.LowLevel.Delegates.Func_sbyte___IntPtr_byte _GetDamageImmunityDelegateInstance;

        private static sbyte _GetDamageImmunityDelegateHook(__IntPtr __instance, byte nType)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            return __target.GetDamageImmunity(nType);
        }

        // char GetDamageImmunityByFlags(uint16_t nFlags)
        private static global::NWN.LowLevel.Delegates.Func_sbyte___IntPtr_ushort _GetDamageImmunityByFlagsDelegateInstance;

        private static sbyte _GetDamageImmunityByFlagsDelegateHook(__IntPtr __instance, ushort nFlags)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            return __target.GetDamageImmunityByFlags(nFlags);
        }

        // uint32_t GetEffectSpellId()
        private static global::NWN.LowLevel.Delegates.Func_uint___IntPtr _GetEffectSpellIdDelegateInstance;

        private static uint _GetEffectSpellIdDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            return __target.EffectSpellId;
        }

        // void SetEffectSpellId(uint32_t n)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_uint _SetEffectSpellIdDelegateInstance;

        private static void _SetEffectSpellIdDelegateHook(__IntPtr __instance, uint n)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.EffectSpellId = n;
        }

        // void SetLockOrientationToObject(OBJECT_ID oidLockOnObj)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_uint _SetLockOrientationToObjectDelegateInstance;

        private static void _SetLockOrientationToObjectDelegateHook(__IntPtr __instance, uint oidLockOnObj)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.LockOrientationToObject = oidLockOnObj;
        }

        // OBJECT_ID GetLockOrientationToObject()
        private static global::NWN.LowLevel.Delegates.Func_uint___IntPtr _GetLockOrientationToObjectDelegateInstance;

        private static uint _GetLockOrientationToObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            return __target.LockOrientationToObject;
        }

        // CResRef GetPortrait()
        private static global::NWN.LowLevel.Delegates.Action___IntPtr___IntPtr _GetPortraitDelegateInstance;

        private static void _GetPortraitDelegateHook(__IntPtr @return, __IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __ret = __target.Portrait;
            if (ReferenceEquals(__ret, null))
                throw new global::System.ArgumentNullException("__ret", "Cannot be null because it is passed by value.");
            *(global::NWN.LowLevel.CResRef.__Internal*) @return = *(global::NWN.LowLevel.CResRef.__Internal*) __ret.__Instance;
        }

        // void SetPortrait(CResRef cPortrait)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_NWN_LowLevel_CResRef___Internal _SetPortraitDelegateInstance;

        private static void _SetPortraitDelegateHook(__IntPtr __instance, global::NWN.LowLevel.CResRef.__Internal cPortrait)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.Portrait = global::NWN.LowLevel.CResRef.__CreateInstance(cPortrait);
        }

        // uint16_t GetPortraitId()
        private static global::NWN.LowLevel.Delegates.Func_ushort___IntPtr _GetPortraitIdDelegateInstance;

        private static ushort _GetPortraitIdDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            return __target.PortraitId;
        }

        // void SetPortraitId(uint16_t nPortraitId)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_ushort _SetPortraitIdDelegateInstance;

        private static void _SetPortraitIdDelegateHook(__IntPtr __instance, ushort nPortraitId)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.PortraitId = nPortraitId;
        }

        // void BroadcastFloatyData(CNWCCMessageData * pMessageData)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr___IntPtr _BroadcastFloatyDataDelegateInstance;

        private static void _BroadcastFloatyDataDelegateHook(__IntPtr __instance, __IntPtr pMessageData)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __result0 = global::NWN.LowLevel.CNWCCMessageData.__GetOrCreateInstance(pMessageData, false);
            __target.BroadcastFloatyData(__result0);
        }

        // void BroadcastFloatyDataSTRREF(STRREF nStrRef)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_uint _BroadcastFloatyDataSTRREFDelegateInstance;

        private static void _BroadcastFloatyDataSTRREFDelegateHook(__IntPtr __instance, uint nStrRef)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.BroadcastFloatyDataSTRREF(nStrRef);
        }

        // bool GetCanCarrySqlDatabase()
        private static global::NWN.LowLevel.Delegates.Func_bool___IntPtr _GetCanCarrySqlDatabaseDelegateInstance;

        private static bool _GetCanCarrySqlDatabaseDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            return __target.CanCarrySqlDatabase;
        }

        // void UpdateEffectPtrs()
        private static global::NWN.LowLevel.Delegates.Action___IntPtr _UpdateEffectPtrsDelegateInstance;

        private static void _UpdateEffectPtrsDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            __target.UpdateEffectPtrs();
        }

        // void UpdateAttributesOnEffect(CGameEffect * e, BOOL bLoadingGame = false)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr___IntPtr_int _UpdateAttributesOnEffectDelegateInstance;

        private static void _UpdateAttributesOnEffectDelegateHook(__IntPtr __instance, __IntPtr e, int bLoadingGame)
        {
            var __target = global::NWN.LowLevel.CNWSItem.__GetInstance(__instance);
            var __result0 = global::NWN.LowLevel.CGameEffect.__GetOrCreateInstance(e, false);
            __target.UpdateAttributesOnEffect(__result0, bLoadingGame);
        }

        internal static new class VTableLoader
        {
            private static volatile bool initialized;
            private static readonly IntPtr*[] ManagedVTables = new IntPtr*[1];
            private static readonly IntPtr*[] ManagedVTablesDtorOnly = new IntPtr*[1];
            private static readonly IntPtr[] Thunks = new IntPtr[60];
            private static CppSharp.Runtime.VTables VTables;
            private static readonly global::System.Collections.Generic.List<CppSharp.Runtime.SafeUnmanagedMemoryHandle>
                SafeHandles = new global::System.Collections.Generic.List<CppSharp.Runtime.SafeUnmanagedMemoryHandle>();

            static VTableLoader()
            {
                _dtorDelegateInstance += _dtorDelegateHook;
                _AIUpdateDelegateInstance += _AIUpdateDelegateHook;
                _AsNWSItemDelegateInstance += _AsNWSItemDelegateHook;
                _EventHandlerDelegateInstance += _EventHandlerDelegateHook;
                _SetIdDelegateInstance += _SetIdDelegateHook;
                _ResetUpdateTimesDelegateInstance += _ResetUpdateTimesDelegateHook;
                _AsNWCObjectDelegateInstance += _AsNWCObjectDelegateHook;
                _AsNWSObjectDelegateInstance += _AsNWSObjectDelegateHook;
                _AsNWCDoorDelegateInstance += _AsNWCDoorDelegateHook;
                _AsNWSDoorDelegateInstance += _AsNWSDoorDelegateHook;
                _AsNWCModuleDelegateInstance += _AsNWCModuleDelegateHook;
                _AsNWSModuleDelegateInstance += _AsNWSModuleDelegateHook;
                _AsNWCAreaDelegateInstance += _AsNWCAreaDelegateHook;
                _AsNWSAreaDelegateInstance += _AsNWSAreaDelegateHook;
                _AsNWCCreatureDelegateInstance += _AsNWCCreatureDelegateHook;
                _AsNWSCreatureDelegateInstance += _AsNWSCreatureDelegateHook;
                _AsNWCItemDelegateInstance += _AsNWCItemDelegateHook;
                _AsNWCTriggerDelegateInstance += _AsNWCTriggerDelegateHook;
                _AsNWSTriggerDelegateInstance += _AsNWSTriggerDelegateHook;
                _AsNWCProjectileDelegateInstance += _AsNWCProjectileDelegateHook;
                _AsNWSPlayerTURDDelegateInstance += _AsNWSPlayerTURDDelegateHook;
                _AsNWSPlaceableDelegateInstance += _AsNWSPlaceableDelegateHook;
                _AsNWCPlaceableDelegateInstance += _AsNWCPlaceableDelegateHook;
                _AsNWSAreaOfEffectObjectDelegateInstance += _AsNWSAreaOfEffectObjectDelegateHook;
                _AsNWCAreaOfEffectObjectDelegateInstance += _AsNWCAreaOfEffectObjectDelegateHook;
                _AsNWSWaypointDelegateInstance += _AsNWSWaypointDelegateHook;
                _AsNWSEncounterDelegateInstance += _AsNWSEncounterDelegateHook;
                _AsNWCStoreDelegateInstance += _AsNWCStoreDelegateHook;
                _AsNWSStoreDelegateInstance += _AsNWSStoreDelegateHook;
                _AsNWSSoundObjectDelegateInstance += _AsNWSSoundObjectDelegateHook;
                _AsNWCSoundObjectDelegateInstance += _AsNWCSoundObjectDelegateHook;
                _ClearActionDelegateInstance += _ClearActionDelegateHook;
                _SetAnimationDelegateInstance += _SetAnimationDelegateHook;
                _GetDialogResrefDelegateInstance += _GetDialogResrefDelegateHook;
                _GetDialogInterruptableDelegateInstance += _GetDialogInterruptableDelegateHook;
                _GetGenderDelegateInstance += _GetGenderDelegateHook;
                _GetFirstNameDelegateInstance += _GetFirstNameDelegateHook;
                _GetLastNameDelegateInstance += _GetLastNameDelegateHook;
                _GetMaxHitPointsDelegateInstance += _GetMaxHitPointsDelegateHook;
                _GetCurrentHitPointsDelegateInstance += _GetCurrentHitPointsDelegateHook;
                _DoDamageDelegateInstance += _DoDamageDelegateHook;
                _DoDamageReductionDelegateInstance += _DoDamageReductionDelegateHook;
                _DoDamageResistanceDelegateInstance += _DoDamageResistanceDelegateHook;
                _GetMaximumDamageResistanceVsDamageFlagDelegateInstance += _GetMaximumDamageResistanceVsDamageFlagDelegateHook;
                _DoDamageImmunityDelegateInstance += _DoDamageImmunityDelegateHook;
                _GetDamageImmunityDelegateInstance += _GetDamageImmunityDelegateHook;
                _GetDamageImmunityByFlagsDelegateInstance += _GetDamageImmunityByFlagsDelegateHook;
                _GetEffectSpellIdDelegateInstance += _GetEffectSpellIdDelegateHook;
                _SetEffectSpellIdDelegateInstance += _SetEffectSpellIdDelegateHook;
                _SetLockOrientationToObjectDelegateInstance += _SetLockOrientationToObjectDelegateHook;
                _GetLockOrientationToObjectDelegateInstance += _GetLockOrientationToObjectDelegateHook;
                _GetPortraitDelegateInstance += _GetPortraitDelegateHook;
                _SetPortraitDelegateInstance += _SetPortraitDelegateHook;
                _GetPortraitIdDelegateInstance += _GetPortraitIdDelegateHook;
                _SetPortraitIdDelegateInstance += _SetPortraitIdDelegateHook;
                _BroadcastFloatyDataDelegateInstance += _BroadcastFloatyDataDelegateHook;
                _BroadcastFloatyDataSTRREFDelegateInstance += _BroadcastFloatyDataSTRREFDelegateHook;
                _GetCanCarrySqlDatabaseDelegateInstance += _GetCanCarrySqlDatabaseDelegateHook;
                _UpdateEffectPtrsDelegateInstance += _UpdateEffectPtrsDelegateHook;
                _UpdateAttributesOnEffectDelegateInstance += _UpdateAttributesOnEffectDelegateHook;
                Thunks[0] = Marshal.GetFunctionPointerForDelegate(_dtorDelegateInstance);
                Thunks[1] = Marshal.GetFunctionPointerForDelegate(_AIUpdateDelegateInstance);
                Thunks[2] = Marshal.GetFunctionPointerForDelegate(_AsNWSItemDelegateInstance);
                Thunks[3] = Marshal.GetFunctionPointerForDelegate(_EventHandlerDelegateInstance);
                Thunks[4] = Marshal.GetFunctionPointerForDelegate(_SetIdDelegateInstance);
                Thunks[5] = Marshal.GetFunctionPointerForDelegate(_ResetUpdateTimesDelegateInstance);
                Thunks[6] = Marshal.GetFunctionPointerForDelegate(_AsNWCObjectDelegateInstance);
                Thunks[7] = Marshal.GetFunctionPointerForDelegate(_AsNWSObjectDelegateInstance);
                Thunks[8] = Marshal.GetFunctionPointerForDelegate(_AsNWCDoorDelegateInstance);
                Thunks[9] = Marshal.GetFunctionPointerForDelegate(_AsNWSDoorDelegateInstance);
                Thunks[10] = Marshal.GetFunctionPointerForDelegate(_AsNWCModuleDelegateInstance);
                Thunks[11] = Marshal.GetFunctionPointerForDelegate(_AsNWSModuleDelegateInstance);
                Thunks[12] = Marshal.GetFunctionPointerForDelegate(_AsNWCAreaDelegateInstance);
                Thunks[13] = Marshal.GetFunctionPointerForDelegate(_AsNWSAreaDelegateInstance);
                Thunks[14] = Marshal.GetFunctionPointerForDelegate(_AsNWCCreatureDelegateInstance);
                Thunks[15] = Marshal.GetFunctionPointerForDelegate(_AsNWSCreatureDelegateInstance);
                Thunks[16] = Marshal.GetFunctionPointerForDelegate(_AsNWCItemDelegateInstance);
                Thunks[17] = Marshal.GetFunctionPointerForDelegate(_AsNWCTriggerDelegateInstance);
                Thunks[18] = Marshal.GetFunctionPointerForDelegate(_AsNWSTriggerDelegateInstance);
                Thunks[19] = Marshal.GetFunctionPointerForDelegate(_AsNWCProjectileDelegateInstance);
                Thunks[20] = Marshal.GetFunctionPointerForDelegate(_AsNWSPlayerTURDDelegateInstance);
                Thunks[21] = Marshal.GetFunctionPointerForDelegate(_AsNWSPlaceableDelegateInstance);
                Thunks[22] = Marshal.GetFunctionPointerForDelegate(_AsNWCPlaceableDelegateInstance);
                Thunks[23] = Marshal.GetFunctionPointerForDelegate(_AsNWSAreaOfEffectObjectDelegateInstance);
                Thunks[24] = Marshal.GetFunctionPointerForDelegate(_AsNWCAreaOfEffectObjectDelegateInstance);
                Thunks[25] = Marshal.GetFunctionPointerForDelegate(_AsNWSWaypointDelegateInstance);
                Thunks[26] = Marshal.GetFunctionPointerForDelegate(_AsNWSEncounterDelegateInstance);
                Thunks[27] = Marshal.GetFunctionPointerForDelegate(_AsNWCStoreDelegateInstance);
                Thunks[28] = Marshal.GetFunctionPointerForDelegate(_AsNWSStoreDelegateInstance);
                Thunks[29] = Marshal.GetFunctionPointerForDelegate(_AsNWSSoundObjectDelegateInstance);
                Thunks[30] = Marshal.GetFunctionPointerForDelegate(_AsNWCSoundObjectDelegateInstance);
                Thunks[31] = Marshal.GetFunctionPointerForDelegate(_ClearActionDelegateInstance);
                Thunks[32] = Marshal.GetFunctionPointerForDelegate(_SetAnimationDelegateInstance);
                Thunks[33] = Marshal.GetFunctionPointerForDelegate(_GetDialogResrefDelegateInstance);
                Thunks[34] = Marshal.GetFunctionPointerForDelegate(_GetDialogInterruptableDelegateInstance);
                Thunks[35] = Marshal.GetFunctionPointerForDelegate(_GetGenderDelegateInstance);
                Thunks[36] = Marshal.GetFunctionPointerForDelegate(_GetFirstNameDelegateInstance);
                Thunks[37] = Marshal.GetFunctionPointerForDelegate(_GetLastNameDelegateInstance);
                Thunks[38] = Marshal.GetFunctionPointerForDelegate(_GetMaxHitPointsDelegateInstance);
                Thunks[39] = Marshal.GetFunctionPointerForDelegate(_GetCurrentHitPointsDelegateInstance);
                Thunks[40] = Marshal.GetFunctionPointerForDelegate(_DoDamageDelegateInstance);
                Thunks[41] = Marshal.GetFunctionPointerForDelegate(_DoDamageReductionDelegateInstance);
                Thunks[42] = Marshal.GetFunctionPointerForDelegate(_DoDamageResistanceDelegateInstance);
                Thunks[43] = Marshal.GetFunctionPointerForDelegate(_GetMaximumDamageResistanceVsDamageFlagDelegateInstance);
                Thunks[44] = Marshal.GetFunctionPointerForDelegate(_DoDamageImmunityDelegateInstance);
                Thunks[45] = Marshal.GetFunctionPointerForDelegate(_GetDamageImmunityDelegateInstance);
                Thunks[46] = Marshal.GetFunctionPointerForDelegate(_GetDamageImmunityByFlagsDelegateInstance);
                Thunks[47] = Marshal.GetFunctionPointerForDelegate(_GetEffectSpellIdDelegateInstance);
                Thunks[48] = Marshal.GetFunctionPointerForDelegate(_SetEffectSpellIdDelegateInstance);
                Thunks[49] = Marshal.GetFunctionPointerForDelegate(_SetLockOrientationToObjectDelegateInstance);
                Thunks[50] = Marshal.GetFunctionPointerForDelegate(_GetLockOrientationToObjectDelegateInstance);
                Thunks[51] = Marshal.GetFunctionPointerForDelegate(_GetPortraitDelegateInstance);
                Thunks[52] = Marshal.GetFunctionPointerForDelegate(_SetPortraitDelegateInstance);
                Thunks[53] = Marshal.GetFunctionPointerForDelegate(_GetPortraitIdDelegateInstance);
                Thunks[54] = Marshal.GetFunctionPointerForDelegate(_SetPortraitIdDelegateInstance);
                Thunks[55] = Marshal.GetFunctionPointerForDelegate(_BroadcastFloatyDataDelegateInstance);
                Thunks[56] = Marshal.GetFunctionPointerForDelegate(_BroadcastFloatyDataSTRREFDelegateInstance);
                Thunks[57] = Marshal.GetFunctionPointerForDelegate(_GetCanCarrySqlDatabaseDelegateInstance);
                Thunks[58] = Marshal.GetFunctionPointerForDelegate(_UpdateEffectPtrsDelegateInstance);
                Thunks[59] = Marshal.GetFunctionPointerForDelegate(_UpdateAttributesOnEffectDelegateInstance);
            }

            public static CppSharp.Runtime.VTables SetupVTables(IntPtr instance, bool destructorOnly = false)
            {
                if (!initialized)
                {
                    lock (ManagedVTables)
                    {
                        if (!initialized)
                        {
                            initialized = true;
                            VTables.Tables = new IntPtr[] { *(IntPtr*)(instance + 0) };
                            VTables.Methods = new Delegate[1][];
                            ManagedVTablesDtorOnly[0] = CppSharp.Runtime.VTables.CloneTable(SafeHandles, instance, 0, 70);
                            ManagedVTablesDtorOnly[0][1] = Thunks[0];
                            ManagedVTablesDtorOnly[0][8] = Thunks[0];
                            ManagedVTables[0] = CppSharp.Runtime.VTables.CloneTable(SafeHandles, instance, 0, 70);
                            ManagedVTables[0][1] = Thunks[0];
                            ManagedVTables[0][2] = Thunks[1];
                            ManagedVTables[0][3] = Thunks[2];
                            ManagedVTables[0][4] = Thunks[3];
                            ManagedVTables[0][8] = Thunks[0];
                            ManagedVTables[0][9] = Thunks[4];
                            ManagedVTables[0][10] = Thunks[5];
                            ManagedVTables[0][11] = Thunks[6];
                            ManagedVTables[0][12] = Thunks[7];
                            ManagedVTables[0][13] = Thunks[8];
                            ManagedVTables[0][14] = Thunks[9];
                            ManagedVTables[0][15] = Thunks[10];
                            ManagedVTables[0][16] = Thunks[11];
                            ManagedVTables[0][17] = Thunks[12];
                            ManagedVTables[0][18] = Thunks[13];
                            ManagedVTables[0][19] = Thunks[14];
                            ManagedVTables[0][20] = Thunks[15];
                            ManagedVTables[0][21] = Thunks[16];
                            ManagedVTables[0][22] = Thunks[2];
                            ManagedVTables[0][23] = Thunks[17];
                            ManagedVTables[0][24] = Thunks[18];
                            ManagedVTables[0][25] = Thunks[19];
                            ManagedVTables[0][26] = Thunks[20];
                            ManagedVTables[0][27] = Thunks[21];
                            ManagedVTables[0][28] = Thunks[22];
                            ManagedVTables[0][29] = Thunks[23];
                            ManagedVTables[0][30] = Thunks[24];
                            ManagedVTables[0][31] = Thunks[25];
                            ManagedVTables[0][32] = Thunks[26];
                            ManagedVTables[0][33] = Thunks[27];
                            ManagedVTables[0][34] = Thunks[28];
                            ManagedVTables[0][35] = Thunks[29];
                            ManagedVTables[0][36] = Thunks[30];
                            ManagedVTables[0][37] = Thunks[1];
                            ManagedVTables[0][38] = Thunks[31];
                            ManagedVTables[0][39] = Thunks[3];
                            ManagedVTables[0][40] = Thunks[32];
                            ManagedVTables[0][41] = Thunks[33];
                            ManagedVTables[0][42] = Thunks[34];
                            ManagedVTables[0][43] = Thunks[35];
                            ManagedVTables[0][44] = Thunks[36];
                            ManagedVTables[0][45] = Thunks[37];
                            ManagedVTables[0][46] = Thunks[38];
                            ManagedVTables[0][47] = Thunks[39];
                            ManagedVTables[0][48] = Thunks[40];
                            ManagedVTables[0][49] = Thunks[41];
                            ManagedVTables[0][50] = Thunks[42];
                            ManagedVTables[0][51] = Thunks[43];
                            ManagedVTables[0][52] = Thunks[44];
                            ManagedVTables[0][53] = Thunks[45];
                            ManagedVTables[0][54] = Thunks[46];
                            ManagedVTables[0][55] = Thunks[47];
                            ManagedVTables[0][56] = Thunks[48];
                            ManagedVTables[0][57] = Thunks[49];
                            ManagedVTables[0][58] = Thunks[50];
                            ManagedVTables[0][59] = Thunks[51];
                            ManagedVTables[0][60] = Thunks[52];
                            ManagedVTables[0][61] = Thunks[53];
                            ManagedVTables[0][62] = Thunks[54];
                            ManagedVTables[0][63] = Thunks[55];
                            ManagedVTables[0][64] = Thunks[56];
                            ManagedVTables[0][65] = Thunks[57];
                            ManagedVTables[0][66] = Thunks[58];
                            ManagedVTables[0][67] = Thunks[59];
                            VTables.Methods[0] = new Delegate[70];
                        }
                    }
                }

                if (destructorOnly)
                {
                    *(IntPtr**)(instance + 0) = ManagedVTablesDtorOnly[0];
                }
                else
                {
                    *(IntPtr**)(instance + 0) = ManagedVTables[0];
                }
                return VTables;
            }
        }

        internal override CppSharp.Runtime.VTables __VTables
        { 
            get {
                if (__vtables.IsEmpty)
                    __vtables.Tables = new IntPtr[] { *(IntPtr*)(__Instance + 0) };
                return __vtables;
            }

            set {        
                __vtables = value;
            }
        }

        internal override void SetupVTables(bool destructorOnly = false)
        {
            if (__VTables.IsTransient)
                __VTables = VTableLoader.SetupVTables(__Instance, destructorOnly);
        }
        #endregion
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
