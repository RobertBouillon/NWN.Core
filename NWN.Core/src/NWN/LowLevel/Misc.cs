// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    namespace NWNXLib
    {
        namespace API
        {
            namespace Constants
            {
                namespace QuickbarType
                {
                    public enum TYPE : uint
                    {
                        Empty = 0,
                        Item = 1,
                        Spell = 2,
                        Skill = 3,
                        Feat = 4,
                        Script = 5,
                        Dialog = 6,
                        Attack = 7,
                        Emote = 8,
                        ItemPropertyCastspell = 9,
                        ModeToggle = 10,
                        DMCreateCreature = 11,
                        DMCreateItem = 12,
                        DMCreateEncounter = 13,
                        DMCreateWaypoint = 14,
                        DMCreateTrigger = 15,
                        DMCreatePortal = 16,
                        DMCreatePlaceable = 17,
                        CommandLine = 18,
                        DMMakeInvulnerable = 19,
                        DMForceRest = 20,
                        DMGoto = 21,
                        DMHeal = 22,
                        DMKill = 23,
                        DMPossess = 24,
                        DMImpersonate = 25,
                        DMGiveGold = 27,
                        DMTakeGold = 28,
                        DMGiveItem = 29,
                        DMTakeItem = 30,
                        DMGiveXP = 31,
                        DMTakeXP = 32,
                        DMGiveLevel = 33,
                        DMTakeLevel = 34,
                        DMLimbo = 35,
                        DMToggleAI = 36,
                        RollDie = 37,
                        PossessFamiliar = 38,
                        AssociateCommand = 39,
                        Examine = 40,
                        Barter = 41,
                        QuickChat = 42,
                        CancelPolymorph = 43,
                        SpellLikeAbility = 44,
                        DMGiveGood = 45,
                        DMGiveEvil = 46,
                        DMGiveLawful = 47,
                        DMGiveChaotic = 48
                    }

                    public unsafe partial class Misc
                    {
                        public partial struct __Internal
                        {
                            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7NWNXLib3API9Constants12QuickbarType8ToStringEj", CallingConvention = __CallingConvention.Cdecl)]
                            internal static extern __IntPtr ToString(uint value);
                        }

                        public static string ToString(uint value)
                        {
                            var __ret = __Internal.ToString(value);
                            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, __ret);
                        }

                        public static int MIN { get; } = 0;

                        public static int MAX { get; } = 48;
                    }
                }

                namespace ChatChannel
                {
                    public enum TYPE : uint
                    {
                        PlayerTalk = 1,
                        PlayerShout = 2,
                        PlayerWhisper = 3,
                        PlayerTell = 4,
                        ServerMessage = 5,
                        PlayerParty = 6,
                        PlayerDm = 14,
                        DmTalk = 17,
                        DmShout = 18,
                        DmWhisper = 19,
                        DmTell = 20,
                        DmParty = 22,
                        DmDm = 30
                    }

                    public unsafe partial class Misc
                    {
                        public partial struct __Internal
                        {
                            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7NWNXLib3API9Constants11ChatChannel8ToStringEj", CallingConvention = __CallingConvention.Cdecl)]
                            internal static extern __IntPtr ToString(uint value);
                        }

                        public static string ToString(uint value)
                        {
                            var __ret = __Internal.ToString(value);
                            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, __ret);
                        }

                        public static int MIN { get; } = 0;

                        public static int MAX { get; } = 30;
                    }
                }

                namespace PvPSetting
                {
                    public enum TYPE : uint
                    {
                        None = 0,
                        Party = 1,
                        Full = 2,
                        Default = 3
                    }

                    public unsafe partial class Misc
                    {
                        public partial struct __Internal
                        {
                            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7NWNXLib3API9Constants10PvPSetting8ToStringEj", CallingConvention = __CallingConvention.Cdecl)]
                            internal static extern __IntPtr ToString(uint value);
                        }

                        public static string ToString(uint value)
                        {
                            var __ret = __Internal.ToString(value);
                            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, __ret);
                        }

                        public static int MIN { get; } = 0;

                        public static int MAX { get; } = 3;
                    }
                }

                namespace CharacterType
                {
                    public enum TYPE : uint
                    {
                        Local = 1,
                        DM = 2,
                        Server = 3,
                        ServerSubdir = 4
                    }

                    public unsafe partial class Misc
                    {
                        public partial struct __Internal
                        {
                            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7NWNXLib3API9Constants13CharacterType8ToStringEj", CallingConvention = __CallingConvention.Cdecl)]
                            internal static extern __IntPtr ToString(uint value);
                        }

                        public static string ToString(uint value)
                        {
                            var __ret = __Internal.ToString(value);
                            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, __ret);
                        }

                        public static int MIN { get; } = 1;

                        public static int MAX { get; } = 4;
                    }
                }

                namespace ObjectVisualTransform
                {
                    public enum TYPE : uint
                    {
                        Scale = 10,
                        RotateX = 21,
                        RotateY = 22,
                        RotateZ = 23,
                        TranslateX = 31,
                        TranslateY = 32,
                        TranslateZ = 33,
                        AnimationSpeed = 40
                    }

                    public unsafe partial class Misc
                    {
                        public partial struct __Internal
                        {
                            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7NWNXLib3API9Constants21ObjectVisualTransform8ToStringEj", CallingConvention = __CallingConvention.Cdecl)]
                            internal static extern __IntPtr ToString(uint value);
                        }

                        public static string ToString(uint value)
                        {
                            var __ret = __Internal.ToString(value);
                            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, __ret);
                        }

                        public static int MIN { get; } = 10;

                        public static int MAX { get; } = 40;
                    }
                }

                namespace AssociateType
                {
                    public enum TYPE : uint
                    {
                        None = 0,
                        Henchman = 1,
                        AnimalCompanion = 2,
                        Familiar = 3,
                        Summoned = 4,
                        Dominated = 5
                    }

                    public unsafe partial class Misc
                    {
                        public partial struct __Internal
                        {
                            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7NWNXLib3API9Constants13AssociateType8ToStringEj", CallingConvention = __CallingConvention.Cdecl)]
                            internal static extern __IntPtr ToString(uint value);
                        }

                        public static string ToString(uint value)
                        {
                            var __ret = __Internal.ToString(value);
                            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, __ret);
                        }

                        public static int MIN { get; } = 0;

                        public static int MAX { get; } = 5;
                    }
                }
            }
        }
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
