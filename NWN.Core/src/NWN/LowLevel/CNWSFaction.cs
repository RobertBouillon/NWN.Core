// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    public unsafe partial class CNWSFaction : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_listFactionMembers;

            [FieldOffset(16)]
            internal int m_nFactionId;

            [FieldOffset(20)]
            internal int m_nParentFactionId;

            [FieldOffset(24)]
            internal int m_nMemberListArrayIndex;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sFactionName;

            [FieldOffset(48)]
            internal int m_bGlobalReaction;

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFactionC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctor(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFactionC2Ej", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctor(__IntPtr __instance, uint oidLeaderID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFactionC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFactionD2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtor(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction10InitialiseEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Initialise(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction9AddMemberEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddMember(__IntPtr __instance, uint oidNewMemberID, int bInPostProcess);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction11AttemptJoinEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AttemptJoin(__IntPtr __instance, uint oidNewMemberID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction13AttemptRemoveEjj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AttemptRemove(__IntPtr __instance, uint oidRemoveeID, uint oidRemoverID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction13GetMemberListEPPj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetMemberList(__IntPtr __instance, uint** pMemberIDs);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction12InviteMemberEjj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int InviteMember(__IntPtr __instance, uint oidNewMemberID, uint oidInviterPlayerID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction12GetIsInvitedEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsInvited(__IntPtr __instance, uint oidCreatureID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction12RemoveMemberEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveMember(__IntPtr __instance, uint oidMemberID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction14ChangeMemberIdEjj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ChangeMemberId(__IntPtr __instance, uint oidOld, uint oidNew);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction15SendChatMessageEj10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SendChatMessage(__IntPtr __instance, uint oidSpeaker, __IntPtr sSpeakerMessage);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction21SendFactionUpdateListEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SendFactionUpdateList(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction20SendFactionUpdateAddEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SendFactionUpdateAdd(__IntPtr __instance, uint oidAddedMemberID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction23SendFactionUpdateRemoveEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SendFactionUpdateRemove(__IntPtr __instance, uint oidRemovedMemberID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction16GetWeakestMemberEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetWeakestMember(__IntPtr __instance, uint oidReferenceFactionMember, int bMustBeVisible);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction18GetStrongestMemberEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetStrongestMember(__IntPtr __instance, uint oidReferenceFactionMember, int bMustBeVisible);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction20GetMostDamagedMemberEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetMostDamagedMember(__IntPtr __instance, uint oidReferenceFactionMember, int bMustBeVisible);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction21GetLeastDamagedMemberEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetLeastDamagedMember(__IntPtr __instance, uint oidReferenceFactionMember, int bMustBeVisible);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction20GetAverageReputationEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetAverageReputation(__IntPtr __instance, uint oidSubject);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction10GetWorstACEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetWorstAC(__IntPtr __instance, uint oidReferenceFactionMember, int bMustBeVisible);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction9GetBestACEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetBestAC(__IntPtr __instance, uint oidReferenceFactionMember, int bMustBeVisible);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction18GetCreatureInPartyEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCreatureInParty(__IntPtr __instance, uint oidCreature);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction18TransferLeadershipEjj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int TransferLeadership(__IntPtr __instance, uint oidNewLeader, uint oidOldLeader);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction16GetFactionMemberEii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetFactionMember(__IntPtr __instance, int nStartPos, int bPCOnly);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction26ClearAllReputationsTowardsEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ClearAllReputationsTowards(__IntPtr __instance, uint oidCreature);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction7GetGoldEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetGold(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction27GetAverageGoodEvilAlignmentEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetAverageGoodEvilAlignment(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction27GetAverageLawChaosAlignmentEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetAverageLawChaosAlignment(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction15GetAverageLevelEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetAverageLevel(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction12GetAverageXPEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetAverageXP(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction20GetMostFrequentClassEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetMostFrequentClass(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction17GetSingletonPartyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetSingletonParty(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction9GetLeaderEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetLeader(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN11CNWSFaction17GetFactionManagerEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetFactionManager(__IntPtr __instance);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CNWSFaction> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CNWSFaction>();

        protected bool __ownsNativeInstance;

        internal static CNWSFaction __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new CNWSFaction(native.ToPointer(), skipVTables);
        }

        internal static CNWSFaction __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (CNWSFaction)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static CNWSFaction __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new CNWSFaction(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            global::NWN.LowLevel.CNWSFaction.__Internal.cctor(ret, new __IntPtr(&native));
            return ret.ToPointer();
        }

        private CNWSFaction(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CNWSFaction(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public CNWSFaction()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWSFaction.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            __Internal.ctor(__Instance);
        }

        public CNWSFaction(uint oidLeaderID)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWSFaction.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            __Internal.ctor(__Instance, oidLeaderID);
        }

        public CNWSFaction(global::NWN.LowLevel.CNWSFaction _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWSFaction.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            if (ReferenceEquals(_0, null))
                throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = _0.__Instance;
            __Internal.cctor(__Instance, __arg0);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::NWN.LowLevel.CNWSFaction __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (disposing)
                __Internal.dtor(__Instance);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public void Initialise()
        {
            __Internal.Initialise(__Instance);
        }

        public void AddMember(uint oidNewMemberID, int bInPostProcess)
        {
            __Internal.AddMember(__Instance, oidNewMemberID, bInPostProcess);
        }

        public void AttemptJoin(uint oidNewMemberID)
        {
            __Internal.AttemptJoin(__Instance, oidNewMemberID);
        }

        public int AttemptRemove(uint oidRemoveeID, uint oidRemoverID)
        {
            var __ret = __Internal.AttemptRemove(__Instance, oidRemoveeID, oidRemoverID);
            return __ret;
        }

        public uint GetMemberList(uint** pMemberIDs)
        {
            var __ret = __Internal.GetMemberList(__Instance, pMemberIDs);
            return __ret;
        }

        public int InviteMember(uint oidNewMemberID, uint oidInviterPlayerID)
        {
            var __ret = __Internal.InviteMember(__Instance, oidNewMemberID, oidInviterPlayerID);
            return __ret;
        }

        public int GetIsInvited(uint oidCreatureID)
        {
            var __ret = __Internal.GetIsInvited(__Instance, oidCreatureID);
            return __ret;
        }

        public void RemoveMember(uint oidMemberID)
        {
            __Internal.RemoveMember(__Instance, oidMemberID);
        }

        public void ChangeMemberId(uint oidOld, uint oidNew)
        {
            __Internal.ChangeMemberId(__Instance, oidOld, oidNew);
        }

        public void SendChatMessage(uint oidSpeaker, global::NWN.LowLevel.CExoString sSpeakerMessage)
        {
            if (ReferenceEquals(sSpeakerMessage, null))
                throw new global::System.ArgumentNullException("sSpeakerMessage", "Cannot be null because it is passed by value.");
            var __arg1 = sSpeakerMessage.__Instance;
            __Internal.SendChatMessage(__Instance, oidSpeaker, __arg1);
        }

        public void SendFactionUpdateList()
        {
            __Internal.SendFactionUpdateList(__Instance);
        }

        public void SendFactionUpdateAdd(uint oidAddedMemberID)
        {
            __Internal.SendFactionUpdateAdd(__Instance, oidAddedMemberID);
        }

        public void SendFactionUpdateRemove(uint oidRemovedMemberID)
        {
            __Internal.SendFactionUpdateRemove(__Instance, oidRemovedMemberID);
        }

        public uint GetWeakestMember(uint oidReferenceFactionMember, int bMustBeVisible)
        {
            var __ret = __Internal.GetWeakestMember(__Instance, oidReferenceFactionMember, bMustBeVisible);
            return __ret;
        }

        public uint GetStrongestMember(uint oidReferenceFactionMember, int bMustBeVisible)
        {
            var __ret = __Internal.GetStrongestMember(__Instance, oidReferenceFactionMember, bMustBeVisible);
            return __ret;
        }

        public uint GetMostDamagedMember(uint oidReferenceFactionMember, int bMustBeVisible)
        {
            var __ret = __Internal.GetMostDamagedMember(__Instance, oidReferenceFactionMember, bMustBeVisible);
            return __ret;
        }

        public uint GetLeastDamagedMember(uint oidReferenceFactionMember, int bMustBeVisible)
        {
            var __ret = __Internal.GetLeastDamagedMember(__Instance, oidReferenceFactionMember, bMustBeVisible);
            return __ret;
        }

        public int GetAverageReputation(uint oidSubject)
        {
            var __ret = __Internal.GetAverageReputation(__Instance, oidSubject);
            return __ret;
        }

        public uint GetWorstAC(uint oidReferenceFactionMember, int bMustBeVisible)
        {
            var __ret = __Internal.GetWorstAC(__Instance, oidReferenceFactionMember, bMustBeVisible);
            return __ret;
        }

        public uint GetBestAC(uint oidReferenceFactionMember, int bMustBeVisible)
        {
            var __ret = __Internal.GetBestAC(__Instance, oidReferenceFactionMember, bMustBeVisible);
            return __ret;
        }

        public int GetCreatureInParty(uint oidCreature)
        {
            var __ret = __Internal.GetCreatureInParty(__Instance, oidCreature);
            return __ret;
        }

        public int TransferLeadership(uint oidNewLeader, uint oidOldLeader)
        {
            var __ret = __Internal.TransferLeadership(__Instance, oidNewLeader, oidOldLeader);
            return __ret;
        }

        public uint GetFactionMember(int nStartPos, int bPCOnly)
        {
            var __ret = __Internal.GetFactionMember(__Instance, nStartPos, bPCOnly);
            return __ret;
        }

        public void ClearAllReputationsTowards(uint oidCreature)
        {
            __Internal.ClearAllReputationsTowards(__Instance, oidCreature);
        }

        public static implicit operator global::NWN.LowLevel.CNWSFaction(uint oidLeaderID)
        {
            return new global::NWN.LowLevel.CNWSFaction(oidLeaderID);
        }

        public global::NWN.LowLevel.CExoArrayList<uint> MListFactionMembers
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<uint>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_listFactionMembers));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_listFactionMembers = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public int MNFactionId
        {
            get
            {
                return ((__Internal*)__Instance)->m_nFactionId;
            }

            set
            {
                ((__Internal*)__Instance)->m_nFactionId = value;
            }
        }

        public int MNParentFactionId
        {
            get
            {
                return ((__Internal*)__Instance)->m_nParentFactionId;
            }

            set
            {
                ((__Internal*)__Instance)->m_nParentFactionId = value;
            }
        }

        public int MNMemberListArrayIndex
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMemberListArrayIndex;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMemberListArrayIndex = value;
            }
        }

        public global::NWN.LowLevel.CExoString MSFactionName
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sFactionName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sFactionName = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public int MBGlobalReaction
        {
            get
            {
                return ((__Internal*)__Instance)->m_bGlobalReaction;
            }

            set
            {
                ((__Internal*)__Instance)->m_bGlobalReaction = value;
            }
        }

        public int Gold
        {
            get
            {
                var __ret = __Internal.GetGold(__Instance);
                return __ret;
            }
        }

        public int AverageGoodEvilAlignment
        {
            get
            {
                var __ret = __Internal.GetAverageGoodEvilAlignment(__Instance);
                return __ret;
            }
        }

        public int AverageLawChaosAlignment
        {
            get
            {
                var __ret = __Internal.GetAverageLawChaosAlignment(__Instance);
                return __ret;
            }
        }

        public int AverageLevel
        {
            get
            {
                var __ret = __Internal.GetAverageLevel(__Instance);
                return __ret;
            }
        }

        public int AverageXP
        {
            get
            {
                var __ret = __Internal.GetAverageXP(__Instance);
                return __ret;
            }
        }

        public int MostFrequentClass
        {
            get
            {
                var __ret = __Internal.GetMostFrequentClass(__Instance);
                return __ret;
            }
        }

        public int SingletonParty
        {
            get
            {
                var __ret = __Internal.GetSingletonParty(__Instance);
                return __ret;
            }
        }

        public uint Leader
        {
            get
            {
                var __ret = __Internal.GetLeader(__Instance);
                return __ret;
            }
        }

        public global::NWN.LowLevel.CFactionManager FactionManager
        {
            get
            {
                var __ret = __Internal.GetFactionManager(__Instance);
                var __result0 = global::NWN.LowLevel.CFactionManager.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
