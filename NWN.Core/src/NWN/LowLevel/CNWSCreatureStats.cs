// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    public unsafe partial class CNWSCreatureStats : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 1744)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_lstFeats;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_lstFeatUses;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_lstBonusFeats;

            [FieldOffset(48)]
            internal __IntPtr m_pBaseCreature;

            [FieldOffset(56)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_lstLevelStats;

            [FieldOffset(72)]
            internal global::NWN.LowLevel.CExoLocString.__Internal m_lsFirstName;

            [FieldOffset(88)]
            internal global::NWN.LowLevel.CExoLocString.__Internal m_lsLastName;

            [FieldOffset(104)]
            internal global::NWN.LowLevel.CResRef.__Internal m_cDialog;

            [FieldOffset(136)]
            internal int m_bDialogInterruptable;

            [FieldOffset(144)]
            internal global::NWN.LowLevel.CExoLocString.__Internal m_sDescription;

            [FieldOffset(160)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sDescriptionOverride;

            [FieldOffset(176)]
            internal int m_nAge;

            [FieldOffset(180)]
            internal byte m_nGender;

            [FieldOffset(184)]
            internal uint m_nExperience;

            [FieldOffset(188)]
            internal int m_bIsDMCharacterFile;

            [FieldOffset(192)]
            internal int m_bIsPC;

            [FieldOffset(196)]
            internal int m_bIsAIDisabledPossess;

            [FieldOffset(200)]
            internal int m_bIsAIDisabledOverride;

            [FieldOffset(204)]
            internal int m_bDMManifested;

            [FieldOffset(208)]
            internal byte m_nMultiClassLeveledUpIn;

            [FieldOffset(212)]
            internal int m_nFactionId;

            [FieldOffset(216)]
            internal int m_nOriginalFactionId;

            [FieldOffset(220)]
            internal int m_nPreDominationFactionId;

            [FieldOffset(224)]
            internal float m_fChallengeRating;

            [FieldOffset(228)]
            internal byte m_nStartingPackage;

            [FieldOffset(229)]
            internal byte m_nNumMultiClasses;

            [FieldOffset(232)]
            internal fixed byte m_ClassInfo[1176];

            [FieldOffset(1408)]
            internal ushort m_nRace;

            [FieldOffset(1416)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sSubRace;

            [FieldOffset(1432)]
            internal byte m_nStrengthBase;

            [FieldOffset(1433)]
            internal sbyte m_nStrengthModifier;

            [FieldOffset(1434)]
            internal byte m_nDexterityBase;

            [FieldOffset(1435)]
            internal sbyte m_nDexterityModifier;

            [FieldOffset(1436)]
            internal byte m_nConstitutionBase;

            [FieldOffset(1437)]
            internal sbyte m_nConstitutionModifier;

            [FieldOffset(1438)]
            internal byte m_nIntelligenceBase;

            [FieldOffset(1439)]
            internal sbyte m_nIntelligenceModifier;

            [FieldOffset(1440)]
            internal byte m_nWisdomBase;

            [FieldOffset(1441)]
            internal sbyte m_nWisdomModifier;

            [FieldOffset(1442)]
            internal byte m_nCharismaBase;

            [FieldOffset(1443)]
            internal sbyte m_nCharismaModifier;

            [FieldOffset(1444)]
            internal sbyte m_nACNaturalBase;

            [FieldOffset(1445)]
            internal sbyte m_nACArmorBase;

            [FieldOffset(1446)]
            internal sbyte m_nACShieldBase;

            [FieldOffset(1447)]
            internal sbyte m_nACArmorMod;

            [FieldOffset(1448)]
            internal sbyte m_nACArmorNeg;

            [FieldOffset(1449)]
            internal sbyte m_nACDeflectionMod;

            [FieldOffset(1450)]
            internal sbyte m_nACDeflectionNeg;

            [FieldOffset(1451)]
            internal sbyte m_nACShieldMod;

            [FieldOffset(1452)]
            internal sbyte m_nACShieldNeg;

            [FieldOffset(1453)]
            internal sbyte m_nACNaturalMod;

            [FieldOffset(1454)]
            internal sbyte m_nACNaturalNeg;

            [FieldOffset(1455)]
            internal sbyte m_nACDodgeMod;

            [FieldOffset(1456)]
            internal sbyte m_nACDodgeNeg;

            [FieldOffset(1457)]
            internal byte m_nBaseAttackBonus;

            [FieldOffset(1458)]
            internal byte m_nOverrideBaseAttackBonus;

            [FieldOffset(1459)]
            internal sbyte m_nEnemyAttackBonus;

            [FieldOffset(1464)]
            internal __IntPtr m_nDamageImmunity;

            [FieldOffset(1472)]
            internal int m_nDamageRoll;

            [FieldOffset(1476)]
            internal int m_nCriticalHitRoll;

            [FieldOffset(1480)]
            internal int m_nCriticalHitMultiplier;

            [FieldOffset(1484)]
            internal byte m_nAttacksPerRound;

            [FieldOffset(1488)]
            internal __IntPtr m_pCombatInformation;

            [FieldOffset(1496)]
            internal sbyte m_nArcaneSpellFailure;

            [FieldOffset(1497)]
            internal byte m_nBaseArmorArcaneSpellFailure;

            [FieldOffset(1498)]
            internal byte m_nBaseShieldArcaneSpellFailure;

            [FieldOffset(1499)]
            internal fixed byte m_pSpellFailure[9];

            [FieldOffset(1508)]
            internal sbyte m_nSpellResistance;

            [FieldOffset(1509)]
            internal sbyte m_nSpellResistancePenalty;

            [FieldOffset(1512)]
            internal __IntPtr m_pSpellLikeAbilityList;

            [FieldOffset(1520)]
            internal ushort m_nTempHitpointsPtr;

            [FieldOffset(1522)]
            internal ushort m_nACVersusPtr;

            [FieldOffset(1524)]
            internal ushort m_nAttackBonusPtr;

            [FieldOffset(1526)]
            internal ushort m_nDamageReductionPtr;

            [FieldOffset(1528)]
            internal ushort m_nDamageResistancePtr;

            [FieldOffset(1530)]
            internal ushort m_nDamageBonusPtr;

            [FieldOffset(1532)]
            internal ushort m_nAIStatePtr;

            [FieldOffset(1534)]
            internal ushort m_nEffectIconPtr;

            [FieldOffset(1536)]
            internal ushort m_nSanctuaryPtr;

            [FieldOffset(1538)]
            internal ushort m_nInvisibilityPtr;

            [FieldOffset(1540)]
            internal ushort m_nSpellResistancePtr;

            [FieldOffset(1542)]
            internal ushort m_nAbilityPtr;

            [FieldOffset(1544)]
            internal ushort m_nSeeInvisiblePtr;

            [FieldOffset(1546)]
            internal ushort m_nUltraVisionPtr;

            [FieldOffset(1548)]
            internal ushort m_nMissChancePtr;

            [FieldOffset(1550)]
            internal ushort m_nConcealmentPtr;

            [FieldOffset(1552)]
            internal ushort m_nBlindnessPtr;

            [FieldOffset(1554)]
            internal ushort m_nWalkAnimationPtr;

            [FieldOffset(1556)]
            internal ushort m_nSpellLevelAbsorptionPtr;

            [FieldOffset(1558)]
            internal ushort m_nSpellImmunityPtr;

            [FieldOffset(1560)]
            internal ushort m_nDamageShieldPtr;

            [FieldOffset(1562)]
            internal ushort m_nSkillBonusPtr;

            [FieldOffset(1564)]
            internal ushort m_nSavingThrowBonusPtr;

            [FieldOffset(1566)]
            internal ushort m_nHastePtr;

            [FieldOffset(1568)]
            internal ushort m_nEffectImmunityPtr;

            [FieldOffset(1570)]
            internal ushort m_nLimitMovementSpeedPtr;

            [FieldOffset(1572)]
            internal ushort m_nMovementSpeedDecreasePtr;

            [FieldOffset(1574)]
            internal ushort m_nSkillPointsRemaining;

            [FieldOffset(1576)]
            internal __IntPtr m_lstSkillRanks;

            [FieldOffset(1584)]
            internal sbyte m_nArmorCheckPenalty;

            [FieldOffset(1585)]
            internal sbyte m_nShieldCheckPenalty;

            [FieldOffset(1586)]
            internal global::NWN.LowLevel.CResRef.__Internal m_cPortrait;

            [FieldOffset(1618)]
            internal short m_nAlignmentGoodEvil;

            [FieldOffset(1620)]
            internal short m_nAlignmentLawChaos;

            [FieldOffset(1622)]
            internal byte m_nSkinColor;

            [FieldOffset(1623)]
            internal byte m_nHairColor;

            [FieldOffset(1624)]
            internal byte m_nTattoo1Color;

            [FieldOffset(1625)]
            internal byte m_nTattoo2Color;

            [FieldOffset(1626)]
            internal ushort m_nAppearanceType;

            [FieldOffset(1628)]
            internal byte m_nPhenoType;

            [FieldOffset(1629)]
            internal byte m_nHeadVariation;

            [FieldOffset(1630)]
            internal fixed byte m_pPartVariation[19];

            [FieldOffset(1652)]
            internal uint m_nTailVariation;

            [FieldOffset(1656)]
            internal uint m_nWingVariation;

            [FieldOffset(1660)]
            internal int m_nMovementRate;

            [FieldOffset(1664)]
            internal float m_fMovementRunSpeed;

            [FieldOffset(1668)]
            internal float m_fMovementWalkSpeed;

            [FieldOffset(1672)]
            internal sbyte m_nFortSavingThrowMisc;

            [FieldOffset(1673)]
            internal sbyte m_nWillSavingThrowMisc;

            [FieldOffset(1674)]
            internal sbyte m_nReflexSavingThrowMisc;

            [FieldOffset(1676)]
            internal int m_nAnimalCompanionCreatureType;

            [FieldOffset(1680)]
            internal int m_nFamiliarCreatureType;

            [FieldOffset(1688)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sAnimalCompanionName;

            [FieldOffset(1704)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sFamiliarName;

            [FieldOffset(1720)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sDeity;

            [FieldOffset(1736)]
            internal uint m_nLatestDataMigration;

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStatsC2EP12CNWSCreature", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctor(__IntPtr __instance, __IntPtr pCreature);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStatsC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor_1(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStatsD2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtor(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21UpdateLastStatsObjectEmP22CNWCreatureStatsUpdate", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void UpdateLastStatsObject(__IntPtr __instance, ulong nUpdatesRequired, __IntPtr updateObject);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13GetLevelStatsEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetLevelStats(__IntPtr __instance, byte nLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16ReadStatsFromGffEP7CResGFFP10CResStructP26CNWSCreatureAppearanceInfoiii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint ReadStatsFromGff(__IntPtr __instance, __IntPtr pRes, __IntPtr pGffStructWithCreatureStats, __IntPtr pAppInfo, int bIsSaveGame, int bIsPlayerCharacter, int bCopyObject);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats17ReadSpellsFromGffEP7CResGFFP10CResStructi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ReadSpellsFromGff(__IntPtr __instance, __IntPtr pRes, __IntPtr pGffStructWithCreatureStats, int bDefaultUnsavedSpellsAsReadied);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats9SaveStatsEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveStats(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13SaveClassInfoEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveClassInfo(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats15ValidateLevelUpEP13CNWLevelStatshhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint ValidateLevelUp(__IntPtr __instance, __IntPtr pLevelUpStats, byte nDomain1, byte nDomain2, byte nSchool);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10CanLevelUpEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CanLevelUp(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats7LevelUpEP13CNWLevelStatshhhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LevelUp(__IntPtr __instance, __IntPtr pLevelUpStats, byte nDomain1, byte nDomain2, byte nSchool, int bAddStatsToList);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats9LevelDownEP13CNWLevelStats", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LevelDown(__IntPtr __instance, __IntPtr pLevelUpStats);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16LevelUpAutomaticEhih", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int LevelUpAutomatic(__IntPtr __instance, byte nClass, int bReadyAllSpells, byte nPackage);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13CanChooseFeatEthhP13CExoArrayListItE", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CanChooseFeat(__IntPtr __instance, ushort nFeatID, byte nNumberNormalFeats, byte nNumberBonusFeats, __IntPtr pChosenFeats);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19FeatRequirementsMetEtP13CExoArrayListItE", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int FeatRequirementsMet(__IntPtr __instance, ushort nFeatID, __IntPtr pChosenFeats);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19SetNormalBonusFlagsEtRiS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetNormalBonusFlags(__IntPtr __instance, ushort nFeatID, int* bNormalListFeat, int* bBonusListFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats12FeatAcquiredEtP13CExoArrayListItEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int FeatAcquired(__IntPtr __instance, ushort nFeat, __IntPtr pChosenFeats, int bCheckBonusFeats);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18AutoMemorizeSpellsEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AutoMemorizeSpells(__IntPtr __instance, int bReadyAllSpells);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19GetIsClassAvailableEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsClassAvailable(__IntPtr __instance, byte nClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats33GetMeetsPrestigeClassRequirementsEP8CNWClass", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetMeetsPrestigeClassRequirements(__IntPtr __instance, __IntPtr pClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats9GetHitDieEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetHitDie(__IntPtr __instance, byte nMultiClass, byte nDefaultClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats8GetLevelEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetLevel(__IntPtr __instance, int bUseNegativeLevels);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13SetExperienceEji", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetExperience(__IntPtr __instance, uint nValue, int bDoLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13AddExperienceEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddExperience(__IntPtr __instance, uint nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats14GetClassStringEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetClassString(__IntPtr @return, __IntPtr __instance, byte nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13GetClassLevelEhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetClassLevel(__IntPtr __instance, byte nMultiClass, int bUseNegativeLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats22GetClassNegativeLevelsEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetClassNegativeLevels(__IntPtr __instance, byte nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats8GetClassEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetClass(__IntPtr __instance, byte nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats12GetClassInfoEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetClassInfo(__IntPtr __instance, byte nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10GetIsClassEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetIsClass(__IntPtr __instance, byte nClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13SetClassLevelEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetClassLevel(__IntPtr __instance, byte nMultiClass, byte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats22SetClassNegativeLevelsEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetClassNegativeLevels(__IntPtr __instance, byte nMultiClass, byte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats8SetClassEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetClass(__IntPtr __instance, byte nMultiClass, byte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19GetNumLevelsOfClassEhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetNumLevelsOfClass(__IntPtr __instance, byte nClass, int bEpic);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19GetNumLevelsOfClassEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetNumLevelsOfClass(__IntPtr __instance, byte nClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats15SetMovementRateEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetMovementRate(__IntPtr __instance, int nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetFortSavingThrowEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetFortSavingThrow(__IntPtr __instance, int bExcludeEffectBonus);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetWillSavingThrowEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetWillSavingThrow(__IntPtr __instance, int bExcludeEffectBonus);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20GetReflexSavingThrowEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetReflexSavingThrow(__IntPtr __instance, int bExcludeEffectBonus);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13GetAbilityModEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetAbilityMod(__IntPtr __instance, byte nAbility);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13GetPrimaryModEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetPrimaryMod(__IntPtr __instance, byte nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetSpellcastingModEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetSpellcastingMod(__IntPtr __instance, byte nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats9GetDEXModEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetDEXMod(__IntPtr __instance, int bUseArmourPenalty);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats23GetClassesAbilityAdjustEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetClassesAbilityAdjust(__IntPtr __instance, int ability);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10SetSTRBaseEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSTRBase(__IntPtr __instance, byte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10SetDEXBaseEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetDEXBase(__IntPtr __instance, byte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10SetCONBaseEhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetCONBase(__IntPtr __instance, byte nValue, int bRecalculateHP);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10SetINTBaseEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetINTBase(__IntPtr __instance, byte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10SetWISBaseEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetWISBase(__IntPtr __instance, byte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10SetCHABaseEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetCHABase(__IntPtr __instance, byte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16CalcStatModifierEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte CalcStatModifier(__IntPtr __instance, byte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats14GetAbilityInfoEhPhPcS0_S1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetAbilityInfo(__IntPtr __instance, byte nAbilityId, byte* pStat, sbyte* pMod, byte* pBase, sbyte* pTotalBonus);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats12GetSkillRankEhP10CNWSObjecti", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetSkillRank(__IntPtr __instance, byte nSkill, __IntPtr pVersus, int bBaseOnly);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats14GetCanUseSkillEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCanUseSkill(__IntPtr __instance, byte nSkill);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats26GetCanUseSkillAfterLevelUpEtP13CNWLevelStats", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCanUseSkillAfterLevelUp(__IntPtr __instance, ushort nSkill, __IntPtr pLevelUpStats);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats12SetSkillRankEhc", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSkillRank(__IntPtr __instance, byte nSkill, sbyte nRank);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats7AddFeatEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddFeat(__IntPtr __instance, ushort nFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats7HasFeatEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int HasFeat(__IntPtr __instance, ushort nFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20GetFeatRemainingUsesEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetFeatRemainingUses(__IntPtr __instance, ushort nFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetFeatTotalUsesEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetFeatTotalUses(__IntPtr __instance, ushort nFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20SetFeatRemainingUsesEth", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetFeatRemainingUses(__IntPtr __instance, ushort nFeat, byte nRemainingUses);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats22ResetFeatRemainingUsesEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ResetFeatRemainingUses(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats26DecrementFeatRemainingUsesEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DecrementFeatRemainingUses(__IntPtr __instance, ushort nFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats26IncrementFeatRemainingUsesEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IncrementFeatRemainingUses(__IntPtr __instance, ushort nFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats7GetFeatEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetFeat(__IntPtr __instance, ushort nIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21GetHighestLevelOfFeatEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetHighestLevelOfFeat(__IntPtr __instance, ushort nFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats31FeatRequirementsMetAfterLevelUpEtP13CNWLevelStatsh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int FeatRequirementsMetAfterLevelUp(__IntPtr __instance, ushort nFeatID, __IntPtr pLevelUpStats, byte nSchool);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetFeatSourceClassEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetFeatSourceClass(__IntPtr __instance, ushort nFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18ComputeFeatBonusesEP13CExoArrayListItEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ComputeFeatBonuses(__IntPtr __instance, __IntPtr m_pFeats, int bSubtractBonuses);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10RemoveFeatEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveFeat(__IntPtr __instance, ushort nFeat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10ClearFeatsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ClearFeats(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats12GetBonusFeatEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetBonusFeat(__IntPtr __instance, ushort nIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats22CalcLevelUpNumberFeatsEhhRhS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CalcLevelUpNumberFeats(__IntPtr __instance, byte nLeveledUpLevel, byte nLeveledUpClass, byte* nNumberNormalFeats, byte* nNumberBonusFeats);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20GetCreatureHasTalentEiih", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCreatureHasTalent(__IntPtr __instance, int nType, int nID, byte nMetaType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats23GetCreatureTalentRandomEiiRiS0_RhRjS0_S1_S1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCreatureTalentRandom(__IntPtr __instance, int nCategory, int nMaxCR, int* nType, int* nID, byte* nMultiClass, uint* oidItem, int* nItemPropertyIndex, byte* nCasterLevel, byte* nMetaType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats28GetCreatureTalentRandomSpellEiiRiS0_RhS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCreatureTalentRandomSpell(__IntPtr __instance, int nCategory, int nMaxCR, int* nType, int* nID, byte* nMultiClass, byte* nMetaType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats36GetCreatureTalentRandomSpellFromItemEiiRiS0_RhRjS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCreatureTalentRandomSpellFromItem(__IntPtr __instance, int nCategory, int nMaxCR, int* nType, int* nID, byte* nMultiClass, uint* oidItem, int* nItemPropertyIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats39GetCreatureTalentRandomSpellLikeAbilityEiiRiS0_RhS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCreatureTalentRandomSpellLikeAbility(__IntPtr __instance, int nCategory, int nMaxCR, int* nType, int* nID, byte* nMultiClass, byte* nCasterLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats27GetCreatureTalentRandomFeatEiiRiS0_Rh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCreatureTalentRandomFeat(__IntPtr __instance, int nCategory, int nMaxCR, int* nType, int* nID, byte* nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats28GetCreatureTalentRandomSkillEiiRiS0_Rh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCreatureTalentRandomSkill(__IntPtr __instance, int nCategory, int nMaxCR, int* nType, int* nID, byte* nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats33GetCreatureTalentRandomKnownSpellEiiRiS0_Rhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCreatureTalentRandomKnownSpell(__IntPtr __instance, int nCategory, int nMaxCR, int* nType, int* nID, byte* nMultiClass, int nClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats37GetCreatureTalentRandomMemorisedSpellEiiRiS0_RhiS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCreatureTalentRandomMemorisedSpell(__IntPtr __instance, int nCategory, int nMaxCR, int* nType, int* nID, byte* nMultiClass, int nClass, byte* nMetaType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats24GetCanUseRelatedCategoryEii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCanUseRelatedCategory(__IntPtr __instance, int nTalentCategory, int nDesiredCategory);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19GetArmorClassVersusEP12CNWSCreaturei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern short GetArmorClassVersus(__IntPtr __instance, __IntPtr pCreature, int bVsTouchAttack);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetACNaturalBaseEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetACNaturalBase(__IntPtr __instance, int bVsTouchAttack);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats24GetHasLostClassAbilitiesEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetHasLostClassAbilities(__IntPtr __instance, byte nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats15ModifyAlignmentEss", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int ModifyAlignment(__IntPtr __instance, short nGoodEvilBonus, short nLawChaosBonus);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats15AdjustAlignmentEhsj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AdjustAlignment(__IntPtr __instance, byte nAlignment, short nShift, uint oidInitiator);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats24SetHasLostClassAbilitiesEhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetHasLostClassAbilities(__IntPtr __instance, byte nMultiClass, int bLostAbilities);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats17GetEffectImmunityEhP12CNWSCreaturei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetEffectImmunity(__IntPtr __instance, byte nType, __IntPtr pVersus, int bConsiderFeats);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats22GetUseMonkAttackTablesEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetUseMonkAttackTables(__IntPtr __instance, int bForceUnarmed);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20GetUnarmedDamageRollEP10CNWSObject", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetUnarmedDamageRoll(__IntPtr __instance, __IntPtr pTarget);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21GetCreatureDamageDiceEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetCreatureDamageDice(__IntPtr __instance, byte nIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20GetCreatureDamageDieEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetCreatureDamageDie(__IntPtr __instance, byte nIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetWeaponFinesseEP8CNWSItem", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetWeaponFinesse(__IntPtr __instance, __IntPtr pItem);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats14GetWeaponFocusEP8CNWSItem", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetWeaponFocus(__IntPtr __instance, __IntPtr pItem);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetEpicWeaponFocusEP8CNWSItem", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetEpicWeaponFocus(__IntPtr __instance, __IntPtr pItem);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats23GetWeaponSpecializationEP8CNWSItem", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetWeaponSpecialization(__IntPtr __instance, __IntPtr pItem);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats27GetEpicWeaponSpecializationEP8CNWSItem", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetEpicWeaponSpecialization(__IntPtr __instance, __IntPtr pItem);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats25GetWeaponImprovedCriticalEP8CNWSItem", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetWeaponImprovedCritical(__IntPtr __instance, __IntPtr pItem);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats33GetEpicWeaponOverwhelmingCriticalEP8CNWSItem", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetEpicWeaponOverwhelmingCritical(__IntPtr __instance, __IntPtr pItem);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats32GetEpicWeaponDevastatingCriticalEP8CNWSItem", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetEpicWeaponDevastatingCritical(__IntPtr __instance, __IntPtr pItem);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20GetFavoredEnemyBonusEP12CNWSCreature", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetFavoredEnemyBonus(__IntPtr __instance, __IntPtr pTargetCreature);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats23UpdateCombatInformationEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void UpdateCombatInformation(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetBaseAttackBonusEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetBaseAttackBonus(__IntPtr __instance, int bExcludeEpic);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19GetMeleeAttackBonusEiii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetMeleeAttackBonus(__IntPtr __instance, int bOffHand, int bIncludeBase, int bTouchAttack);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19GetMeleeDamageBonusEih", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetMeleeDamageBonus(__IntPtr __instance, int bOffHand, byte nCreatureWeapon);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20GetRangedAttackBonusEii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetRangedAttackBonus(__IntPtr __instance, int bIncludeBase, int bTouchAttack);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats23GetAttackModifierVersusEP12CNWSCreature", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetAttackModifierVersus(__IntPtr __instance, __IntPtr pTargetCreature);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats14GetDamageBonusEP12CNWSCreaturei", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetDamageBonus(__IntPtr __instance, __IntPtr pCreature, int bOffHand);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13GetDamageRollEP10CNWSObjectiiiii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetDamageRoll(__IntPtr __instance, __IntPtr pTarget, int bOffHand, int bCritical, int bSneakAttack, int bDeathAttack, int bForceMax);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetCriticalHitRollEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCriticalHitRoll(__IntPtr __instance, int bOffHand);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats24GetCriticalHitMultiplierEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetCriticalHitMultiplier(__IntPtr __instance, int bOffHand);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats31ResolveSpecialAttackAttackBonusEP12CNWSCreature", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int ResolveSpecialAttackAttackBonus(__IntPtr __instance, __IntPtr pTarget);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats31ResolveSpecialAttackDamageBonusEP12CNWSCreature", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int ResolveSpecialAttackDamageBonus(__IntPtr __instance, __IntPtr pTarget);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats14GetCasterLevelEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetCasterLevel(__IntPtr __instance, byte nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats15GetSpellFailureEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetSpellFailure(__IntPtr __instance, byte nSpellSchool);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19GetSpellsPerDayLeftEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetSpellsPerDayLeft(__IntPtr __instance, byte nMultiClass, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21GetSpellGainWithBonusEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetSpellGainWithBonus(__IntPtr __instance, byte nMultiClass, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats33GetSpellGainWithBonusAfterLevelUpEhhP13CNWLevelStatshi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetSpellGainWithBonusAfterLevelUp(__IntPtr __instance, byte nMultiClass, byte nSpellLevel, __IntPtr pLevelUpStats, byte nSchool, int bNewClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18ConfirmDomainSpellEhhj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int ConfirmDomainSpell(__IntPtr __instance, byte nMultiClass, byte nSpellLevel, uint nSpellID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21GetSpellMinAbilityMetEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetSpellMinAbilityMet(__IntPtr __instance, byte nMultiClass, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats28GetMetamagicPrerequisitesMetEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetMetamagicPrerequisitesMet(__IntPtr __instance, byte nMetaType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20GetNumberKnownSpellsEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort GetNumberKnownSpells(__IntPtr __instance, byte nMultiClass, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats28GetNumberMemorizedSpellSlotsEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetNumberMemorizedSpellSlots(__IntPtr __instance, byte nMultiClass, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13GetKnownSpellEhhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetKnownSpell(__IntPtr __instance, byte nMultiClass, byte nSpellLevel, byte nSpellListIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats23GetMemorizedSpellInSlotEhhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetMemorizedSpellInSlot(__IntPtr __instance, byte nMultiClass, byte nSpellLevel, byte nSpellSlot);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetIsDomainSpellEhhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsDomainSpell(__IntPtr __instance, byte nMultiClass, byte nSpellLevel, byte nSpellSlot);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats28ComputeNumberKnownSpellsLeftEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte ComputeNumberKnownSpellsLeft(__IntPtr __instance, byte nMultiClass, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats28GetMemorizedSpellInSlotReadyEhhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetMemorizedSpellInSlotReady(__IntPtr __instance, byte nMultiClass, byte nSpellLevel, byte nSpellSlot);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats28SetMemorizedSpellInSlotReadyEhhhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetMemorizedSpellInSlotReady(__IntPtr __instance, byte nMultiClass, byte nSpellLevel, byte nSpellSlot, int bReady);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats31GetMemorizedSpellInSlotMetaTypeEhhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetMemorizedSpellInSlotMetaType(__IntPtr __instance, byte nMultiClass, byte nSpellLevel, byte nSpellSlot);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19GetHasSilencedSpellEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetHasSilencedSpell(__IntPtr __instance, uint nSpellID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetHasStilledSpellEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetHasStilledSpell(__IntPtr __instance, uint nSpellID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetSpellUsesLeftEjhhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetSpellUsesLeft(__IntPtr __instance, uint nSpellID, byte nMultiClass, byte nDomainLevel, byte nMetaType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats27GetMemorizedSpellReadyCountEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetMemorizedSpellReadyCount(__IntPtr __instance, uint nSpellID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats27GetMemorizedSpellReadyCountEhjh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetMemorizedSpellReadyCount(__IntPtr __instance, byte nMultiClass, uint nSpellID, byte nMetaType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats27GetMemorizedSpellReadyCountEhjPhS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetMemorizedSpellReadyCount(__IntPtr __instance, byte nMultiClass, uint nSpellID, byte* nMinSpellLevel, byte* nMinSpellSlot);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats9GetSchoolEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetSchool(__IntPtr __instance, byte nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10GetDomain1Eh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetDomain1(__IntPtr __instance, byte nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10GetDomain2Eh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetDomain2(__IntPtr __instance, byte nMultiClass);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats22GetNumberOfBonusSpellsEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetNumberOfBonusSpells(__IntPtr __instance, byte nMultiClass, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats23ModifyNumberBonusSpellsEhhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ModifyNumberBonusSpells(__IntPtr __instance, byte nMultiClass, byte nSpellLevel, int nDelta);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21SetArcaneSpellFailureEc", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetArcaneSpellFailure(__IntPtr __instance, sbyte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats15SetSpellFailureEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSpellFailure(__IntPtr __instance, byte nSpellSchool, byte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats25SetSpellResistancePenaltyEc", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSpellResistancePenalty(__IntPtr __instance, sbyte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats25DecrementSpellsPerDayLeftEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DecrementSpellsPerDayLeft(__IntPtr __instance, byte nMultiClass, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats25IncrementSpellsPerDayLeftEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IncrementSpellsPerDayLeft(__IntPtr __instance, byte nMultiClass, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21ResetSpellsPerDayLeftEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ResetSpellsPerDayLeft(__IntPtr __instance, byte nMultiClass, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21AdjustSpellUsesPerDayEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AdjustSpellUsesPerDay(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats31UpdateNumberMemorizedSpellSlotsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void UpdateNumberMemorizedSpellSlots(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21SetMemorizedSpellSlotEhhjhhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SetMemorizedSpellSlot(__IntPtr __instance, byte nMultiClass, byte nSpellSlot, uint nSpellID, byte nDomainLevel, byte nMetaType, int bFromClient);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats28SetNumberMemorizedSpellSlotsEhhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetNumberMemorizedSpellSlots(__IntPtr __instance, byte nMultiClass, byte nSpellLevel, byte nNumSlots);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats23ClearMemorizedSpellSlotEhhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ClearMemorizedSpellSlot(__IntPtr __instance, byte nMultiClass, byte nSpellLevel, byte nSpellSlot);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13AddKnownSpellEhj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddKnownSpell(__IntPtr __instance, byte nMultiClass, uint nSpellID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16RemoveKnownSpellEhj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveKnownSpell(__IntPtr __instance, byte nMultiClass, uint nSpellID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20MemorizeAllNPCSpellsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void MemorizeAllNPCSpells(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21GetSpellsOfLevelReadyEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetSpellsOfLevelReady(__IntPtr __instance, byte nMultiClass, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats15ReadySpellLevelEh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ReadySpellLevel(__IntPtr __instance, byte nSpellLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats12UnReadySpellEjhhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int UnReadySpell(__IntPtr __instance, uint nSpellID, byte nMultiClass, byte nDomainLevel, byte nMetaType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats9SetSchoolEhh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSchool(__IntPtr __instance, byte nMultiClass, byte nSchool);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10SetDomain1Ehh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetDomain1(__IntPtr __instance, byte nMultiClass, byte nDomain);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10SetDomain2Ehh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetDomain2(__IntPtr __instance, byte nMultiClass, byte nDomain);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats25AddSpellLikeAbilityToListEjih", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddSpellLikeAbilityToList(__IntPtr __instance, uint nSpellId, int bReadied, byte nCasterLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats24SetSpellLikeAbilityReadyEjih", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SetSpellLikeAbilityReady(__IntPtr __instance, uint nSpellId, int bReadied, byte nCasterLevel);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats23ResetSpellLikeAbilitiesEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ResetSpellLikeAbilities(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats27GetIsInSpellLikeAbilityListEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsInSpellLikeAbilityList(__IntPtr __instance, uint nSpellId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats30GetSpellLikeAbilityCasterLevelEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetSpellLikeAbilityCasterLevel(__IntPtr __instance, uint nSpellId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats11GetStatByIdEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern float GetStatById(__IntPtr __instance, int nId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats11SetStatByIdEif", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetStatById(__IntPtr __instance, int nId, float nStat);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19GetIsWeaponOfChoiceEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsWeaponOfChoice(__IntPtr __instance, uint nBaseItemType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats17RunDataMigrationsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RunDataMigrations(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21GetIsInKnownSpellListEhj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsInKnownSpellList(__IntPtr __instance, byte nMultiClass, uint nSpellID);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats21CheckSpellSuitabilityEiP8CNWSpelliiiiiiRhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CheckSpellSuitability(__IntPtr __instance, int nSpellId, __IntPtr pSpell, int nCategory, int nMaxCR, int nSpellLevel, int nSpellSlot, int nClass, int bCheckMetamagic, byte* nMetaType, int nMasterSpellId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats7GetIsDMEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsDM(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13GetIsPlayerDMEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsPlayerDM(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats11GetFullNameEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetFullName(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats6GetTagEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTag(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats6SetTagERK10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetTag(__IntPtr __instance, __IntPtr sTag);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats31GetEffectiveCRForPotentialLevelEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetEffectiveCRForPotentialLevel(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats17GetPotentialLevelEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetPotentialLevel(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats22GetExpNeededForLevelUpEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetExpNeededForLevelUp(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats22GetTotalNegativeLevelsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetTotalNegativeLevels(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats13GetRaceStringEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetRaceString(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetSmallPortraitEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetSmallPortrait(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetLargePortraitEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetLargePortrait(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats22GetBaseFortSavingThrowEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetBaseFortSavingThrow(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats22GetBaseWillSavingThrowEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetBaseWillSavingThrow(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats24GetBaseReflexSavingThrowEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetBaseReflexSavingThrow(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10GetSTRStatEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetSTRStat(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetTotalSTRBonusEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetTotalSTRBonus(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10GetDEXStatEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetDEXStat(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetTotalDEXBonusEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetTotalDEXBonus(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10GetCONStatEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetCONStat(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetTotalCONBonusEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetTotalCONBonus(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10GetINTStatEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetINTStat(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetTotalINTBonusEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetTotalINTBonus(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10GetWISStatEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetWISStat(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetTotalWISBonusEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetTotalWISBonus(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats10GetCHAStatEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetCHAStat(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats16GetTotalCHABonusEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetTotalCHABonus(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetTotalACSkillModEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetTotalACSkillMod(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats26GetSimpleAlignmentGoodEvilEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetSimpleAlignmentGoodEvil(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats26GetSimpleAlignmentLawChaosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetSimpleAlignmentLawChaos(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetAlignmentStringEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetAlignmentString(__IntPtr @return, __IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats23GetIsEpitomeOfAlignmentEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetIsEpitomeOfAlignment(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20GetUnarmedDamageDiceEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetUnarmedDamageDice(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats19GetUnarmedDamageDieEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetUnarmedDamageDie(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20GetRangedDamageBonusEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetRangedDamageBonus(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetAttacksPerRoundEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte GetAttacksPerRound(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18GetSpellResistanceEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte GetSpellResistance(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats18SetSpellResistanceEc", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetSpellResistance(__IntPtr __instance, sbyte nValue);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN17CNWSCreatureStats20GetHighestLevelKnownEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetHighestLevelKnown(__IntPtr __instance);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CNWSCreatureStats> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CNWSCreatureStats>();

        protected bool __ownsNativeInstance;

        internal static CNWSCreatureStats __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new CNWSCreatureStats(native.ToPointer(), skipVTables);
        }

        internal static CNWSCreatureStats __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (CNWSCreatureStats)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static CNWSCreatureStats __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new CNWSCreatureStats(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            global::NWN.LowLevel.CNWSCreatureStats.__Internal.cctor_1(ret, new __IntPtr(&native));
            return ret.ToPointer();
        }

        private CNWSCreatureStats(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CNWSCreatureStats(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public CNWSCreatureStats(global::NWN.LowLevel.CNWSCreature pCreature)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWSCreatureStats.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            var __arg0 = pCreature is null ? __IntPtr.Zero : pCreature.__Instance;
            __Internal.ctor(__Instance, __arg0);
        }

        public CNWSCreatureStats(global::NWN.LowLevel.CNWSCreatureStats _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWSCreatureStats.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            if (ReferenceEquals(_0, null))
                throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = _0.__Instance;
            __Internal.cctor_1(__Instance, __arg0);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::NWN.LowLevel.CNWSCreatureStats __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (disposing)
                __Internal.dtor(__Instance);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public void UpdateLastStatsObject(ulong nUpdatesRequired, global::NWN.LowLevel.CNWCreatureStatsUpdate updateObject)
        {
            var __arg1 = updateObject is null ? __IntPtr.Zero : updateObject.__Instance;
            __Internal.UpdateLastStatsObject(__Instance, nUpdatesRequired, __arg1);
        }

        public global::NWN.LowLevel.CNWLevelStats GetLevelStats(byte nLevel)
        {
            var __ret = __Internal.GetLevelStats(__Instance, nLevel);
            var __result0 = global::NWN.LowLevel.CNWLevelStats.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public uint ReadStatsFromGff(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pGffStructWithCreatureStats, global::NWN.LowLevel.CNWSCreatureAppearanceInfo pAppInfo, int bIsSaveGame, int bIsPlayerCharacter, int bCopyObject)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pGffStructWithCreatureStats is null ? __IntPtr.Zero : pGffStructWithCreatureStats.__Instance;
            var __arg2 = pAppInfo is null ? __IntPtr.Zero : pAppInfo.__Instance;
            var __ret = __Internal.ReadStatsFromGff(__Instance, __arg0, __arg1, __arg2, bIsSaveGame, bIsPlayerCharacter, bCopyObject);
            return __ret;
        }

        public void ReadSpellsFromGff(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pGffStructWithCreatureStats, int bDefaultUnsavedSpellsAsReadied)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pGffStructWithCreatureStats is null ? __IntPtr.Zero : pGffStructWithCreatureStats.__Instance;
            __Internal.ReadSpellsFromGff(__Instance, __arg0, __arg1, bDefaultUnsavedSpellsAsReadied);
        }

        public void SaveStats(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveStats(__Instance, __arg0, __arg1);
        }

        public void SaveClassInfo(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            __Internal.SaveClassInfo(__Instance, __arg0, __arg1);
        }

        public uint ValidateLevelUp(global::NWN.LowLevel.CNWLevelStats pLevelUpStats, byte nDomain1, byte nDomain2, byte nSchool)
        {
            var __arg0 = pLevelUpStats is null ? __IntPtr.Zero : pLevelUpStats.__Instance;
            var __ret = __Internal.ValidateLevelUp(__Instance, __arg0, nDomain1, nDomain2, nSchool);
            return __ret;
        }

        public int CanLevelUp()
        {
            var __ret = __Internal.CanLevelUp(__Instance);
            return __ret;
        }

        public void LevelUp(global::NWN.LowLevel.CNWLevelStats pLevelUpStats, byte nDomain1, byte nDomain2, byte nSchool, int bAddStatsToList)
        {
            var __arg0 = pLevelUpStats is null ? __IntPtr.Zero : pLevelUpStats.__Instance;
            __Internal.LevelUp(__Instance, __arg0, nDomain1, nDomain2, nSchool, bAddStatsToList);
        }

        public void LevelDown(global::NWN.LowLevel.CNWLevelStats pLevelUpStats)
        {
            var __arg0 = pLevelUpStats is null ? __IntPtr.Zero : pLevelUpStats.__Instance;
            __Internal.LevelDown(__Instance, __arg0);
        }

        public int LevelUpAutomatic(byte nClass, int bReadyAllSpells, byte nPackage)
        {
            var __ret = __Internal.LevelUpAutomatic(__Instance, nClass, bReadyAllSpells, nPackage);
            return __ret;
        }

        public int CanChooseFeat(ushort nFeatID, byte nNumberNormalFeats, byte nNumberBonusFeats, global::NWN.LowLevel.CExoArrayList<ushort> pChosenFeats)
        {
            var __arg3 = pChosenFeats is null ? __IntPtr.Zero : pChosenFeats.__Instance;
            var __ret = __Internal.CanChooseFeat(__Instance, nFeatID, nNumberNormalFeats, nNumberBonusFeats, __arg3);
            return __ret;
        }

        public int FeatRequirementsMet(ushort nFeatID, global::NWN.LowLevel.CExoArrayList<ushort> pChosenFeats)
        {
            var __arg1 = pChosenFeats is null ? __IntPtr.Zero : pChosenFeats.__Instance;
            var __ret = __Internal.FeatRequirementsMet(__Instance, nFeatID, __arg1);
            return __ret;
        }

        public void SetNormalBonusFlags(ushort nFeatID, ref int bNormalListFeat, ref int bBonusListFeat)
        {
            fixed (int* __bNormalListFeat1 = &bNormalListFeat)
            {
                var __arg1 = __bNormalListFeat1;
                fixed (int* __bBonusListFeat2 = &bBonusListFeat)
                {
                    var __arg2 = __bBonusListFeat2;
                    __Internal.SetNormalBonusFlags(__Instance, nFeatID, __arg1, __arg2);
                }
            }
        }

        public int FeatAcquired(ushort nFeat, global::NWN.LowLevel.CExoArrayList<ushort> pChosenFeats, int bCheckBonusFeats)
        {
            var __arg1 = pChosenFeats is null ? __IntPtr.Zero : pChosenFeats.__Instance;
            var __ret = __Internal.FeatAcquired(__Instance, nFeat, __arg1, bCheckBonusFeats);
            return __ret;
        }

        public int AutoMemorizeSpells(int bReadyAllSpells)
        {
            var __ret = __Internal.AutoMemorizeSpells(__Instance, bReadyAllSpells);
            return __ret;
        }

        public int GetIsClassAvailable(byte nClass)
        {
            var __ret = __Internal.GetIsClassAvailable(__Instance, nClass);
            return __ret;
        }

        public int GetMeetsPrestigeClassRequirements(global::NWN.LowLevel.CNWClass pClass)
        {
            var __arg0 = pClass is null ? __IntPtr.Zero : pClass.__Instance;
            var __ret = __Internal.GetMeetsPrestigeClassRequirements(__Instance, __arg0);
            return __ret;
        }

        public byte GetHitDie(byte nMultiClass, byte nDefaultClass)
        {
            var __ret = __Internal.GetHitDie(__Instance, nMultiClass, nDefaultClass);
            return __ret;
        }

        public byte GetLevel(int bUseNegativeLevels)
        {
            var __ret = __Internal.GetLevel(__Instance, bUseNegativeLevels);
            return __ret;
        }

        public void SetExperience(uint nValue, int bDoLevel)
        {
            __Internal.SetExperience(__Instance, nValue, bDoLevel);
        }

        public void AddExperience(uint nValue)
        {
            __Internal.AddExperience(__Instance, nValue);
        }

        public global::NWN.LowLevel.CExoString GetClassString(byte nMultiClass)
        {
            var __ret = new global::NWN.LowLevel.CExoString.__Internal();
            __Internal.GetClassString(new IntPtr(&__ret), __Instance, nMultiClass);
            return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
        }

        public byte GetClassLevel(byte nMultiClass, int bUseNegativeLevel)
        {
            var __ret = __Internal.GetClassLevel(__Instance, nMultiClass, bUseNegativeLevel);
            return __ret;
        }

        public byte GetClassNegativeLevels(byte nMultiClass)
        {
            var __ret = __Internal.GetClassNegativeLevels(__Instance, nMultiClass);
            return __ret;
        }

        public byte GetClass(byte nMultiClass)
        {
            var __ret = __Internal.GetClass(__Instance, nMultiClass);
            return __ret;
        }

        public global::NWN.LowLevel.CNWSCreatureStatsClassInfo GetClassInfo(byte nMultiClass)
        {
            var __ret = __Internal.GetClassInfo(__Instance, nMultiClass);
            var __result0 = global::NWN.LowLevel.CNWSCreatureStatsClassInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public byte GetIsClass(byte nClass)
        {
            var __ret = __Internal.GetIsClass(__Instance, nClass);
            return __ret;
        }

        public void SetClassLevel(byte nMultiClass, byte nValue)
        {
            __Internal.SetClassLevel(__Instance, nMultiClass, nValue);
        }

        public void SetClassNegativeLevels(byte nMultiClass, byte nValue)
        {
            __Internal.SetClassNegativeLevels(__Instance, nMultiClass, nValue);
        }

        public void SetClass(byte nMultiClass, byte nValue)
        {
            __Internal.SetClass(__Instance, nMultiClass, nValue);
        }

        public int GetNumLevelsOfClass(byte nClass, int bEpic)
        {
            var __ret = __Internal.GetNumLevelsOfClass(__Instance, nClass, bEpic);
            return __ret;
        }

        public int GetNumLevelsOfClass(byte nClass)
        {
            var __ret = __Internal.GetNumLevelsOfClass(__Instance, nClass);
            return __ret;
        }

        public void SetMovementRate(int nValue)
        {
            __Internal.SetMovementRate(__Instance, nValue);
        }

        public sbyte GetFortSavingThrow(int bExcludeEffectBonus)
        {
            var __ret = __Internal.GetFortSavingThrow(__Instance, bExcludeEffectBonus);
            return __ret;
        }

        public sbyte GetWillSavingThrow(int bExcludeEffectBonus)
        {
            var __ret = __Internal.GetWillSavingThrow(__Instance, bExcludeEffectBonus);
            return __ret;
        }

        public sbyte GetReflexSavingThrow(int bExcludeEffectBonus)
        {
            var __ret = __Internal.GetReflexSavingThrow(__Instance, bExcludeEffectBonus);
            return __ret;
        }

        public sbyte GetAbilityMod(byte nAbility)
        {
            var __ret = __Internal.GetAbilityMod(__Instance, nAbility);
            return __ret;
        }

        public sbyte GetPrimaryMod(byte nMultiClass)
        {
            var __ret = __Internal.GetPrimaryMod(__Instance, nMultiClass);
            return __ret;
        }

        public sbyte GetSpellcastingMod(byte nMultiClass)
        {
            var __ret = __Internal.GetSpellcastingMod(__Instance, nMultiClass);
            return __ret;
        }

        public sbyte GetDEXMod(int bUseArmourPenalty)
        {
            var __ret = __Internal.GetDEXMod(__Instance, bUseArmourPenalty);
            return __ret;
        }

        public sbyte GetClassesAbilityAdjust(int ability)
        {
            var __ret = __Internal.GetClassesAbilityAdjust(__Instance, ability);
            return __ret;
        }

        public void SetSTRBase(byte nValue)
        {
            __Internal.SetSTRBase(__Instance, nValue);
        }

        public void SetDEXBase(byte nValue)
        {
            __Internal.SetDEXBase(__Instance, nValue);
        }

        public void SetCONBase(byte nValue, int bRecalculateHP)
        {
            __Internal.SetCONBase(__Instance, nValue, bRecalculateHP);
        }

        public void SetINTBase(byte nValue)
        {
            __Internal.SetINTBase(__Instance, nValue);
        }

        public void SetWISBase(byte nValue)
        {
            __Internal.SetWISBase(__Instance, nValue);
        }

        public void SetCHABase(byte nValue)
        {
            __Internal.SetCHABase(__Instance, nValue);
        }

        public sbyte CalcStatModifier(byte nValue)
        {
            var __ret = __Internal.CalcStatModifier(__Instance, nValue);
            return __ret;
        }

        public void GetAbilityInfo(byte nAbilityId, byte* pStat, sbyte* pMod, byte* pBase, sbyte* pTotalBonus)
        {
            __Internal.GetAbilityInfo(__Instance, nAbilityId, pStat, pMod, pBase, pTotalBonus);
        }

        public sbyte GetSkillRank(byte nSkill, global::NWN.LowLevel.CNWSObject pVersus, int bBaseOnly)
        {
            var __arg1 = pVersus is null ? __IntPtr.Zero : pVersus.__Instance;
            var __ret = __Internal.GetSkillRank(__Instance, nSkill, __arg1, bBaseOnly);
            return __ret;
        }

        public int GetCanUseSkill(byte nSkill)
        {
            var __ret = __Internal.GetCanUseSkill(__Instance, nSkill);
            return __ret;
        }

        public int GetCanUseSkillAfterLevelUp(ushort nSkill, global::NWN.LowLevel.CNWLevelStats pLevelUpStats)
        {
            var __arg1 = pLevelUpStats is null ? __IntPtr.Zero : pLevelUpStats.__Instance;
            var __ret = __Internal.GetCanUseSkillAfterLevelUp(__Instance, nSkill, __arg1);
            return __ret;
        }

        public void SetSkillRank(byte nSkill, sbyte nRank)
        {
            __Internal.SetSkillRank(__Instance, nSkill, nRank);
        }

        public void AddFeat(ushort nFeat)
        {
            __Internal.AddFeat(__Instance, nFeat);
        }

        public int HasFeat(ushort nFeat)
        {
            var __ret = __Internal.HasFeat(__Instance, nFeat);
            return __ret;
        }

        public byte GetFeatRemainingUses(ushort nFeat)
        {
            var __ret = __Internal.GetFeatRemainingUses(__Instance, nFeat);
            return __ret;
        }

        public byte GetFeatTotalUses(ushort nFeat)
        {
            var __ret = __Internal.GetFeatTotalUses(__Instance, nFeat);
            return __ret;
        }

        public void SetFeatRemainingUses(ushort nFeat, byte nRemainingUses)
        {
            __Internal.SetFeatRemainingUses(__Instance, nFeat, nRemainingUses);
        }

        public void ResetFeatRemainingUses()
        {
            __Internal.ResetFeatRemainingUses(__Instance);
        }

        public void DecrementFeatRemainingUses(ushort nFeat)
        {
            __Internal.DecrementFeatRemainingUses(__Instance, nFeat);
        }

        public void IncrementFeatRemainingUses(ushort nFeat)
        {
            __Internal.IncrementFeatRemainingUses(__Instance, nFeat);
        }

        public ushort GetFeat(ushort nIndex)
        {
            var __ret = __Internal.GetFeat(__Instance, nIndex);
            return __ret;
        }

        public ushort GetHighestLevelOfFeat(ushort nFeat)
        {
            var __ret = __Internal.GetHighestLevelOfFeat(__Instance, nFeat);
            return __ret;
        }

        public int FeatRequirementsMetAfterLevelUp(ushort nFeatID, global::NWN.LowLevel.CNWLevelStats pLevelUpStats, byte nSchool)
        {
            var __arg1 = pLevelUpStats is null ? __IntPtr.Zero : pLevelUpStats.__Instance;
            var __ret = __Internal.FeatRequirementsMetAfterLevelUp(__Instance, nFeatID, __arg1, nSchool);
            return __ret;
        }

        public byte GetFeatSourceClass(ushort nFeat)
        {
            var __ret = __Internal.GetFeatSourceClass(__Instance, nFeat);
            return __ret;
        }

        public void ComputeFeatBonuses(global::NWN.LowLevel.CExoArrayList<ushort> m_pFeats, int bSubtractBonuses)
        {
            var __arg0 = m_pFeats is null ? __IntPtr.Zero : m_pFeats.__Instance;
            __Internal.ComputeFeatBonuses(__Instance, __arg0, bSubtractBonuses);
        }

        public void RemoveFeat(ushort nFeat)
        {
            __Internal.RemoveFeat(__Instance, nFeat);
        }

        public void ClearFeats()
        {
            __Internal.ClearFeats(__Instance);
        }

        public ushort GetBonusFeat(ushort nIndex)
        {
            var __ret = __Internal.GetBonusFeat(__Instance, nIndex);
            return __ret;
        }

        public void CalcLevelUpNumberFeats(byte nLeveledUpLevel, byte nLeveledUpClass, byte* nNumberNormalFeats, byte* nNumberBonusFeats)
        {
            __Internal.CalcLevelUpNumberFeats(__Instance, nLeveledUpLevel, nLeveledUpClass, nNumberNormalFeats, nNumberBonusFeats);
        }

        public int GetCreatureHasTalent(int nType, int nID, byte nMetaType)
        {
            var __ret = __Internal.GetCreatureHasTalent(__Instance, nType, nID, nMetaType);
            return __ret;
        }

        public int GetCreatureTalentRandom(int nCategory, int nMaxCR, ref int nType, ref int nID, byte* nMultiClass, ref uint oidItem, ref int nItemPropertyIndex, byte* nCasterLevel, byte* nMetaType)
        {
            fixed (int* __nType2 = &nType)
            {
                var __arg2 = __nType2;
                fixed (int* __nID3 = &nID)
                {
                    var __arg3 = __nID3;
                    fixed (uint* __oidItem5 = &oidItem)
                    {
                        var __arg5 = __oidItem5;
                        fixed (int* __nItemPropertyIndex6 = &nItemPropertyIndex)
                        {
                            var __arg6 = __nItemPropertyIndex6;
                            var __ret = __Internal.GetCreatureTalentRandom(__Instance, nCategory, nMaxCR, __arg2, __arg3, nMultiClass, __arg5, __arg6, nCasterLevel, nMetaType);
                            return __ret;
                        }
                    }
                }
            }
        }

        public int GetCreatureTalentRandomSpell(int nCategory, int nMaxCR, ref int nType, ref int nID, byte* nMultiClass, byte* nMetaType)
        {
            fixed (int* __nType2 = &nType)
            {
                var __arg2 = __nType2;
                fixed (int* __nID3 = &nID)
                {
                    var __arg3 = __nID3;
                    var __ret = __Internal.GetCreatureTalentRandomSpell(__Instance, nCategory, nMaxCR, __arg2, __arg3, nMultiClass, nMetaType);
                    return __ret;
                }
            }
        }

        public int GetCreatureTalentRandomSpellFromItem(int nCategory, int nMaxCR, ref int nType, ref int nID, byte* nMultiClass, ref uint oidItem, ref int nItemPropertyIndex)
        {
            fixed (int* __nType2 = &nType)
            {
                var __arg2 = __nType2;
                fixed (int* __nID3 = &nID)
                {
                    var __arg3 = __nID3;
                    fixed (uint* __oidItem5 = &oidItem)
                    {
                        var __arg5 = __oidItem5;
                        fixed (int* __nItemPropertyIndex6 = &nItemPropertyIndex)
                        {
                            var __arg6 = __nItemPropertyIndex6;
                            var __ret = __Internal.GetCreatureTalentRandomSpellFromItem(__Instance, nCategory, nMaxCR, __arg2, __arg3, nMultiClass, __arg5, __arg6);
                            return __ret;
                        }
                    }
                }
            }
        }

        public int GetCreatureTalentRandomSpellLikeAbility(int nCategory, int nMaxCR, ref int nType, ref int nID, byte* nMultiClass, byte* nCasterLevel)
        {
            fixed (int* __nType2 = &nType)
            {
                var __arg2 = __nType2;
                fixed (int* __nID3 = &nID)
                {
                    var __arg3 = __nID3;
                    var __ret = __Internal.GetCreatureTalentRandomSpellLikeAbility(__Instance, nCategory, nMaxCR, __arg2, __arg3, nMultiClass, nCasterLevel);
                    return __ret;
                }
            }
        }

        public int GetCreatureTalentRandomFeat(int nCategory, int nMaxCR, ref int nType, ref int nID, byte* nMultiClass)
        {
            fixed (int* __nType2 = &nType)
            {
                var __arg2 = __nType2;
                fixed (int* __nID3 = &nID)
                {
                    var __arg3 = __nID3;
                    var __ret = __Internal.GetCreatureTalentRandomFeat(__Instance, nCategory, nMaxCR, __arg2, __arg3, nMultiClass);
                    return __ret;
                }
            }
        }

        public int GetCreatureTalentRandomSkill(int nCategory, int nMaxCR, ref int nType, ref int nID, byte* nMultiClass)
        {
            fixed (int* __nType2 = &nType)
            {
                var __arg2 = __nType2;
                fixed (int* __nID3 = &nID)
                {
                    var __arg3 = __nID3;
                    var __ret = __Internal.GetCreatureTalentRandomSkill(__Instance, nCategory, nMaxCR, __arg2, __arg3, nMultiClass);
                    return __ret;
                }
            }
        }

        public int GetCreatureTalentRandomKnownSpell(int nCategory, int nMaxCR, ref int nType, ref int nID, byte* nMultiClass, int nClass)
        {
            fixed (int* __nType2 = &nType)
            {
                var __arg2 = __nType2;
                fixed (int* __nID3 = &nID)
                {
                    var __arg3 = __nID3;
                    var __ret = __Internal.GetCreatureTalentRandomKnownSpell(__Instance, nCategory, nMaxCR, __arg2, __arg3, nMultiClass, nClass);
                    return __ret;
                }
            }
        }

        public int GetCreatureTalentRandomMemorisedSpell(int nCategory, int nMaxCR, ref int nType, ref int nID, byte* nMultiClass, int nClass, byte* nMetaType)
        {
            fixed (int* __nType2 = &nType)
            {
                var __arg2 = __nType2;
                fixed (int* __nID3 = &nID)
                {
                    var __arg3 = __nID3;
                    var __ret = __Internal.GetCreatureTalentRandomMemorisedSpell(__Instance, nCategory, nMaxCR, __arg2, __arg3, nMultiClass, nClass, nMetaType);
                    return __ret;
                }
            }
        }

        public int GetCanUseRelatedCategory(int nTalentCategory, int nDesiredCategory)
        {
            var __ret = __Internal.GetCanUseRelatedCategory(__Instance, nTalentCategory, nDesiredCategory);
            return __ret;
        }

        public short GetArmorClassVersus(global::NWN.LowLevel.CNWSCreature pCreature, int bVsTouchAttack)
        {
            var __arg0 = pCreature is null ? __IntPtr.Zero : pCreature.__Instance;
            var __ret = __Internal.GetArmorClassVersus(__Instance, __arg0, bVsTouchAttack);
            return __ret;
        }

        public sbyte GetACNaturalBase(int bVsTouchAttack)
        {
            var __ret = __Internal.GetACNaturalBase(__Instance, bVsTouchAttack);
            return __ret;
        }

        public int GetHasLostClassAbilities(byte nMultiClass)
        {
            var __ret = __Internal.GetHasLostClassAbilities(__Instance, nMultiClass);
            return __ret;
        }

        public int ModifyAlignment(short nGoodEvilBonus, short nLawChaosBonus)
        {
            var __ret = __Internal.ModifyAlignment(__Instance, nGoodEvilBonus, nLawChaosBonus);
            return __ret;
        }

        public void AdjustAlignment(byte nAlignment, short nShift, uint oidInitiator)
        {
            __Internal.AdjustAlignment(__Instance, nAlignment, nShift, oidInitiator);
        }

        public void SetHasLostClassAbilities(byte nMultiClass, int bLostAbilities)
        {
            __Internal.SetHasLostClassAbilities(__Instance, nMultiClass, bLostAbilities);
        }

        public int GetEffectImmunity(byte nType, global::NWN.LowLevel.CNWSCreature pVersus, int bConsiderFeats)
        {
            var __arg1 = pVersus is null ? __IntPtr.Zero : pVersus.__Instance;
            var __ret = __Internal.GetEffectImmunity(__Instance, nType, __arg1, bConsiderFeats);
            return __ret;
        }

        public int GetUseMonkAttackTables(int bForceUnarmed)
        {
            var __ret = __Internal.GetUseMonkAttackTables(__Instance, bForceUnarmed);
            return __ret;
        }

        public int GetUnarmedDamageRoll(global::NWN.LowLevel.CNWSObject pTarget)
        {
            var __arg0 = pTarget is null ? __IntPtr.Zero : pTarget.__Instance;
            var __ret = __Internal.GetUnarmedDamageRoll(__Instance, __arg0);
            return __ret;
        }

        public byte GetCreatureDamageDice(byte nIndex)
        {
            var __ret = __Internal.GetCreatureDamageDice(__Instance, nIndex);
            return __ret;
        }

        public byte GetCreatureDamageDie(byte nIndex)
        {
            var __ret = __Internal.GetCreatureDamageDie(__Instance, nIndex);
            return __ret;
        }

        public int GetWeaponFinesse(global::NWN.LowLevel.CNWSItem pItem)
        {
            var __arg0 = pItem is null ? __IntPtr.Zero : pItem.__Instance;
            var __ret = __Internal.GetWeaponFinesse(__Instance, __arg0);
            return __ret;
        }

        public int GetWeaponFocus(global::NWN.LowLevel.CNWSItem pItem)
        {
            var __arg0 = pItem is null ? __IntPtr.Zero : pItem.__Instance;
            var __ret = __Internal.GetWeaponFocus(__Instance, __arg0);
            return __ret;
        }

        public int GetEpicWeaponFocus(global::NWN.LowLevel.CNWSItem pItem)
        {
            var __arg0 = pItem is null ? __IntPtr.Zero : pItem.__Instance;
            var __ret = __Internal.GetEpicWeaponFocus(__Instance, __arg0);
            return __ret;
        }

        public int GetWeaponSpecialization(global::NWN.LowLevel.CNWSItem pItem)
        {
            var __arg0 = pItem is null ? __IntPtr.Zero : pItem.__Instance;
            var __ret = __Internal.GetWeaponSpecialization(__Instance, __arg0);
            return __ret;
        }

        public int GetEpicWeaponSpecialization(global::NWN.LowLevel.CNWSItem pItem)
        {
            var __arg0 = pItem is null ? __IntPtr.Zero : pItem.__Instance;
            var __ret = __Internal.GetEpicWeaponSpecialization(__Instance, __arg0);
            return __ret;
        }

        public int GetWeaponImprovedCritical(global::NWN.LowLevel.CNWSItem pItem)
        {
            var __arg0 = pItem is null ? __IntPtr.Zero : pItem.__Instance;
            var __ret = __Internal.GetWeaponImprovedCritical(__Instance, __arg0);
            return __ret;
        }

        public int GetEpicWeaponOverwhelmingCritical(global::NWN.LowLevel.CNWSItem pItem)
        {
            var __arg0 = pItem is null ? __IntPtr.Zero : pItem.__Instance;
            var __ret = __Internal.GetEpicWeaponOverwhelmingCritical(__Instance, __arg0);
            return __ret;
        }

        public int GetEpicWeaponDevastatingCritical(global::NWN.LowLevel.CNWSItem pItem)
        {
            var __arg0 = pItem is null ? __IntPtr.Zero : pItem.__Instance;
            var __ret = __Internal.GetEpicWeaponDevastatingCritical(__Instance, __arg0);
            return __ret;
        }

        public int GetFavoredEnemyBonus(global::NWN.LowLevel.CNWSCreature pTargetCreature)
        {
            var __arg0 = pTargetCreature is null ? __IntPtr.Zero : pTargetCreature.__Instance;
            var __ret = __Internal.GetFavoredEnemyBonus(__Instance, __arg0);
            return __ret;
        }

        public void UpdateCombatInformation()
        {
            __Internal.UpdateCombatInformation(__Instance);
        }

        public int GetBaseAttackBonus(int bExcludeEpic)
        {
            var __ret = __Internal.GetBaseAttackBonus(__Instance, bExcludeEpic);
            return __ret;
        }

        public int GetMeleeAttackBonus(int bOffHand, int bIncludeBase, int bTouchAttack)
        {
            var __ret = __Internal.GetMeleeAttackBonus(__Instance, bOffHand, bIncludeBase, bTouchAttack);
            return __ret;
        }

        public int GetMeleeDamageBonus(int bOffHand, byte nCreatureWeapon)
        {
            var __ret = __Internal.GetMeleeDamageBonus(__Instance, bOffHand, nCreatureWeapon);
            return __ret;
        }

        public int GetRangedAttackBonus(int bIncludeBase, int bTouchAttack)
        {
            var __ret = __Internal.GetRangedAttackBonus(__Instance, bIncludeBase, bTouchAttack);
            return __ret;
        }

        public int GetAttackModifierVersus(global::NWN.LowLevel.CNWSCreature pTargetCreature)
        {
            var __arg0 = pTargetCreature is null ? __IntPtr.Zero : pTargetCreature.__Instance;
            var __ret = __Internal.GetAttackModifierVersus(__Instance, __arg0);
            return __ret;
        }

        public int GetDamageBonus(global::NWN.LowLevel.CNWSCreature pCreature, int bOffHand)
        {
            var __arg0 = pCreature is null ? __IntPtr.Zero : pCreature.__Instance;
            var __ret = __Internal.GetDamageBonus(__Instance, __arg0, bOffHand);
            return __ret;
        }

        public int GetDamageRoll(global::NWN.LowLevel.CNWSObject pTarget, int bOffHand, int bCritical, int bSneakAttack, int bDeathAttack, int bForceMax)
        {
            var __arg0 = pTarget is null ? __IntPtr.Zero : pTarget.__Instance;
            var __ret = __Internal.GetDamageRoll(__Instance, __arg0, bOffHand, bCritical, bSneakAttack, bDeathAttack, bForceMax);
            return __ret;
        }

        public int GetCriticalHitRoll(int bOffHand)
        {
            var __ret = __Internal.GetCriticalHitRoll(__Instance, bOffHand);
            return __ret;
        }

        public int GetCriticalHitMultiplier(int bOffHand)
        {
            var __ret = __Internal.GetCriticalHitMultiplier(__Instance, bOffHand);
            return __ret;
        }

        public int ResolveSpecialAttackAttackBonus(global::NWN.LowLevel.CNWSCreature pTarget)
        {
            var __arg0 = pTarget is null ? __IntPtr.Zero : pTarget.__Instance;
            var __ret = __Internal.ResolveSpecialAttackAttackBonus(__Instance, __arg0);
            return __ret;
        }

        public int ResolveSpecialAttackDamageBonus(global::NWN.LowLevel.CNWSCreature pTarget)
        {
            var __arg0 = pTarget is null ? __IntPtr.Zero : pTarget.__Instance;
            var __ret = __Internal.ResolveSpecialAttackDamageBonus(__Instance, __arg0);
            return __ret;
        }

        public ushort GetCasterLevel(byte nMultiClass)
        {
            var __ret = __Internal.GetCasterLevel(__Instance, nMultiClass);
            return __ret;
        }

        public byte GetSpellFailure(byte nSpellSchool)
        {
            var __ret = __Internal.GetSpellFailure(__Instance, nSpellSchool);
            return __ret;
        }

        public byte GetSpellsPerDayLeft(byte nMultiClass, byte nSpellLevel)
        {
            var __ret = __Internal.GetSpellsPerDayLeft(__Instance, nMultiClass, nSpellLevel);
            return __ret;
        }

        public byte GetSpellGainWithBonus(byte nMultiClass, byte nSpellLevel)
        {
            var __ret = __Internal.GetSpellGainWithBonus(__Instance, nMultiClass, nSpellLevel);
            return __ret;
        }

        public byte GetSpellGainWithBonusAfterLevelUp(byte nMultiClass, byte nSpellLevel, global::NWN.LowLevel.CNWLevelStats pLevelUpStats, byte nSchool, int bNewClass)
        {
            var __arg2 = pLevelUpStats is null ? __IntPtr.Zero : pLevelUpStats.__Instance;
            var __ret = __Internal.GetSpellGainWithBonusAfterLevelUp(__Instance, nMultiClass, nSpellLevel, __arg2, nSchool, bNewClass);
            return __ret;
        }

        public int ConfirmDomainSpell(byte nMultiClass, byte nSpellLevel, uint nSpellID)
        {
            var __ret = __Internal.ConfirmDomainSpell(__Instance, nMultiClass, nSpellLevel, nSpellID);
            return __ret;
        }

        public int GetSpellMinAbilityMet(byte nMultiClass, byte nSpellLevel)
        {
            var __ret = __Internal.GetSpellMinAbilityMet(__Instance, nMultiClass, nSpellLevel);
            return __ret;
        }

        public int GetMetamagicPrerequisitesMet(byte nMetaType)
        {
            var __ret = __Internal.GetMetamagicPrerequisitesMet(__Instance, nMetaType);
            return __ret;
        }

        public ushort GetNumberKnownSpells(byte nMultiClass, byte nSpellLevel)
        {
            var __ret = __Internal.GetNumberKnownSpells(__Instance, nMultiClass, nSpellLevel);
            return __ret;
        }

        public byte GetNumberMemorizedSpellSlots(byte nMultiClass, byte nSpellLevel)
        {
            var __ret = __Internal.GetNumberMemorizedSpellSlots(__Instance, nMultiClass, nSpellLevel);
            return __ret;
        }

        public uint GetKnownSpell(byte nMultiClass, byte nSpellLevel, byte nSpellListIndex)
        {
            var __ret = __Internal.GetKnownSpell(__Instance, nMultiClass, nSpellLevel, nSpellListIndex);
            return __ret;
        }

        public uint GetMemorizedSpellInSlot(byte nMultiClass, byte nSpellLevel, byte nSpellSlot)
        {
            var __ret = __Internal.GetMemorizedSpellInSlot(__Instance, nMultiClass, nSpellLevel, nSpellSlot);
            return __ret;
        }

        public int GetIsDomainSpell(byte nMultiClass, byte nSpellLevel, byte nSpellSlot)
        {
            var __ret = __Internal.GetIsDomainSpell(__Instance, nMultiClass, nSpellLevel, nSpellSlot);
            return __ret;
        }

        public byte ComputeNumberKnownSpellsLeft(byte nMultiClass, byte nSpellLevel)
        {
            var __ret = __Internal.ComputeNumberKnownSpellsLeft(__Instance, nMultiClass, nSpellLevel);
            return __ret;
        }

        public byte GetMemorizedSpellInSlotReady(byte nMultiClass, byte nSpellLevel, byte nSpellSlot)
        {
            var __ret = __Internal.GetMemorizedSpellInSlotReady(__Instance, nMultiClass, nSpellLevel, nSpellSlot);
            return __ret;
        }

        public void SetMemorizedSpellInSlotReady(byte nMultiClass, byte nSpellLevel, byte nSpellSlot, int bReady)
        {
            __Internal.SetMemorizedSpellInSlotReady(__Instance, nMultiClass, nSpellLevel, nSpellSlot, bReady);
        }

        public byte GetMemorizedSpellInSlotMetaType(byte nMultiClass, byte nSpellLevel, byte nSpellSlot)
        {
            var __ret = __Internal.GetMemorizedSpellInSlotMetaType(__Instance, nMultiClass, nSpellLevel, nSpellSlot);
            return __ret;
        }

        public int GetHasSilencedSpell(uint nSpellID)
        {
            var __ret = __Internal.GetHasSilencedSpell(__Instance, nSpellID);
            return __ret;
        }

        public int GetHasStilledSpell(uint nSpellID)
        {
            var __ret = __Internal.GetHasStilledSpell(__Instance, nSpellID);
            return __ret;
        }

        public byte GetSpellUsesLeft(uint nSpellID, byte nMultiClass, byte nDomainLevel, byte nMetaType)
        {
            var __ret = __Internal.GetSpellUsesLeft(__Instance, nSpellID, nMultiClass, nDomainLevel, nMetaType);
            return __ret;
        }

        public byte GetMemorizedSpellReadyCount(uint nSpellID)
        {
            var __ret = __Internal.GetMemorizedSpellReadyCount(__Instance, nSpellID);
            return __ret;
        }

        public byte GetMemorizedSpellReadyCount(byte nMultiClass, uint nSpellID, byte nMetaType)
        {
            var __ret = __Internal.GetMemorizedSpellReadyCount(__Instance, nMultiClass, nSpellID, nMetaType);
            return __ret;
        }

        public byte GetMemorizedSpellReadyCount(byte nMultiClass, uint nSpellID, byte* nMinSpellLevel, byte* nMinSpellSlot)
        {
            var __ret = __Internal.GetMemorizedSpellReadyCount(__Instance, nMultiClass, nSpellID, nMinSpellLevel, nMinSpellSlot);
            return __ret;
        }

        public byte GetSchool(byte nMultiClass)
        {
            var __ret = __Internal.GetSchool(__Instance, nMultiClass);
            return __ret;
        }

        public byte GetDomain1(byte nMultiClass)
        {
            var __ret = __Internal.GetDomain1(__Instance, nMultiClass);
            return __ret;
        }

        public byte GetDomain2(byte nMultiClass)
        {
            var __ret = __Internal.GetDomain2(__Instance, nMultiClass);
            return __ret;
        }

        public uint GetNumberOfBonusSpells(byte nMultiClass, byte nSpellLevel)
        {
            var __ret = __Internal.GetNumberOfBonusSpells(__Instance, nMultiClass, nSpellLevel);
            return __ret;
        }

        public void ModifyNumberBonusSpells(byte nMultiClass, byte nSpellLevel, int nDelta)
        {
            __Internal.ModifyNumberBonusSpells(__Instance, nMultiClass, nSpellLevel, nDelta);
        }

        public void SetArcaneSpellFailure(sbyte nValue)
        {
            __Internal.SetArcaneSpellFailure(__Instance, nValue);
        }

        public void SetSpellFailure(byte nSpellSchool, byte nValue)
        {
            __Internal.SetSpellFailure(__Instance, nSpellSchool, nValue);
        }

        public void SetSpellResistancePenalty(sbyte nValue)
        {
            __Internal.SetSpellResistancePenalty(__Instance, nValue);
        }

        public void DecrementSpellsPerDayLeft(byte nMultiClass, byte nSpellLevel)
        {
            __Internal.DecrementSpellsPerDayLeft(__Instance, nMultiClass, nSpellLevel);
        }

        public void IncrementSpellsPerDayLeft(byte nMultiClass, byte nSpellLevel)
        {
            __Internal.IncrementSpellsPerDayLeft(__Instance, nMultiClass, nSpellLevel);
        }

        public void ResetSpellsPerDayLeft(byte nMultiClass, byte nSpellLevel)
        {
            __Internal.ResetSpellsPerDayLeft(__Instance, nMultiClass, nSpellLevel);
        }

        public void AdjustSpellUsesPerDay()
        {
            __Internal.AdjustSpellUsesPerDay(__Instance);
        }

        public void UpdateNumberMemorizedSpellSlots()
        {
            __Internal.UpdateNumberMemorizedSpellSlots(__Instance);
        }

        public int SetMemorizedSpellSlot(byte nMultiClass, byte nSpellSlot, uint nSpellID, byte nDomainLevel, byte nMetaType, int bFromClient)
        {
            var __ret = __Internal.SetMemorizedSpellSlot(__Instance, nMultiClass, nSpellSlot, nSpellID, nDomainLevel, nMetaType, bFromClient);
            return __ret;
        }

        public void SetNumberMemorizedSpellSlots(byte nMultiClass, byte nSpellLevel, byte nNumSlots)
        {
            __Internal.SetNumberMemorizedSpellSlots(__Instance, nMultiClass, nSpellLevel, nNumSlots);
        }

        public void ClearMemorizedSpellSlot(byte nMultiClass, byte nSpellLevel, byte nSpellSlot)
        {
            __Internal.ClearMemorizedSpellSlot(__Instance, nMultiClass, nSpellLevel, nSpellSlot);
        }

        public void AddKnownSpell(byte nMultiClass, uint nSpellID)
        {
            __Internal.AddKnownSpell(__Instance, nMultiClass, nSpellID);
        }

        public void RemoveKnownSpell(byte nMultiClass, uint nSpellID)
        {
            __Internal.RemoveKnownSpell(__Instance, nMultiClass, nSpellID);
        }

        public void MemorizeAllNPCSpells()
        {
            __Internal.MemorizeAllNPCSpells(__Instance);
        }

        public byte GetSpellsOfLevelReady(byte nMultiClass, byte nSpellLevel)
        {
            var __ret = __Internal.GetSpellsOfLevelReady(__Instance, nMultiClass, nSpellLevel);
            return __ret;
        }

        public void ReadySpellLevel(byte nSpellLevel)
        {
            __Internal.ReadySpellLevel(__Instance, nSpellLevel);
        }

        public int UnReadySpell(uint nSpellID, byte nMultiClass, byte nDomainLevel, byte nMetaType)
        {
            var __ret = __Internal.UnReadySpell(__Instance, nSpellID, nMultiClass, nDomainLevel, nMetaType);
            return __ret;
        }

        public void SetSchool(byte nMultiClass, byte nSchool)
        {
            __Internal.SetSchool(__Instance, nMultiClass, nSchool);
        }

        public void SetDomain1(byte nMultiClass, byte nDomain)
        {
            __Internal.SetDomain1(__Instance, nMultiClass, nDomain);
        }

        public void SetDomain2(byte nMultiClass, byte nDomain)
        {
            __Internal.SetDomain2(__Instance, nMultiClass, nDomain);
        }

        public void AddSpellLikeAbilityToList(uint nSpellId, int bReadied, byte nCasterLevel)
        {
            __Internal.AddSpellLikeAbilityToList(__Instance, nSpellId, bReadied, nCasterLevel);
        }

        public int SetSpellLikeAbilityReady(uint nSpellId, int bReadied, byte nCasterLevel)
        {
            var __ret = __Internal.SetSpellLikeAbilityReady(__Instance, nSpellId, bReadied, nCasterLevel);
            return __ret;
        }

        public void ResetSpellLikeAbilities()
        {
            __Internal.ResetSpellLikeAbilities(__Instance);
        }

        public int GetIsInSpellLikeAbilityList(uint nSpellId)
        {
            var __ret = __Internal.GetIsInSpellLikeAbilityList(__Instance, nSpellId);
            return __ret;
        }

        public byte GetSpellLikeAbilityCasterLevel(uint nSpellId)
        {
            var __ret = __Internal.GetSpellLikeAbilityCasterLevel(__Instance, nSpellId);
            return __ret;
        }

        public float GetStatById(int nId)
        {
            var __ret = __Internal.GetStatById(__Instance, nId);
            return __ret;
        }

        public void SetStatById(int nId, float nStat)
        {
            __Internal.SetStatById(__Instance, nId, nStat);
        }

        public int GetIsWeaponOfChoice(uint nBaseItemType)
        {
            var __ret = __Internal.GetIsWeaponOfChoice(__Instance, nBaseItemType);
            return __ret;
        }

        public void RunDataMigrations()
        {
            __Internal.RunDataMigrations(__Instance);
        }

        public int GetIsInKnownSpellList(byte nMultiClass, uint nSpellID)
        {
            var __ret = __Internal.GetIsInKnownSpellList(__Instance, nMultiClass, nSpellID);
            return __ret;
        }

        public int CheckSpellSuitability(int nSpellId, global::NWN.LowLevel.CNWSpell pSpell, int nCategory, int nMaxCR, int nSpellLevel, int nSpellSlot, int nClass, int bCheckMetamagic, byte* nMetaType, int nMasterSpellId)
        {
            var __arg1 = pSpell is null ? __IntPtr.Zero : pSpell.__Instance;
            var __ret = __Internal.CheckSpellSuitability(__Instance, nSpellId, __arg1, nCategory, nMaxCR, nSpellLevel, nSpellSlot, nClass, bCheckMetamagic, nMetaType, nMasterSpellId);
            return __ret;
        }

        public static implicit operator global::NWN.LowLevel.CNWSCreatureStats(global::NWN.LowLevel.CNWSCreature pCreature)
        {
            return new global::NWN.LowLevel.CNWSCreatureStats(pCreature);
        }

        public global::NWN.LowLevel.CExoArrayList<ushort> MLstFeats
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<ushort>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstFeats));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstFeats = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CFeatUseListEntry> MLstFeatUses
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CFeatUseListEntry>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstFeatUses));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstFeatUses = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<ushort> MLstBonusFeats
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<ushort>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstBonusFeats));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstBonusFeats = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CNWSCreature MPBaseCreature
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CNWSCreature.__GetOrCreateInstance(((__Internal*)__Instance)->m_pBaseCreature, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pBaseCreature = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWLevelStats> MLstLevelStats
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWLevelStats>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstLevelStats));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstLevelStats = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoLocString MLsFirstName
        {
            get
            {
                return global::NWN.LowLevel.CExoLocString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lsFirstName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lsFirstName = *(global::NWN.LowLevel.CExoLocString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoLocString MLsLastName
        {
            get
            {
                return global::NWN.LowLevel.CExoLocString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lsLastName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lsLastName = *(global::NWN.LowLevel.CExoLocString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CResRef MCDialog
        {
            get
            {
                return global::NWN.LowLevel.CResRef.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_cDialog));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_cDialog = *(global::NWN.LowLevel.CResRef.__Internal*) value.__Instance;
            }
        }

        public int MBDialogInterruptable
        {
            get
            {
                return ((__Internal*)__Instance)->m_bDialogInterruptable;
            }

            set
            {
                ((__Internal*)__Instance)->m_bDialogInterruptable = value;
            }
        }

        public global::NWN.LowLevel.CExoLocString MSDescription
        {
            get
            {
                return global::NWN.LowLevel.CExoLocString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sDescription));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sDescription = *(global::NWN.LowLevel.CExoLocString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoString MSDescriptionOverride
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sDescriptionOverride));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sDescriptionOverride = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public int MNAge
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAge;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAge = value;
            }
        }

        public byte MNGender
        {
            get
            {
                return ((__Internal*)__Instance)->m_nGender;
            }

            set
            {
                ((__Internal*)__Instance)->m_nGender = value;
            }
        }

        public uint MNExperience
        {
            get
            {
                return ((__Internal*)__Instance)->m_nExperience;
            }

            set
            {
                ((__Internal*)__Instance)->m_nExperience = value;
            }
        }

        public int MBIsDMCharacterFile
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIsDMCharacterFile;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIsDMCharacterFile = value;
            }
        }

        public int MBIsPC
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIsPC;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIsPC = value;
            }
        }

        public int MBIsAIDisabledPossess
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIsAIDisabledPossess;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIsAIDisabledPossess = value;
            }
        }

        public int MBIsAIDisabledOverride
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIsAIDisabledOverride;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIsAIDisabledOverride = value;
            }
        }

        public int MBDMManifested
        {
            get
            {
                return ((__Internal*)__Instance)->m_bDMManifested;
            }

            set
            {
                ((__Internal*)__Instance)->m_bDMManifested = value;
            }
        }

        public byte MNMultiClassLeveledUpIn
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMultiClassLeveledUpIn;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMultiClassLeveledUpIn = value;
            }
        }

        public int MNFactionId
        {
            get
            {
                return ((__Internal*)__Instance)->m_nFactionId;
            }

            set
            {
                ((__Internal*)__Instance)->m_nFactionId = value;
            }
        }

        public int MNOriginalFactionId
        {
            get
            {
                return ((__Internal*)__Instance)->m_nOriginalFactionId;
            }

            set
            {
                ((__Internal*)__Instance)->m_nOriginalFactionId = value;
            }
        }

        public int MNPreDominationFactionId
        {
            get
            {
                return ((__Internal*)__Instance)->m_nPreDominationFactionId;
            }

            set
            {
                ((__Internal*)__Instance)->m_nPreDominationFactionId = value;
            }
        }

        public float MFChallengeRating
        {
            get
            {
                return ((__Internal*)__Instance)->m_fChallengeRating;
            }

            set
            {
                ((__Internal*)__Instance)->m_fChallengeRating = value;
            }
        }

        public byte MNStartingPackage
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStartingPackage;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStartingPackage = value;
            }
        }

        public byte MNNumMultiClasses
        {
            get
            {
                return ((__Internal*)__Instance)->m_nNumMultiClasses;
            }

            set
            {
                ((__Internal*)__Instance)->m_nNumMultiClasses = value;
            }
        }

        public global::NWN.LowLevel.CNWSCreatureStatsClassInfo[] MClassInfo
        {
            get
            {
                global::NWN.LowLevel.CNWSCreatureStatsClassInfo[] __value = null;
                if (((__Internal*)__Instance)->m_ClassInfo != null)
                {
                    __value = new global::NWN.LowLevel.CNWSCreatureStatsClassInfo[3];
                    for (int i = 0; i < 3; i++)
                        __value[i] = global::NWN.LowLevel.CNWSCreatureStatsClassInfo.__CreateInstance(*((global::NWN.LowLevel.CNWSCreatureStatsClassInfo.__Internal*)&(((__Internal*)__Instance)->m_ClassInfo[i * sizeof(global::NWN.LowLevel.CNWSCreatureStatsClassInfo.__Internal)])));
                }
                return __value;
            }

            set
            {
                if (value != null)
                {
                    if (value.Length != 3)
                        throw new ArgumentOutOfRangeException("value", "The dimensions of the provided array don't match the required size.");
                    for (int i = 0; i < 3; i++)
                        *(global::NWN.LowLevel.CNWSCreatureStatsClassInfo.__Internal*) &((__Internal*)__Instance)->m_ClassInfo[i * sizeof(global::NWN.LowLevel.CNWSCreatureStatsClassInfo.__Internal)] = *(global::NWN.LowLevel.CNWSCreatureStatsClassInfo.__Internal*)value[i].__Instance;
                }
            }
        }

        public ushort MNRace
        {
            get
            {
                return ((__Internal*)__Instance)->m_nRace;
            }

            set
            {
                ((__Internal*)__Instance)->m_nRace = value;
            }
        }

        public global::NWN.LowLevel.CExoString MSSubRace
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sSubRace));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sSubRace = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public byte MNStrengthBase
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStrengthBase;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStrengthBase = value;
            }
        }

        public sbyte MNStrengthModifier
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStrengthModifier;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStrengthModifier = value;
            }
        }

        public byte MNDexterityBase
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDexterityBase;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDexterityBase = value;
            }
        }

        public sbyte MNDexterityModifier
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDexterityModifier;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDexterityModifier = value;
            }
        }

        public byte MNConstitutionBase
        {
            get
            {
                return ((__Internal*)__Instance)->m_nConstitutionBase;
            }

            set
            {
                ((__Internal*)__Instance)->m_nConstitutionBase = value;
            }
        }

        public sbyte MNConstitutionModifier
        {
            get
            {
                return ((__Internal*)__Instance)->m_nConstitutionModifier;
            }

            set
            {
                ((__Internal*)__Instance)->m_nConstitutionModifier = value;
            }
        }

        public byte MNIntelligenceBase
        {
            get
            {
                return ((__Internal*)__Instance)->m_nIntelligenceBase;
            }

            set
            {
                ((__Internal*)__Instance)->m_nIntelligenceBase = value;
            }
        }

        public sbyte MNIntelligenceModifier
        {
            get
            {
                return ((__Internal*)__Instance)->m_nIntelligenceModifier;
            }

            set
            {
                ((__Internal*)__Instance)->m_nIntelligenceModifier = value;
            }
        }

        public byte MNWisdomBase
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWisdomBase;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWisdomBase = value;
            }
        }

        public sbyte MNWisdomModifier
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWisdomModifier;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWisdomModifier = value;
            }
        }

        public byte MNCharismaBase
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCharismaBase;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCharismaBase = value;
            }
        }

        public sbyte MNCharismaModifier
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCharismaModifier;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCharismaModifier = value;
            }
        }

        public sbyte MNACNaturalBase
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACNaturalBase;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACNaturalBase = value;
            }
        }

        public sbyte MNACArmorBase
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACArmorBase;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACArmorBase = value;
            }
        }

        public sbyte MNACShieldBase
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACShieldBase;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACShieldBase = value;
            }
        }

        public sbyte MNACArmorMod
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACArmorMod;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACArmorMod = value;
            }
        }

        public sbyte MNACArmorNeg
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACArmorNeg;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACArmorNeg = value;
            }
        }

        public sbyte MNACDeflectionMod
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACDeflectionMod;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACDeflectionMod = value;
            }
        }

        public sbyte MNACDeflectionNeg
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACDeflectionNeg;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACDeflectionNeg = value;
            }
        }

        public sbyte MNACShieldMod
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACShieldMod;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACShieldMod = value;
            }
        }

        public sbyte MNACShieldNeg
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACShieldNeg;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACShieldNeg = value;
            }
        }

        public sbyte MNACNaturalMod
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACNaturalMod;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACNaturalMod = value;
            }
        }

        public sbyte MNACNaturalNeg
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACNaturalNeg;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACNaturalNeg = value;
            }
        }

        public sbyte MNACDodgeMod
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACDodgeMod;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACDodgeMod = value;
            }
        }

        public sbyte MNACDodgeNeg
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACDodgeNeg;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACDodgeNeg = value;
            }
        }

        public byte MNBaseAttackBonus
        {
            get
            {
                return ((__Internal*)__Instance)->m_nBaseAttackBonus;
            }

            set
            {
                ((__Internal*)__Instance)->m_nBaseAttackBonus = value;
            }
        }

        public byte MNOverrideBaseAttackBonus
        {
            get
            {
                return ((__Internal*)__Instance)->m_nOverrideBaseAttackBonus;
            }

            set
            {
                ((__Internal*)__Instance)->m_nOverrideBaseAttackBonus = value;
            }
        }

        public sbyte MNEnemyAttackBonus
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEnemyAttackBonus;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEnemyAttackBonus = value;
            }
        }

        public sbyte* MNDamageImmunity
        {
            get
            {
                return (sbyte*) ((__Internal*)__Instance)->m_nDamageImmunity;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDamageImmunity = (__IntPtr) value;
            }
        }

        public int MNDamageRoll
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDamageRoll;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDamageRoll = value;
            }
        }

        public int MNCriticalHitRoll
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCriticalHitRoll;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCriticalHitRoll = value;
            }
        }

        public int MNCriticalHitMultiplier
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCriticalHitMultiplier;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCriticalHitMultiplier = value;
            }
        }

        public byte MNAttacksPerRound
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAttacksPerRound;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAttacksPerRound = value;
            }
        }

        public global::NWN.LowLevel.CCombatInformation MPCombatInformation
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CCombatInformation.__GetOrCreateInstance(((__Internal*)__Instance)->m_pCombatInformation, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pCombatInformation = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public sbyte MNArcaneSpellFailure
        {
            get
            {
                return ((__Internal*)__Instance)->m_nArcaneSpellFailure;
            }

            set
            {
                ((__Internal*)__Instance)->m_nArcaneSpellFailure = value;
            }
        }

        public byte MNBaseArmorArcaneSpellFailure
        {
            get
            {
                return ((__Internal*)__Instance)->m_nBaseArmorArcaneSpellFailure;
            }

            set
            {
                ((__Internal*)__Instance)->m_nBaseArmorArcaneSpellFailure = value;
            }
        }

        public byte MNBaseShieldArcaneSpellFailure
        {
            get
            {
                return ((__Internal*)__Instance)->m_nBaseShieldArcaneSpellFailure;
            }

            set
            {
                ((__Internal*)__Instance)->m_nBaseShieldArcaneSpellFailure = value;
            }
        }

        public byte[] MPSpellFailure
        {
            get
            {
                return CppSharp.Runtime.MarshalUtil.GetArray<byte>(((__Internal*)__Instance)->m_pSpellFailure, 9);
            }

            set
            {
                if (value != null)
                {
                    for (int i = 0; i < 9; i++)
                        ((__Internal*)__Instance)->m_pSpellFailure[i] = value[i];
                }
            }
        }

        public sbyte MNSpellResistance
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSpellResistance;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSpellResistance = value;
            }
        }

        public sbyte MNSpellResistancePenalty
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSpellResistancePenalty;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSpellResistancePenalty = value;
            }
        }

        public ushort MNTempHitpointsPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nTempHitpointsPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nTempHitpointsPtr = value;
            }
        }

        public ushort MNACVersusPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nACVersusPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nACVersusPtr = value;
            }
        }

        public ushort MNAttackBonusPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAttackBonusPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAttackBonusPtr = value;
            }
        }

        public ushort MNDamageReductionPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDamageReductionPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDamageReductionPtr = value;
            }
        }

        public ushort MNDamageResistancePtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDamageResistancePtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDamageResistancePtr = value;
            }
        }

        public ushort MNDamageBonusPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDamageBonusPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDamageBonusPtr = value;
            }
        }

        public ushort MNAIStatePtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAIStatePtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAIStatePtr = value;
            }
        }

        public ushort MNEffectIconPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEffectIconPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEffectIconPtr = value;
            }
        }

        public ushort MNSanctuaryPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSanctuaryPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSanctuaryPtr = value;
            }
        }

        public ushort MNInvisibilityPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nInvisibilityPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nInvisibilityPtr = value;
            }
        }

        public ushort MNSpellResistancePtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSpellResistancePtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSpellResistancePtr = value;
            }
        }

        public ushort MNAbilityPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAbilityPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAbilityPtr = value;
            }
        }

        public ushort MNSeeInvisiblePtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSeeInvisiblePtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSeeInvisiblePtr = value;
            }
        }

        public ushort MNUltraVisionPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nUltraVisionPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nUltraVisionPtr = value;
            }
        }

        public ushort MNMissChancePtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMissChancePtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMissChancePtr = value;
            }
        }

        public ushort MNConcealmentPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nConcealmentPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nConcealmentPtr = value;
            }
        }

        public ushort MNBlindnessPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nBlindnessPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nBlindnessPtr = value;
            }
        }

        public ushort MNWalkAnimationPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWalkAnimationPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWalkAnimationPtr = value;
            }
        }

        public ushort MNSpellLevelAbsorptionPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSpellLevelAbsorptionPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSpellLevelAbsorptionPtr = value;
            }
        }

        public ushort MNSpellImmunityPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSpellImmunityPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSpellImmunityPtr = value;
            }
        }

        public ushort MNDamageShieldPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDamageShieldPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDamageShieldPtr = value;
            }
        }

        public ushort MNSkillBonusPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSkillBonusPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSkillBonusPtr = value;
            }
        }

        public ushort MNSavingThrowBonusPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSavingThrowBonusPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSavingThrowBonusPtr = value;
            }
        }

        public ushort MNHastePtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nHastePtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nHastePtr = value;
            }
        }

        public ushort MNEffectImmunityPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEffectImmunityPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEffectImmunityPtr = value;
            }
        }

        public ushort MNLimitMovementSpeedPtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLimitMovementSpeedPtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLimitMovementSpeedPtr = value;
            }
        }

        public ushort MNMovementSpeedDecreasePtr
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMovementSpeedDecreasePtr;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMovementSpeedDecreasePtr = value;
            }
        }

        public ushort MNSkillPointsRemaining
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSkillPointsRemaining;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSkillPointsRemaining = value;
            }
        }

        public sbyte* MLstSkillRanks
        {
            get
            {
                return (sbyte*) ((__Internal*)__Instance)->m_lstSkillRanks;
            }

            set
            {
                ((__Internal*)__Instance)->m_lstSkillRanks = (__IntPtr) value;
            }
        }

        public sbyte MNArmorCheckPenalty
        {
            get
            {
                return ((__Internal*)__Instance)->m_nArmorCheckPenalty;
            }

            set
            {
                ((__Internal*)__Instance)->m_nArmorCheckPenalty = value;
            }
        }

        public sbyte MNShieldCheckPenalty
        {
            get
            {
                return ((__Internal*)__Instance)->m_nShieldCheckPenalty;
            }

            set
            {
                ((__Internal*)__Instance)->m_nShieldCheckPenalty = value;
            }
        }

        public global::NWN.LowLevel.CResRef MCPortrait
        {
            get
            {
                return global::NWN.LowLevel.CResRef.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_cPortrait));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_cPortrait = *(global::NWN.LowLevel.CResRef.__Internal*) value.__Instance;
            }
        }

        public short MNAlignmentGoodEvil
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAlignmentGoodEvil;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAlignmentGoodEvil = value;
            }
        }

        public short MNAlignmentLawChaos
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAlignmentLawChaos;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAlignmentLawChaos = value;
            }
        }

        public byte MNSkinColor
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSkinColor;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSkinColor = value;
            }
        }

        public byte MNHairColor
        {
            get
            {
                return ((__Internal*)__Instance)->m_nHairColor;
            }

            set
            {
                ((__Internal*)__Instance)->m_nHairColor = value;
            }
        }

        public byte MNTattoo1Color
        {
            get
            {
                return ((__Internal*)__Instance)->m_nTattoo1Color;
            }

            set
            {
                ((__Internal*)__Instance)->m_nTattoo1Color = value;
            }
        }

        public byte MNTattoo2Color
        {
            get
            {
                return ((__Internal*)__Instance)->m_nTattoo2Color;
            }

            set
            {
                ((__Internal*)__Instance)->m_nTattoo2Color = value;
            }
        }

        public ushort MNAppearanceType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAppearanceType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAppearanceType = value;
            }
        }

        public byte MNPhenoType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nPhenoType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nPhenoType = value;
            }
        }

        public byte MNHeadVariation
        {
            get
            {
                return ((__Internal*)__Instance)->m_nHeadVariation;
            }

            set
            {
                ((__Internal*)__Instance)->m_nHeadVariation = value;
            }
        }

        public byte[] MPPartVariation
        {
            get
            {
                return CppSharp.Runtime.MarshalUtil.GetArray<byte>(((__Internal*)__Instance)->m_pPartVariation, 19);
            }

            set
            {
                if (value != null)
                {
                    for (int i = 0; i < 19; i++)
                        ((__Internal*)__Instance)->m_pPartVariation[i] = value[i];
                }
            }
        }

        public uint MNTailVariation
        {
            get
            {
                return ((__Internal*)__Instance)->m_nTailVariation;
            }

            set
            {
                ((__Internal*)__Instance)->m_nTailVariation = value;
            }
        }

        public uint MNWingVariation
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWingVariation;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWingVariation = value;
            }
        }

        public int MNMovementRate
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMovementRate;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMovementRate = value;
            }
        }

        public float MFMovementRunSpeed
        {
            get
            {
                return ((__Internal*)__Instance)->m_fMovementRunSpeed;
            }

            set
            {
                ((__Internal*)__Instance)->m_fMovementRunSpeed = value;
            }
        }

        public float MFMovementWalkSpeed
        {
            get
            {
                return ((__Internal*)__Instance)->m_fMovementWalkSpeed;
            }

            set
            {
                ((__Internal*)__Instance)->m_fMovementWalkSpeed = value;
            }
        }

        public sbyte MNFortSavingThrowMisc
        {
            get
            {
                return ((__Internal*)__Instance)->m_nFortSavingThrowMisc;
            }

            set
            {
                ((__Internal*)__Instance)->m_nFortSavingThrowMisc = value;
            }
        }

        public sbyte MNWillSavingThrowMisc
        {
            get
            {
                return ((__Internal*)__Instance)->m_nWillSavingThrowMisc;
            }

            set
            {
                ((__Internal*)__Instance)->m_nWillSavingThrowMisc = value;
            }
        }

        public sbyte MNReflexSavingThrowMisc
        {
            get
            {
                return ((__Internal*)__Instance)->m_nReflexSavingThrowMisc;
            }

            set
            {
                ((__Internal*)__Instance)->m_nReflexSavingThrowMisc = value;
            }
        }

        public int MNAnimalCompanionCreatureType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nAnimalCompanionCreatureType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nAnimalCompanionCreatureType = value;
            }
        }

        public int MNFamiliarCreatureType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nFamiliarCreatureType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nFamiliarCreatureType = value;
            }
        }

        public global::NWN.LowLevel.CExoString MSAnimalCompanionName
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sAnimalCompanionName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sAnimalCompanionName = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoString MSFamiliarName
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sFamiliarName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sFamiliarName = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoString MSDeity
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sDeity));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sDeity = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public uint MNLatestDataMigration
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLatestDataMigration;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLatestDataMigration = value;
            }
        }

        public int IsDM
        {
            get
            {
                var __ret = __Internal.GetIsDM(__Instance);
                return __ret;
            }
        }

        public int IsPlayerDM
        {
            get
            {
                var __ret = __Internal.GetIsPlayerDM(__Instance);
                return __ret;
            }
        }

        public global::NWN.LowLevel.CExoString FullName
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CExoString.__Internal();
                __Internal.GetFullName(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
            }
        }

        public global::NWN.LowLevel.CExoString Tag
        {
            get
            {
                var __ret = __Internal.GetTag(__Instance);
                var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(__ret, false);
                return __result0;
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = value.__Instance;
                __Internal.SetTag(__Instance, __arg0);
            }
        }

        public byte EffectiveCRForPotentialLevel
        {
            get
            {
                var __ret = __Internal.GetEffectiveCRForPotentialLevel(__Instance);
                return __ret;
            }
        }

        public byte PotentialLevel
        {
            get
            {
                var __ret = __Internal.GetPotentialLevel(__Instance);
                return __ret;
            }
        }

        public uint ExpNeededForLevelUp
        {
            get
            {
                var __ret = __Internal.GetExpNeededForLevelUp(__Instance);
                return __ret;
            }
        }

        public int TotalNegativeLevels
        {
            get
            {
                var __ret = __Internal.GetTotalNegativeLevels(__Instance);
                return __ret;
            }
        }

        public global::NWN.LowLevel.CExoString RaceString
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CExoString.__Internal();
                __Internal.GetRaceString(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
            }
        }

        public global::NWN.LowLevel.CResRef SmallPortrait
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CResRef.__Internal();
                __Internal.GetSmallPortrait(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CResRef.__CreateInstance(__ret);
            }
        }

        public global::NWN.LowLevel.CResRef LargePortrait
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CResRef.__Internal();
                __Internal.GetLargePortrait(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CResRef.__CreateInstance(__ret);
            }
        }

        public sbyte BaseFortSavingThrow
        {
            get
            {
                var __ret = __Internal.GetBaseFortSavingThrow(__Instance);
                return __ret;
            }
        }

        public sbyte BaseWillSavingThrow
        {
            get
            {
                var __ret = __Internal.GetBaseWillSavingThrow(__Instance);
                return __ret;
            }
        }

        public sbyte BaseReflexSavingThrow
        {
            get
            {
                var __ret = __Internal.GetBaseReflexSavingThrow(__Instance);
                return __ret;
            }
        }

        public byte STRStat
        {
            get
            {
                var __ret = __Internal.GetSTRStat(__Instance);
                return __ret;
            }
        }

        public sbyte TotalSTRBonus
        {
            get
            {
                var __ret = __Internal.GetTotalSTRBonus(__Instance);
                return __ret;
            }
        }

        public byte DEXStat
        {
            get
            {
                var __ret = __Internal.GetDEXStat(__Instance);
                return __ret;
            }
        }

        public sbyte TotalDEXBonus
        {
            get
            {
                var __ret = __Internal.GetTotalDEXBonus(__Instance);
                return __ret;
            }
        }

        public byte CONStat
        {
            get
            {
                var __ret = __Internal.GetCONStat(__Instance);
                return __ret;
            }
        }

        public sbyte TotalCONBonus
        {
            get
            {
                var __ret = __Internal.GetTotalCONBonus(__Instance);
                return __ret;
            }
        }

        public byte INTStat
        {
            get
            {
                var __ret = __Internal.GetINTStat(__Instance);
                return __ret;
            }
        }

        public sbyte TotalINTBonus
        {
            get
            {
                var __ret = __Internal.GetTotalINTBonus(__Instance);
                return __ret;
            }
        }

        public byte WISStat
        {
            get
            {
                var __ret = __Internal.GetWISStat(__Instance);
                return __ret;
            }
        }

        public sbyte TotalWISBonus
        {
            get
            {
                var __ret = __Internal.GetTotalWISBonus(__Instance);
                return __ret;
            }
        }

        public byte CHAStat
        {
            get
            {
                var __ret = __Internal.GetCHAStat(__Instance);
                return __ret;
            }
        }

        public sbyte TotalCHABonus
        {
            get
            {
                var __ret = __Internal.GetTotalCHABonus(__Instance);
                return __ret;
            }
        }

        public sbyte TotalACSkillMod
        {
            get
            {
                var __ret = __Internal.GetTotalACSkillMod(__Instance);
                return __ret;
            }
        }

        public byte SimpleAlignmentGoodEvil
        {
            get
            {
                var __ret = __Internal.GetSimpleAlignmentGoodEvil(__Instance);
                return __ret;
            }
        }

        public byte SimpleAlignmentLawChaos
        {
            get
            {
                var __ret = __Internal.GetSimpleAlignmentLawChaos(__Instance);
                return __ret;
            }
        }

        public global::NWN.LowLevel.CExoString AlignmentString
        {
            get
            {
                var __ret = new global::NWN.LowLevel.CExoString.__Internal();
                __Internal.GetAlignmentString(new IntPtr(&__ret), __Instance);
                return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
            }
        }

        public int IsEpitomeOfAlignment
        {
            get
            {
                var __ret = __Internal.GetIsEpitomeOfAlignment(__Instance);
                return __ret;
            }
        }

        public byte UnarmedDamageDice
        {
            get
            {
                var __ret = __Internal.GetUnarmedDamageDice(__Instance);
                return __ret;
            }
        }

        public byte UnarmedDamageDie
        {
            get
            {
                var __ret = __Internal.GetUnarmedDamageDie(__Instance);
                return __ret;
            }
        }

        public int RangedDamageBonus
        {
            get
            {
                var __ret = __Internal.GetRangedDamageBonus(__Instance);
                return __ret;
            }
        }

        public byte AttacksPerRound
        {
            get
            {
                var __ret = __Internal.GetAttacksPerRound(__Instance);
                return __ret;
            }
        }

        public sbyte SpellResistance
        {
            get
            {
                var __ret = __Internal.GetSpellResistance(__Instance);
                return __ret;
            }

            set
            {
                __Internal.SetSpellResistance(__Instance, value);
            }
        }

        public uint HighestLevelKnown
        {
            get
            {
                var __ret = __Internal.GetHighestLevelKnown(__Instance);
                return __ret;
            }
        }
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
