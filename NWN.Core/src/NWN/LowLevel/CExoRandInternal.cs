// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    public unsafe partial class CExoRandInternal : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 160)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal uint m_s1;

            [FieldOffset(4)]
            internal uint m_s2;

            [FieldOffset(8)]
            internal uint m_s3;

            [FieldOffset(12)]
            internal uint m_s4;

            [FieldOffset(16)]
            internal uint m_mask1;

            [FieldOffset(20)]
            internal uint m_mask2;

            [FieldOffset(24)]
            internal uint m_mask3;

            [FieldOffset(28)]
            internal uint m_mask4;

            [FieldOffset(32)]
            internal int m_shft1;

            [FieldOffset(36)]
            internal int m_shft2;

            [FieldOffset(40)]
            internal int m_shft3;

            [FieldOffset(44)]
            internal int m_shft4;

            [FieldOffset(48)]
            internal int m_k1;

            [FieldOffset(52)]
            internal int m_k2;

            [FieldOffset(56)]
            internal int m_k3;

            [FieldOffset(60)]
            internal int m_k4;

            [FieldOffset(64)]
            internal int m_q1;

            [FieldOffset(68)]
            internal int m_q2;

            [FieldOffset(72)]
            internal int m_q3;

            [FieldOffset(76)]
            internal int m_q4;

            [FieldOffset(80)]
            internal int m_p1;

            [FieldOffset(84)]
            internal int m_p2;

            [FieldOffset(88)]
            internal int m_p3;

            [FieldOffset(92)]
            internal int m_p4;

            [FieldOffset(96)]
            internal int m_bSeeded;

            [FieldOffset(104)]
            internal __IntPtr m_pBuffer;

            [FieldOffset(112)]
            internal ushort m_pBufIndex;

            [FieldOffset(120)]
            internal ulong m_nEvent1;

            [FieldOffset(128)]
            internal ulong m_nEvent2;

            [FieldOffset(136)]
            internal ulong m_nEvent3;

            [FieldOffset(144)]
            internal ulong m_nEvent4;

            [FieldOffset(152)]
            internal uint m_nEvent5;

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN16CExoRandInternalC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctor(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN16CExoRandInternalC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN16CExoRandInternalD2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtor(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN16CExoRandInternal9GetStringEt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetString(__IntPtr @return, __IntPtr __instance, ushort nLength);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN16CExoRandInternal11SignalEventEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SignalEvent(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN16CExoRandInternal11SignalEventEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SignalEvent(__IntPtr __instance, uint nTimeStamp);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN16CExoRandInternal6ReSeedEjjjj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ReSeed(__IntPtr __instance, uint a, uint b, uint c, uint d);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN16CExoRandInternal7GenSeedEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GenSeed(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN16CExoRandInternal3AddEPhi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void Add(__IntPtr __instance, byte* pBuf, int nSize);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN16CExoRandInternal4RandEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Rand(__IntPtr __instance);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CExoRandInternal> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CExoRandInternal>();

        protected bool __ownsNativeInstance;

        internal static CExoRandInternal __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new CExoRandInternal(native.ToPointer(), skipVTables);
        }

        internal static CExoRandInternal __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (CExoRandInternal)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static CExoRandInternal __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new CExoRandInternal(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private CExoRandInternal(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CExoRandInternal(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public CExoRandInternal()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoRandInternal.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            __Internal.ctor(__Instance);
        }

        public CExoRandInternal(global::NWN.LowLevel.CExoRandInternal _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoRandInternal.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::NWN.LowLevel.CExoRandInternal.__Internal*) __Instance) = *((global::NWN.LowLevel.CExoRandInternal.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::NWN.LowLevel.CExoRandInternal __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (disposing)
                __Internal.dtor(__Instance);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::NWN.LowLevel.CExoString GetString(ushort nLength)
        {
            var __ret = new global::NWN.LowLevel.CExoString.__Internal();
            __Internal.GetString(new IntPtr(&__ret), __Instance, nLength);
            return global::NWN.LowLevel.CExoString.__CreateInstance(__ret);
        }

        public void SignalEvent()
        {
            __Internal.SignalEvent(__Instance);
        }

        public void SignalEvent(uint nTimeStamp)
        {
            __Internal.SignalEvent(__Instance, nTimeStamp);
        }

        public void ReSeed(uint a, uint b, uint c, uint d)
        {
            __Internal.ReSeed(__Instance, a, b, c, d);
        }

        public void GenSeed()
        {
            __Internal.GenSeed(__Instance);
        }

        public void Add(byte* pBuf, int nSize)
        {
            __Internal.Add(__Instance, pBuf, nSize);
        }

        public uint MS1
        {
            get
            {
                return ((__Internal*)__Instance)->m_s1;
            }

            set
            {
                ((__Internal*)__Instance)->m_s1 = value;
            }
        }

        public uint MS2
        {
            get
            {
                return ((__Internal*)__Instance)->m_s2;
            }

            set
            {
                ((__Internal*)__Instance)->m_s2 = value;
            }
        }

        public uint MS3
        {
            get
            {
                return ((__Internal*)__Instance)->m_s3;
            }

            set
            {
                ((__Internal*)__Instance)->m_s3 = value;
            }
        }

        public uint MS4
        {
            get
            {
                return ((__Internal*)__Instance)->m_s4;
            }

            set
            {
                ((__Internal*)__Instance)->m_s4 = value;
            }
        }

        public uint MMask1
        {
            get
            {
                return ((__Internal*)__Instance)->m_mask1;
            }

            set
            {
                ((__Internal*)__Instance)->m_mask1 = value;
            }
        }

        public uint MMask2
        {
            get
            {
                return ((__Internal*)__Instance)->m_mask2;
            }

            set
            {
                ((__Internal*)__Instance)->m_mask2 = value;
            }
        }

        public uint MMask3
        {
            get
            {
                return ((__Internal*)__Instance)->m_mask3;
            }

            set
            {
                ((__Internal*)__Instance)->m_mask3 = value;
            }
        }

        public uint MMask4
        {
            get
            {
                return ((__Internal*)__Instance)->m_mask4;
            }

            set
            {
                ((__Internal*)__Instance)->m_mask4 = value;
            }
        }

        public int MShft1
        {
            get
            {
                return ((__Internal*)__Instance)->m_shft1;
            }

            set
            {
                ((__Internal*)__Instance)->m_shft1 = value;
            }
        }

        public int MShft2
        {
            get
            {
                return ((__Internal*)__Instance)->m_shft2;
            }

            set
            {
                ((__Internal*)__Instance)->m_shft2 = value;
            }
        }

        public int MShft3
        {
            get
            {
                return ((__Internal*)__Instance)->m_shft3;
            }

            set
            {
                ((__Internal*)__Instance)->m_shft3 = value;
            }
        }

        public int MShft4
        {
            get
            {
                return ((__Internal*)__Instance)->m_shft4;
            }

            set
            {
                ((__Internal*)__Instance)->m_shft4 = value;
            }
        }

        public int MK1
        {
            get
            {
                return ((__Internal*)__Instance)->m_k1;
            }

            set
            {
                ((__Internal*)__Instance)->m_k1 = value;
            }
        }

        public int MK2
        {
            get
            {
                return ((__Internal*)__Instance)->m_k2;
            }

            set
            {
                ((__Internal*)__Instance)->m_k2 = value;
            }
        }

        public int MK3
        {
            get
            {
                return ((__Internal*)__Instance)->m_k3;
            }

            set
            {
                ((__Internal*)__Instance)->m_k3 = value;
            }
        }

        public int MK4
        {
            get
            {
                return ((__Internal*)__Instance)->m_k4;
            }

            set
            {
                ((__Internal*)__Instance)->m_k4 = value;
            }
        }

        public int MQ1
        {
            get
            {
                return ((__Internal*)__Instance)->m_q1;
            }

            set
            {
                ((__Internal*)__Instance)->m_q1 = value;
            }
        }

        public int MQ2
        {
            get
            {
                return ((__Internal*)__Instance)->m_q2;
            }

            set
            {
                ((__Internal*)__Instance)->m_q2 = value;
            }
        }

        public int MQ3
        {
            get
            {
                return ((__Internal*)__Instance)->m_q3;
            }

            set
            {
                ((__Internal*)__Instance)->m_q3 = value;
            }
        }

        public int MQ4
        {
            get
            {
                return ((__Internal*)__Instance)->m_q4;
            }

            set
            {
                ((__Internal*)__Instance)->m_q4 = value;
            }
        }

        public int MP1
        {
            get
            {
                return ((__Internal*)__Instance)->m_p1;
            }

            set
            {
                ((__Internal*)__Instance)->m_p1 = value;
            }
        }

        public int MP2
        {
            get
            {
                return ((__Internal*)__Instance)->m_p2;
            }

            set
            {
                ((__Internal*)__Instance)->m_p2 = value;
            }
        }

        public int MP3
        {
            get
            {
                return ((__Internal*)__Instance)->m_p3;
            }

            set
            {
                ((__Internal*)__Instance)->m_p3 = value;
            }
        }

        public int MP4
        {
            get
            {
                return ((__Internal*)__Instance)->m_p4;
            }

            set
            {
                ((__Internal*)__Instance)->m_p4 = value;
            }
        }

        public int MBSeeded
        {
            get
            {
                return ((__Internal*)__Instance)->m_bSeeded;
            }

            set
            {
                ((__Internal*)__Instance)->m_bSeeded = value;
            }
        }

        public byte* MPBuffer
        {
            get
            {
                return (byte*) ((__Internal*)__Instance)->m_pBuffer;
            }

            set
            {
                ((__Internal*)__Instance)->m_pBuffer = (__IntPtr) value;
            }
        }

        public ushort MPBufIndex
        {
            get
            {
                return ((__Internal*)__Instance)->m_pBufIndex;
            }

            set
            {
                ((__Internal*)__Instance)->m_pBufIndex = value;
            }
        }

        public ulong MNEvent1
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEvent1;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEvent1 = value;
            }
        }

        public ulong MNEvent2
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEvent2;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEvent2 = value;
            }
        }

        public ulong MNEvent3
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEvent3;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEvent3 = value;
            }
        }

        public ulong MNEvent4
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEvent4;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEvent4 = value;
            }
        }

        public uint MNEvent5
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEvent5;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEvent5 = value;
            }
        }

        public uint Rand
        {
            get
            {
                var __ret = __Internal.Rand(__Instance);
                return __ret;
            }
        }
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
