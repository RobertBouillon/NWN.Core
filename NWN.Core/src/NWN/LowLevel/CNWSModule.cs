// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    public unsafe partial class NWPLAYERCHARACTERLISTITEM
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM>();

        protected bool __ownsNativeInstance;

        internal static NWPLAYERCHARACTERLISTITEM __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new NWPLAYERCHARACTERLISTITEM(native.ToPointer(), skipVTables);
        }

        internal static NWPLAYERCHARACTERLISTITEM __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (NWPLAYERCHARACTERLISTITEM)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static NWPLAYERCHARACTERLISTITEM __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new NWPLAYERCHARACTERLISTITEM(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private NWPLAYERCHARACTERLISTITEM(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected NWPLAYERCHARACTERLISTITEM(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class CNWSModule : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 1128)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal __IntPtr vptr_CResHelper;

            [FieldOffset(8)]
            internal int m_bAutoRequest;

            [FieldOffset(16)]
            internal __IntPtr m_pRes;

            [FieldOffset(24)]
            internal global::NWN.LowLevel.CResRef.__Internal m_cResRef;

            [FieldOffset(56)]
            internal __IntPtr vptr_CGameObject;

            [FieldOffset(64)]
            internal uint m_idSelf;

            [FieldOffset(68)]
            internal byte m_nObjectType;

            [FieldOffset(72)]
            internal __IntPtr m_pNwnxData;

            [FieldOffset(80)]
            internal global::NWN.LowLevel.CExoLinkedList.__Internal m_lstModuleExpansion;

            [FieldOffset(88)]
            internal global::NWN.LowLevel.CExoLinkedList.__Internal m_lstModuleCutScene;

            [FieldOffset(96)]
            internal global::NWN.LowLevel.CExoLinkedList.__Internal m_lstModuleArea;

            [FieldOffset(104)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_lstModuleAreaID;

            [FieldOffset(120)]
            internal int m_nLastAreaAIUpdatePos;

            [FieldOffset(128)]
            internal global::NWN.LowLevel.CExoLinkedList.__Internal m_lstPlayerInfo;

            [FieldOffset(136)]
            internal global::NWN.LowLevel.CExoLinkedList.__Internal m_lstTURDList;

            [FieldOffset(144)]
            internal global::NWN.LowLevel.CExoLocString.__Internal m_lsModuleDescription;

            [FieldOffset(160)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sModuleAltTLKFile;

            [FieldOffset(176)]
            internal global::NWN.LowLevel.NWSyncAdvertisement.__Internal m_nwsyncData;

            [FieldOffset(232)]
            internal int m_bNWSyncPublishHaks;

            [FieldOffset(240)]
            internal __IntPtr m_pModuleHeader;

            [FieldOffset(248)]
            internal __IntPtr m_pModuleEntryInfo;

            [FieldOffset(256)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sModuleResourceName;

            [FieldOffset(272)]
            internal int m_nSourceType;

            [FieldOffset(280)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sDDResourceName;

            [FieldOffset(296)]
            internal int m_bIsDDModule;

            [FieldOffset(300)]
            internal int m_bIsDDDemoModule;

            [FieldOffset(304)]
            internal int m_bIsDDModuleLoaded;

            [FieldOffset(312)]
            internal global::NWN.LowLevel.CExoLocString.__Internal m_lsModuleName;

            [FieldOffset(328)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_pHakFiles;

            [FieldOffset(344)]
            internal global::NWN.LowLevel.CResRef.__Internal m_cStartMovie;

            [FieldOffset(376)]
            internal global::NWN.LowLevel.CNWSScriptVarTable.__Internal m_ScriptVars;

            [FieldOffset(440)]
            internal fixed byte m_sScripts[304];

            [FieldOffset(744)]
            internal uint m_nLastHeartbeatScriptCalendarDay;

            [FieldOffset(748)]
            internal uint m_nLastHeartbeatScriptTimeOfDay;

            [FieldOffset(752)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_aTagLookupTable;

            [FieldOffset(768)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_pInvisibleCreaturesList;

            [FieldOffset(784)]
            internal int m_nCustomScriptEventId;

            [FieldOffset(788)]
            internal uint m_oidLastEnter;

            [FieldOffset(792)]
            internal uint m_oidLastExit;

            [FieldOffset(796)]
            internal uint m_oidLastItemAcquired;

            [FieldOffset(800)]
            internal uint m_oidLastItemAcquiredFrom;

            [FieldOffset(804)]
            internal uint m_oidLastItemAcquiredBy;

            [FieldOffset(808)]
            internal uint m_oidLastItemLost;

            [FieldOffset(812)]
            internal uint m_oidLastItemLoser;

            [FieldOffset(816)]
            internal int m_nLastItemAcquiredSize;

            [FieldOffset(820)]
            internal int m_nLastItemLostSize;

            [FieldOffset(824)]
            internal uint m_oidLastItemEquipped;

            [FieldOffset(828)]
            internal uint m_oidLastItemEquippedBy;

            [FieldOffset(832)]
            internal uint m_oidLastItemUnequipped;

            [FieldOffset(836)]
            internal uint m_oidLastItemUnequippedBy;

            [FieldOffset(840)]
            internal uint m_oidLastRested;

            [FieldOffset(844)]
            internal byte m_nLastRestEventType;

            [FieldOffset(848)]
            internal uint m_oidLastPlayerDied;

            [FieldOffset(852)]
            internal uint m_oidLastPlayerDying;

            [FieldOffset(856)]
            internal uint m_oidLastRespawnButtonPresser;

            [FieldOffset(860)]
            internal uint m_oidLastItemActivated;

            [FieldOffset(864)]
            internal uint m_oidLastItemActivator;

            [FieldOffset(868)]
            internal uint m_oidLastItemActivatedArea;

            [FieldOffset(872)]
            internal uint m_oidLastItemActivatedTarget;

            [FieldOffset(876)]
            internal global::NWN.LowLevel.Vector.__Internal m_vLastItemActivatedPosition;

            [FieldOffset(888)]
            internal uint m_oidLastPCLevellingUp;

            [FieldOffset(892)]
            internal uint m_oidLastPCCancelCutscene;

            [FieldOffset(896)]
            internal byte m_nMinutesPerHour;

            [FieldOffset(897)]
            internal byte m_nDawnHour;

            [FieldOffset(898)]
            internal byte m_nDuskHour;

            [FieldOffset(899)]
            internal byte m_nStartMonth;

            [FieldOffset(900)]
            internal byte m_nStartDay;

            [FieldOffset(901)]
            internal byte m_nStartHour;

            [FieldOffset(902)]
            internal byte m_nXPScale;

            [FieldOffset(904)]
            internal uint m_nCurrentYear;

            [FieldOffset(908)]
            internal uint m_nCurrentMonth;

            [FieldOffset(912)]
            internal uint m_nCurrentDay;

            [FieldOffset(916)]
            internal uint m_nCurrentHour;

            [FieldOffset(920)]
            internal uint m_nTimeIntoTransition;

            [FieldOffset(924)]
            internal byte m_nTimeOfDayState;

            [FieldOffset(928)]
            internal uint m_nLastUpdateCalendarDay;

            [FieldOffset(932)]
            internal uint m_nLastUpdateTimeOfDay;

            [FieldOffset(936)]
            internal int m_bIsSaveGame;

            [FieldOffset(944)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_pWorldJournal;

            [FieldOffset(960)]
            internal int m_bModuleLoadFinished;

            [FieldOffset(964)]
            internal int m_nMaxHenchmen;

            [FieldOffset(968)]
            internal global::NWN.LowLevel.CExoArrayList.__Internal m_aGameObjectsLimbo;

            [FieldOffset(984)]
            internal __IntPtr m_pOutFile;

            [FieldOffset(992)]
            internal __IntPtr m_pStructIFO;

            [FieldOffset(1000)]
            internal __IntPtr m_pResIFO;

            [FieldOffset(1008)]
            internal __IntPtr m_apPlayers;

            [FieldOffset(1016)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sTag;

            [FieldOffset(1032)]
            internal int m_bIsNWMFile;

            [FieldOffset(1040)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sNWMResName;

            [FieldOffset(1056)]
            internal int m_nResourceCount;

            [FieldOffset(1060)]
            internal byte m_nPlayerPathfindRule;

            [FieldOffset(1061)]
            internal byte m_nEnableScriptDebugger;

            [FieldOffset(1064)]
            internal uint m_oidLastPlayerChatObjectId;

            [FieldOffset(1072)]
            internal global::NWN.LowLevel.CExoString.__Internal m_sLastPlayerChatMessage;

            [FieldOffset(1088)]
            internal byte m_nLastPlayerChatType;

            [FieldOffset(1092)]
            internal uint m_oidLastPlayerToSelectTarget;

            [FieldOffset(1096)]
            internal uint m_oidPlayerTargetObject;

            [FieldOffset(1100)]
            internal global::NWN.LowLevel.Vector.__Internal m_vPlayerTargetPosition;

            [FieldOffset(1112)]
            internal global::Std.SharedPtr.__Internal m_sqlite3;

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModuleC2E10CExoStringiii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctor(__IntPtr __instance, __IntPtr sModuleFilename, int bSetAutoRequest, int bIsSaveGame, int nSourceType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModuleC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule8DoUpdateEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DoUpdate(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule20ComputeInterAreaPathEP20CPathfindInformation", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int ComputeInterAreaPath(__IntPtr __instance, __IntPtr pcPathfindInformation);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule12EventHandlerEjjPvjj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void EventHandler(__IntPtr __instance, uint nEventId, uint nCallerObjectId, __IntPtr pScript, uint nCalendarDay, uint nTimeOfDay);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule30GenerateInterAreaDFSSuccessorsEiP20CPathfindInformationPPj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GenerateInterAreaDFSSuccessors(__IntPtr __instance, int level, __IntPtr pcPathfindInformation, uint** pAreaSuccessors);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule7GetAreaE7CResRef", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetArea(__IntPtr __instance, global::NWN.LowLevel.CResRef.__Internal refArea);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule7GetAreaEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetArea_1(__IntPtr __instance, uint oid);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule13GetAreaByNameER10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAreaByName(__IntPtr __instance, __IntPtr cAreaName);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule12GetAreaByTagER10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAreaByTag(__IntPtr __instance, __IntPtr sAreaTag);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule21ClearAreaVisitedFlagsEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ClearAreaVisitedFlags(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule12InterAreaDFSEiiP20CPathfindInformation", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int InterAreaDFS(__IntPtr __instance, int level, int depth, __IntPtr pcPathfindInformation);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule15LoadModuleStartE10CExoStringii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint LoadModuleStart(__IntPtr __instance, __IntPtr sModuleName, int bIsSaveGame, int nSourceType);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule20LoadModuleInProgressEii", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint LoadModuleInProgress(__IntPtr __instance, int nAreasLoaded, int nAreasToLoad);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule16LoadModuleFinishEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint LoadModuleFinish(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule30PackModuleResourcesIntoMessageEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void PackModuleResourcesIntoMessage(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule21PackModuleIntoMessageEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void PackModuleIntoMessage(__IntPtr __instance, uint nPlayerId);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule8PlotPathEP20CPathfindInformationj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint PlotPath(__IntPtr __instance, __IntPtr pcPathfindInformation, uint nTimeSlice);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule17PlotInterAreaPathEP20CPathfindInformationj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint PlotInterAreaPath(__IntPtr __instance, __IntPtr pcPathfindInformation, uint nTimeSlice);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule14PlotPathInAreaEP20CPathfindInformationj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint PlotPathInArea(__IntPtr __instance, __IntPtr pcPathfindInformation, uint nTimeSlice);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule15SaveModuleStartER10CExoStringS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveModuleStart(__IntPtr __instance, __IntPtr sFilePath, __IntPtr sFileName);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule20SaveModuleInProgressEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SaveModuleInProgress(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule16SaveModuleFinishER10CExoStringS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SaveModuleFinish(__IntPtr __instance, __IntPtr sFilePath, __IntPtr sFileName);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule26GetPlayerIndexInPlayerListEP10CNWSPlayer", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetPlayerIndexInPlayerList(__IntPtr __instance, __IntPtr pPlayer);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule34PackPlayerCharacterListIntoMessageEP10CNWSPlayerR13CExoArrayListIP25NWPLAYERCHARACTERLISTITEME", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void PackPlayerCharacterListIntoMessage(__IntPtr __instance, __IntPtr pPlayer, __IntPtr lstChars);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule16SetIntraAreaGoalEP20CPathfindInformation", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SetIntraAreaGoal(__IntPtr __instance, __IntPtr pcPathfindInformation);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule12UnloadModuleEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void UnloadModule(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule11GetWaypointERK10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetWaypoint(__IntPtr __instance, __IntPtr sTag);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule22AddObjectToLookupTableE10CExoStringj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AddObjectToLookupTable(__IntPtr __instance, __IntPtr sTag, uint oidObject);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule27RemoveObjectFromLookupTableE10CExoStringj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int RemoveObjectFromLookupTable(__IntPtr __instance, __IntPtr sTag, uint oidObject);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule22FindObjectByTagOrdinalERK10CExoStringj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint FindObjectByTagOrdinal(__IntPtr __instance, __IntPtr sTag, uint nNth);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule26FindObjectByTagTypeOrdinalERK10CExoStringij", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint FindObjectByTagTypeOrdinal(__IntPtr __instance, __IntPtr sTag, int nObjectType, uint nNth);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule7GetTimeEPjS0_S0_S0_PhS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetTime(__IntPtr __instance, uint* pYear, uint* pMonth, uint* pDay, uint* pHour, byte* pTimeOfDayState, uint* pTimeIntoTransition);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule10UpdateTimeEjjj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void UpdateTime(__IntPtr __instance, uint nCalendarDay, uint nTimeOfDay, uint nUpdateDifference);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule20AddWorldJournalEntryEi10CExoStringS0_jj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddWorldJournalEntry(__IntPtr __instance, int nIndex, __IntPtr szEntry, __IntPtr szTitle, uint nCalendarDay, uint nTimeOfDay);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule26AddWorldJournalEntryStrrefEjjjj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddWorldJournalEntryStrref(__IntPtr __instance, uint strrefEntry, uint strrefTitle, uint nCalendarDay, uint nTimeOfDay);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule23DeleteWorldJournalEntryEi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DeleteWorldJournalEntry(__IntPtr __instance, int nIndex);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule29DeleteWorldJournalEntryStrrefEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DeleteWorldJournalEntryStrref(__IntPtr __instance, uint strref);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule28DeleteWorldJournalAllEntriesEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DeleteWorldJournalAllEntries(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule13AddToTURDListEP14CNWSPlayerTURD", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddToTURDList(__IntPtr __instance, __IntPtr pTURD);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule18RemoveFromTURDListEP10CNWSPlayer", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveFromTURDList(__IntPtr __instance, __IntPtr pPlayer);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule12SaveTURDListEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveTURDList(__IntPtr __instance, __IntPtr pResIFO, __IntPtr pStructIFO);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule12LoadTURDListEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void LoadTURDList(__IntPtr __instance, __IntPtr pResIFO, __IntPtr pStructIFO);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule15AddTURDsToWorldEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddTURDsToWorld(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule21GetPlayerTURDFromListEP10CNWSPlayer", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPlayerTURDFromList(__IntPtr __instance, __IntPtr pPlayer);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule16AddObjectToLimboEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddObjectToLimbo(__IntPtr __instance, uint id);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule21RemoveObjectFromLimboEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RemoveObjectFromLimbo(__IntPtr __instance, uint id);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule15IsObjectInLimboEj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsObjectInLimbo(__IntPtr __instance, uint id);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule16CleanUpLimboListEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CleanUpLimboList(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule27DestroyModuleSqliteDatabaseEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void DestroyModuleSqliteDatabase(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule11PostProcessEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void PostProcess(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule18SaveModuleIFOStartEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SaveModuleIFOStart(__IntPtr __instance, __IntPtr pRes, __IntPtr pTopLevelStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule19SaveModuleIFOFinishEP7CResGFFP10CResStructP8CERFFileR10CExoStringR13CExoArrayListIjE", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SaveModuleIFOFinish(__IntPtr __instance, __IntPtr pRes, __IntPtr pTopLevelStruct, __IntPtr cSaveFile, __IntPtr sPath, __IntPtr aPlayers);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule18SaveLimboCreaturesEP7CResGFFP10CResStruct", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void SaveLimboCreatures(__IntPtr __instance, __IntPtr pRes, __IntPtr pTopLevelStruct);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule18LoadLimboCreaturesEP7CResGFFP10CResStructi", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int LoadLimboCreatures(__IntPtr __instance, __IntPtr pRes, __IntPtr pStruct, int bLoadStateInfo);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule18SaveSqliteDatabaseEP8CERFFile", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SaveSqliteDatabase(__IntPtr __instance, __IntPtr cSaveFile);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule18LoadSqliteDatabaseEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int LoadSqliteDatabase(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule13SaveModuleFACEP8CERFFile", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SaveModuleFAC(__IntPtr __instance, __IntPtr cSaveFile);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule10SaveStaticEP8CERFFile10CExoStringti", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SaveStatic(__IntPtr __instance, __IntPtr cSaveFile, global::NWN.LowLevel.CExoString.__Internal sFileType, ushort nResType, int bIsGFF);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule11SavePlayersEP7CResGFFP10CResStructR10CExoStringR13CExoArrayListIjE", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int SavePlayers(__IntPtr __instance, __IntPtr pResIFO, __IntPtr pStructIFO, __IntPtr sPath, __IntPtr aPlayers);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule19TimeStopSanityCheckEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TimeStopSanityCheck(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule13GetFullCipherE10CExoString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte* GetFullCipher(__IntPtr __instance, __IntPtr sModuleResourceName);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule22FindTagPositionInTableEPc", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int FindTagPositionInTable(__IntPtr __instance, sbyte* szTag);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule8AIUpdateEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int AIUpdate(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule21GetPrimaryPlayerIndexEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetPrimaryPlayerIndex(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule26GetWorldJournalIndexUniqueEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint GetWorldJournalIndexUnique(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN10CNWSModule18IsOfficialCampaignEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte IsOfficialCampaign(__IntPtr __instance);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CNWSModule> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CNWSModule>();

        protected bool __ownsNativeInstance;

        internal static CNWSModule __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new CNWSModule(native.ToPointer(), skipVTables);
        }

        internal static CNWSModule __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (CNWSModule)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static CNWSModule __GetInstance(__IntPtr native)
        {
            if (!NativeToManagedMap.TryGetValue(native, out var managed))
                throw new System.Exception("No managed instance was found");
            var result = (CNWSModule)managed;
            if (result.__ownsNativeInstance)
                result.SetupVTables();
            return result;
        }

        internal static CNWSModule __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new CNWSModule(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            global::NWN.LowLevel.CNWSModule.__Internal.cctor(ret, new __IntPtr(&native));
            return ret.ToPointer();
        }

        private CNWSModule(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CNWSModule(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
            if (!skipVTables)
                SetupVTables(true);
        }

        public CNWSModule(global::NWN.LowLevel.CExoString sModuleFilename, int bSetAutoRequest, int bIsSaveGame, int nSourceType)
            : this((void*) null)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWSModule.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            if (ReferenceEquals(sModuleFilename, null))
                throw new global::System.ArgumentNullException("sModuleFilename", "Cannot be null because it is passed by value.");
            var __arg0 = sModuleFilename.__Instance;
            __Internal.ctor(__Instance + 56, __arg0, bSetAutoRequest, bIsSaveGame, nSourceType);
            SetupVTables(GetType().FullName == "NWN.LowLevel.CNWSModule");
        }

        public CNWSModule(global::NWN.LowLevel.CNWSModule _0)
            : this((void*) null)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CNWSModule.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            if (ReferenceEquals(_0, null))
                throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = _0.__Instance;
            __Internal.cctor(__Instance + 56, __arg0);
            SetupVTables(GetType().FullName == "NWN.LowLevel.CNWSModule");
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::NWN.LowLevel.CNWSModule __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            ((global::NWN.LowLevel.CNWSModule.__Internal*) __Instance)->vptr_CResHelper = __VTables.Tables[0];
            if (disposing)
            {
                var ___dtorDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr>(0, 0);
                ___dtorDelegate(__Instance + 56);
            }
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public void DoUpdate()
        {
            __Internal.DoUpdate(__Instance + 56);
        }

        public int ComputeInterAreaPath(global::NWN.LowLevel.CPathfindInformation pcPathfindInformation)
        {
            var __arg0 = pcPathfindInformation is null ? __IntPtr.Zero : pcPathfindInformation.__Instance;
            var __ret = __Internal.ComputeInterAreaPath(__Instance + 56, __arg0);
            return __ret;
        }

        public void EventHandler(uint nEventId, uint nCallerObjectId, __IntPtr pScript, uint nCalendarDay, uint nTimeOfDay)
        {
            __Internal.EventHandler(__Instance + 56, nEventId, nCallerObjectId, pScript, nCalendarDay, nTimeOfDay);
        }

        public uint GenerateInterAreaDFSSuccessors(int level, global::NWN.LowLevel.CPathfindInformation pcPathfindInformation, uint** pAreaSuccessors)
        {
            var __arg1 = pcPathfindInformation is null ? __IntPtr.Zero : pcPathfindInformation.__Instance;
            var __ret = __Internal.GenerateInterAreaDFSSuccessors(__Instance + 56, level, __arg1, pAreaSuccessors);
            return __ret;
        }

        public global::NWN.LowLevel.CNWSArea GetArea(global::NWN.LowLevel.CResRef refArea)
        {
            if (ReferenceEquals(refArea, null))
                throw new global::System.ArgumentNullException("refArea", "Cannot be null because it is passed by value.");
            var __arg0 = refArea.__Instance;
            var __ret = __Internal.GetArea(__Instance + 56, *(global::NWN.LowLevel.CResRef.__Internal*) __arg0);
            var __result0 = global::NWN.LowLevel.CNWSArea.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public global::NWN.LowLevel.CNWSArea GetArea(uint oid)
        {
            var __ret = __Internal.GetArea_1(__Instance + 56, oid);
            var __result0 = global::NWN.LowLevel.CNWSArea.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public global::NWN.LowLevel.CNWSArea GetAreaByName(global::NWN.LowLevel.CExoString cAreaName)
        {
            if (ReferenceEquals(cAreaName, null))
                throw new global::System.ArgumentNullException("cAreaName", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = cAreaName.__Instance;
            var __ret = __Internal.GetAreaByName(__Instance + 56, __arg0);
            var __result0 = global::NWN.LowLevel.CNWSArea.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public global::NWN.LowLevel.CNWSArea GetAreaByTag(global::NWN.LowLevel.CExoString sAreaTag)
        {
            if (ReferenceEquals(sAreaTag, null))
                throw new global::System.ArgumentNullException("sAreaTag", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sAreaTag.__Instance;
            var __ret = __Internal.GetAreaByTag(__Instance + 56, __arg0);
            var __result0 = global::NWN.LowLevel.CNWSArea.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public void ClearAreaVisitedFlags()
        {
            __Internal.ClearAreaVisitedFlags(__Instance + 56);
        }

        public int InterAreaDFS(int level, int depth, global::NWN.LowLevel.CPathfindInformation pcPathfindInformation)
        {
            var __arg2 = pcPathfindInformation is null ? __IntPtr.Zero : pcPathfindInformation.__Instance;
            var __ret = __Internal.InterAreaDFS(__Instance + 56, level, depth, __arg2);
            return __ret;
        }

        public uint LoadModuleStart(global::NWN.LowLevel.CExoString sModuleName, int bIsSaveGame, int nSourceType)
        {
            if (ReferenceEquals(sModuleName, null))
                throw new global::System.ArgumentNullException("sModuleName", "Cannot be null because it is passed by value.");
            var __arg0 = sModuleName.__Instance;
            var __ret = __Internal.LoadModuleStart(__Instance + 56, __arg0, bIsSaveGame, nSourceType);
            return __ret;
        }

        public uint LoadModuleInProgress(int nAreasLoaded, int nAreasToLoad)
        {
            var __ret = __Internal.LoadModuleInProgress(__Instance + 56, nAreasLoaded, nAreasToLoad);
            return __ret;
        }

        public uint LoadModuleFinish()
        {
            var __ret = __Internal.LoadModuleFinish(__Instance + 56);
            return __ret;
        }

        public void PackModuleResourcesIntoMessage()
        {
            __Internal.PackModuleResourcesIntoMessage(__Instance + 56);
        }

        public void PackModuleIntoMessage(uint nPlayerId)
        {
            __Internal.PackModuleIntoMessage(__Instance + 56, nPlayerId);
        }

        public uint PlotPath(global::NWN.LowLevel.CPathfindInformation pcPathfindInformation, uint nTimeSlice)
        {
            var __arg0 = pcPathfindInformation is null ? __IntPtr.Zero : pcPathfindInformation.__Instance;
            var __ret = __Internal.PlotPath(__Instance + 56, __arg0, nTimeSlice);
            return __ret;
        }

        public uint PlotInterAreaPath(global::NWN.LowLevel.CPathfindInformation pcPathfindInformation, uint nTimeSlice)
        {
            var __arg0 = pcPathfindInformation is null ? __IntPtr.Zero : pcPathfindInformation.__Instance;
            var __ret = __Internal.PlotInterAreaPath(__Instance + 56, __arg0, nTimeSlice);
            return __ret;
        }

        public uint PlotPathInArea(global::NWN.LowLevel.CPathfindInformation pcPathfindInformation, uint nTimeSlice)
        {
            var __arg0 = pcPathfindInformation is null ? __IntPtr.Zero : pcPathfindInformation.__Instance;
            var __ret = __Internal.PlotPathInArea(__Instance + 56, __arg0, nTimeSlice);
            return __ret;
        }

        public void SaveModuleStart(global::NWN.LowLevel.CExoString sFilePath, global::NWN.LowLevel.CExoString sFileName)
        {
            if (ReferenceEquals(sFilePath, null))
                throw new global::System.ArgumentNullException("sFilePath", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sFilePath.__Instance;
            if (ReferenceEquals(sFileName, null))
                throw new global::System.ArgumentNullException("sFileName", "Cannot be null because it is a C++ reference (&).");
            var __arg1 = sFileName.__Instance;
            __Internal.SaveModuleStart(__Instance + 56, __arg0, __arg1);
        }

        public int SaveModuleInProgress()
        {
            var __ret = __Internal.SaveModuleInProgress(__Instance + 56);
            return __ret;
        }

        public int SaveModuleFinish(global::NWN.LowLevel.CExoString sFilePath, global::NWN.LowLevel.CExoString sFileName)
        {
            if (ReferenceEquals(sFilePath, null))
                throw new global::System.ArgumentNullException("sFilePath", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sFilePath.__Instance;
            if (ReferenceEquals(sFileName, null))
                throw new global::System.ArgumentNullException("sFileName", "Cannot be null because it is a C++ reference (&).");
            var __arg1 = sFileName.__Instance;
            var __ret = __Internal.SaveModuleFinish(__Instance + 56, __arg0, __arg1);
            return __ret;
        }

        public uint GetPlayerIndexInPlayerList(global::NWN.LowLevel.CNWSPlayer pPlayer)
        {
            var __arg0 = pPlayer is null ? __IntPtr.Zero : pPlayer.__Instance;
            var __ret = __Internal.GetPlayerIndexInPlayerList(__Instance + 56, __arg0);
            return __ret;
        }

        public void PackPlayerCharacterListIntoMessage(global::NWN.LowLevel.CNWSPlayer pPlayer, global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.NWPLAYERCHARACTERLISTITEM> lstChars)
        {
            var __arg0 = pPlayer is null ? __IntPtr.Zero : pPlayer.__Instance;
            if (ReferenceEquals(lstChars, null))
                throw new global::System.ArgumentNullException("lstChars", "Cannot be null because it is a C++ reference (&).");
            var __arg1 = lstChars.__Instance;
            __Internal.PackPlayerCharacterListIntoMessage(__Instance + 56, __arg0, __arg1);
        }

        public void SetIntraAreaGoal(global::NWN.LowLevel.CPathfindInformation pcPathfindInformation)
        {
            var __arg0 = pcPathfindInformation is null ? __IntPtr.Zero : pcPathfindInformation.__Instance;
            __Internal.SetIntraAreaGoal(__Instance + 56, __arg0);
        }

        public void UnloadModule()
        {
            __Internal.UnloadModule(__Instance + 56);
        }

        public uint GetWaypoint(global::NWN.LowLevel.CExoString sTag)
        {
            if (ReferenceEquals(sTag, null))
                throw new global::System.ArgumentNullException("sTag", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sTag.__Instance;
            var __ret = __Internal.GetWaypoint(__Instance + 56, __arg0);
            return __ret;
        }

        public int AddObjectToLookupTable(global::NWN.LowLevel.CExoString sTag, uint oidObject)
        {
            if (ReferenceEquals(sTag, null))
                throw new global::System.ArgumentNullException("sTag", "Cannot be null because it is passed by value.");
            var __arg0 = sTag.__Instance;
            var __ret = __Internal.AddObjectToLookupTable(__Instance + 56, __arg0, oidObject);
            return __ret;
        }

        public int RemoveObjectFromLookupTable(global::NWN.LowLevel.CExoString sTag, uint oidObject)
        {
            if (ReferenceEquals(sTag, null))
                throw new global::System.ArgumentNullException("sTag", "Cannot be null because it is passed by value.");
            var __arg0 = sTag.__Instance;
            var __ret = __Internal.RemoveObjectFromLookupTable(__Instance + 56, __arg0, oidObject);
            return __ret;
        }

        public uint FindObjectByTagOrdinal(global::NWN.LowLevel.CExoString sTag, uint nNth)
        {
            if (ReferenceEquals(sTag, null))
                throw new global::System.ArgumentNullException("sTag", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sTag.__Instance;
            var __ret = __Internal.FindObjectByTagOrdinal(__Instance + 56, __arg0, nNth);
            return __ret;
        }

        public uint FindObjectByTagTypeOrdinal(global::NWN.LowLevel.CExoString sTag, int nObjectType, uint nNth)
        {
            if (ReferenceEquals(sTag, null))
                throw new global::System.ArgumentNullException("sTag", "Cannot be null because it is a C++ reference (&).");
            var __arg0 = sTag.__Instance;
            var __ret = __Internal.FindObjectByTagTypeOrdinal(__Instance + 56, __arg0, nObjectType, nNth);
            return __ret;
        }

        public void GetTime(ref uint pYear, ref uint pMonth, ref uint pDay, ref uint pHour, byte* pTimeOfDayState, ref uint pTimeIntoTransition)
        {
            fixed (uint* __pYear0 = &pYear)
            {
                var __arg0 = __pYear0;
                fixed (uint* __pMonth1 = &pMonth)
                {
                    var __arg1 = __pMonth1;
                    fixed (uint* __pDay2 = &pDay)
                    {
                        var __arg2 = __pDay2;
                        fixed (uint* __pHour3 = &pHour)
                        {
                            var __arg3 = __pHour3;
                            fixed (uint* __pTimeIntoTransition5 = &pTimeIntoTransition)
                            {
                                var __arg5 = __pTimeIntoTransition5;
                                __Internal.GetTime(__Instance + 56, __arg0, __arg1, __arg2, __arg3, pTimeOfDayState, __arg5);
                            }
                        }
                    }
                }
            }
        }

        public void UpdateTime(uint nCalendarDay, uint nTimeOfDay, uint nUpdateDifference)
        {
            __Internal.UpdateTime(__Instance + 56, nCalendarDay, nTimeOfDay, nUpdateDifference);
        }

        public void AddWorldJournalEntry(int nIndex, global::NWN.LowLevel.CExoString szEntry, global::NWN.LowLevel.CExoString szTitle, uint nCalendarDay, uint nTimeOfDay)
        {
            if (ReferenceEquals(szEntry, null))
                throw new global::System.ArgumentNullException("szEntry", "Cannot be null because it is passed by value.");
            var __arg1 = szEntry.__Instance;
            if (ReferenceEquals(szTitle, null))
                throw new global::System.ArgumentNullException("szTitle", "Cannot be null because it is passed by value.");
            var __arg2 = szTitle.__Instance;
            __Internal.AddWorldJournalEntry(__Instance + 56, nIndex, __arg1, __arg2, nCalendarDay, nTimeOfDay);
        }

        public void AddWorldJournalEntryStrref(uint strrefEntry, uint strrefTitle, uint nCalendarDay, uint nTimeOfDay)
        {
            __Internal.AddWorldJournalEntryStrref(__Instance + 56, strrefEntry, strrefTitle, nCalendarDay, nTimeOfDay);
        }

        public void DeleteWorldJournalEntry(int nIndex)
        {
            __Internal.DeleteWorldJournalEntry(__Instance + 56, nIndex);
        }

        public void DeleteWorldJournalEntryStrref(uint strref)
        {
            __Internal.DeleteWorldJournalEntryStrref(__Instance + 56, strref);
        }

        public void DeleteWorldJournalAllEntries()
        {
            __Internal.DeleteWorldJournalAllEntries(__Instance + 56);
        }

        public void AddToTURDList(global::NWN.LowLevel.CNWSPlayerTURD pTURD)
        {
            var __arg0 = pTURD is null ? __IntPtr.Zero : pTURD.__Instance;
            __Internal.AddToTURDList(__Instance + 56, __arg0);
        }

        public void RemoveFromTURDList(global::NWN.LowLevel.CNWSPlayer pPlayer)
        {
            var __arg0 = pPlayer is null ? __IntPtr.Zero : pPlayer.__Instance;
            __Internal.RemoveFromTURDList(__Instance + 56, __arg0);
        }

        public void SaveTURDList(global::NWN.LowLevel.CResGFF pResIFO, global::NWN.LowLevel.CResStruct pStructIFO)
        {
            var __arg0 = pResIFO is null ? __IntPtr.Zero : pResIFO.__Instance;
            var __arg1 = pStructIFO is null ? __IntPtr.Zero : pStructIFO.__Instance;
            __Internal.SaveTURDList(__Instance + 56, __arg0, __arg1);
        }

        public void LoadTURDList(global::NWN.LowLevel.CResGFF pResIFO, global::NWN.LowLevel.CResStruct pStructIFO)
        {
            var __arg0 = pResIFO is null ? __IntPtr.Zero : pResIFO.__Instance;
            var __arg1 = pStructIFO is null ? __IntPtr.Zero : pStructIFO.__Instance;
            __Internal.LoadTURDList(__Instance + 56, __arg0, __arg1);
        }

        public void AddTURDsToWorld()
        {
            __Internal.AddTURDsToWorld(__Instance + 56);
        }

        public global::NWN.LowLevel.CNWSPlayerTURD GetPlayerTURDFromList(global::NWN.LowLevel.CNWSPlayer pPlayer)
        {
            var __arg0 = pPlayer is null ? __IntPtr.Zero : pPlayer.__Instance;
            var __ret = __Internal.GetPlayerTURDFromList(__Instance + 56, __arg0);
            var __result0 = global::NWN.LowLevel.CNWSPlayerTURD.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public void AddObjectToLimbo(uint id)
        {
            __Internal.AddObjectToLimbo(__Instance + 56, id);
        }

        public void RemoveObjectFromLimbo(uint id)
        {
            __Internal.RemoveObjectFromLimbo(__Instance + 56, id);
        }

        public int IsObjectInLimbo(uint id)
        {
            var __ret = __Internal.IsObjectInLimbo(__Instance + 56, id);
            return __ret;
        }

        public void CleanUpLimboList()
        {
            __Internal.CleanUpLimboList(__Instance + 56);
        }

        public void DestroyModuleSqliteDatabase()
        {
            __Internal.DestroyModuleSqliteDatabase(__Instance + 56);
        }

        public void PostProcess()
        {
            __Internal.PostProcess(__Instance + 56);
        }

        public int SaveModuleIFOStart(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pTopLevelStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pTopLevelStruct is null ? __IntPtr.Zero : pTopLevelStruct.__Instance;
            var __ret = __Internal.SaveModuleIFOStart(__Instance + 56, __arg0, __arg1);
            return __ret;
        }

        public int SaveModuleIFOFinish(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pTopLevelStruct, global::NWN.LowLevel.CERFFile cSaveFile, global::NWN.LowLevel.CExoString sPath, global::NWN.LowLevel.CExoArrayList<uint> aPlayers)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pTopLevelStruct is null ? __IntPtr.Zero : pTopLevelStruct.__Instance;
            var __arg2 = cSaveFile is null ? __IntPtr.Zero : cSaveFile.__Instance;
            if (ReferenceEquals(sPath, null))
                throw new global::System.ArgumentNullException("sPath", "Cannot be null because it is a C++ reference (&).");
            var __arg3 = sPath.__Instance;
            if (ReferenceEquals(aPlayers, null))
                throw new global::System.ArgumentNullException("aPlayers", "Cannot be null because it is a C++ reference (&).");
            var __arg4 = aPlayers.__Instance;
            var __ret = __Internal.SaveModuleIFOFinish(__Instance + 56, __arg0, __arg1, __arg2, __arg3, __arg4);
            return __ret;
        }

        public void SaveLimboCreatures(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pTopLevelStruct)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pTopLevelStruct is null ? __IntPtr.Zero : pTopLevelStruct.__Instance;
            __Internal.SaveLimboCreatures(__Instance + 56, __arg0, __arg1);
        }

        public int LoadLimboCreatures(global::NWN.LowLevel.CResGFF pRes, global::NWN.LowLevel.CResStruct pStruct, int bLoadStateInfo)
        {
            var __arg0 = pRes is null ? __IntPtr.Zero : pRes.__Instance;
            var __arg1 = pStruct is null ? __IntPtr.Zero : pStruct.__Instance;
            var __ret = __Internal.LoadLimboCreatures(__Instance + 56, __arg0, __arg1, bLoadStateInfo);
            return __ret;
        }

        public int SaveSqliteDatabase(global::NWN.LowLevel.CERFFile cSaveFile)
        {
            var __arg0 = cSaveFile is null ? __IntPtr.Zero : cSaveFile.__Instance;
            var __ret = __Internal.SaveSqliteDatabase(__Instance + 56, __arg0);
            return __ret;
        }

        public int LoadSqliteDatabase()
        {
            var __ret = __Internal.LoadSqliteDatabase(__Instance + 56);
            return __ret;
        }

        public int SaveModuleFAC(global::NWN.LowLevel.CERFFile cSaveFile)
        {
            var __arg0 = cSaveFile is null ? __IntPtr.Zero : cSaveFile.__Instance;
            var __ret = __Internal.SaveModuleFAC(__Instance + 56, __arg0);
            return __ret;
        }

        public int SaveStatic(global::NWN.LowLevel.CERFFile cSaveFile, global::NWN.LowLevel.CExoString sFileType, ushort nResType, int bIsGFF)
        {
            var __arg0 = cSaveFile is null ? __IntPtr.Zero : cSaveFile.__Instance;
            if (ReferenceEquals(sFileType, null))
                throw new global::System.ArgumentNullException("sFileType", "Cannot be null because it is passed by value.");
            var __arg1 = sFileType.__Instance;
            var __ret = __Internal.SaveStatic(__Instance + 56, __arg0, *(global::NWN.LowLevel.CExoString.__Internal*) __arg1, nResType, bIsGFF);
            return __ret;
        }

        public int SavePlayers(global::NWN.LowLevel.CResGFF pResIFO, global::NWN.LowLevel.CResStruct pStructIFO, global::NWN.LowLevel.CExoString sPath, global::NWN.LowLevel.CExoArrayList<uint> aPlayers)
        {
            var __arg0 = pResIFO is null ? __IntPtr.Zero : pResIFO.__Instance;
            var __arg1 = pStructIFO is null ? __IntPtr.Zero : pStructIFO.__Instance;
            if (ReferenceEquals(sPath, null))
                throw new global::System.ArgumentNullException("sPath", "Cannot be null because it is a C++ reference (&).");
            var __arg2 = sPath.__Instance;
            if (ReferenceEquals(aPlayers, null))
                throw new global::System.ArgumentNullException("aPlayers", "Cannot be null because it is a C++ reference (&).");
            var __arg3 = aPlayers.__Instance;
            var __ret = __Internal.SavePlayers(__Instance + 56, __arg0, __arg1, __arg2, __arg3);
            return __ret;
        }

        public void TimeStopSanityCheck()
        {
            __Internal.TimeStopSanityCheck(__Instance + 56);
        }

        public byte* GetFullCipher(global::NWN.LowLevel.CExoString sModuleResourceName)
        {
            if (ReferenceEquals(sModuleResourceName, null))
                throw new global::System.ArgumentNullException("sModuleResourceName", "Cannot be null because it is passed by value.");
            var __arg0 = sModuleResourceName.__Instance;
            var __ret = __Internal.GetFullCipher(__Instance + 56, __arg0);
            return __ret;
        }

        public int FindTagPositionInTable(sbyte* szTag)
        {
            var __ret = __Internal.FindTagPositionInTable(__Instance + 56, szTag);
            return __ret;
        }

        public virtual void SetId(uint oidNew)
        {
            var ___SetIdDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_uint>(0, 2);
            ___SetIdDelegate(__Instance + 56, oidNew);
        }

        public virtual void ResetUpdateTimes(uint nCalendarDay, uint nTimeOfDay)
        {
            var ___ResetUpdateTimesDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Action___IntPtr_uint_uint>(0, 3);
            ___ResetUpdateTimesDelegate(__Instance + 56, nCalendarDay, nTimeOfDay);
        }

        public global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> MLstModuleExpansion
        {
            get
            {
                return global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstModuleExpansion));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstModuleExpansion = *(global::NWN.LowLevel.CExoLinkedList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> MLstModuleCutScene
        {
            get
            {
                return global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstModuleCutScene));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstModuleCutScene = *(global::NWN.LowLevel.CExoLinkedList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> MLstModuleArea
        {
            get
            {
                return global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstModuleArea));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstModuleArea = *(global::NWN.LowLevel.CExoLinkedList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<uint> MLstModuleAreaID
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<uint>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstModuleAreaID));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstModuleAreaID = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public int MNLastAreaAIUpdatePos
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastAreaAIUpdatePos;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastAreaAIUpdatePos = value;
            }
        }

        public global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> MLstPlayerInfo
        {
            get
            {
                return global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstPlayerInfo));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstPlayerInfo = *(global::NWN.LowLevel.CExoLinkedList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> MLstTURDList
        {
            get
            {
                return global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lstTURDList));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lstTURDList = *(global::NWN.LowLevel.CExoLinkedList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoLocString MLsModuleDescription
        {
            get
            {
                return global::NWN.LowLevel.CExoLocString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lsModuleDescription));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lsModuleDescription = *(global::NWN.LowLevel.CExoLocString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoString MSModuleAltTLKFile
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sModuleAltTLKFile));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sModuleAltTLKFile = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.NWSyncAdvertisement MNwsyncData
        {
            get
            {
                return global::NWN.LowLevel.NWSyncAdvertisement.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_nwsyncData));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_nwsyncData = *(global::NWN.LowLevel.NWSyncAdvertisement.__Internal*) value.__Instance;
            }
        }

        public int MBNWSyncPublishHaks
        {
            get
            {
                return ((__Internal*)__Instance)->m_bNWSyncPublishHaks;
            }

            set
            {
                ((__Internal*)__Instance)->m_bNWSyncPublishHaks = value;
            }
        }

        public global::NWN.LowLevel.NWMODULEHEADER MPModuleHeader
        {
            get
            {
                var __result0 = global::NWN.LowLevel.NWMODULEHEADER.__GetOrCreateInstance(((__Internal*)__Instance)->m_pModuleHeader, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pModuleHeader = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.NWMODULEENTRYINFO MPModuleEntryInfo
        {
            get
            {
                var __result0 = global::NWN.LowLevel.NWMODULEENTRYINFO.__GetOrCreateInstance(((__Internal*)__Instance)->m_pModuleEntryInfo, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pModuleEntryInfo = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoString MSModuleResourceName
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sModuleResourceName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sModuleResourceName = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public int MNSourceType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nSourceType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nSourceType = value;
            }
        }

        public global::NWN.LowLevel.CExoString MSDDResourceName
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sDDResourceName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sDDResourceName = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public int MBIsDDModule
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIsDDModule;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIsDDModule = value;
            }
        }

        public int MBIsDDDemoModule
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIsDDDemoModule;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIsDDDemoModule = value;
            }
        }

        public int MBIsDDModuleLoaded
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIsDDModuleLoaded;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIsDDModuleLoaded = value;
            }
        }

        public global::NWN.LowLevel.CExoLocString MLsModuleName
        {
            get
            {
                return global::NWN.LowLevel.CExoLocString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_lsModuleName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_lsModuleName = *(global::NWN.LowLevel.CExoLocString.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoString> MPHakFiles
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CExoString>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_pHakFiles));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_pHakFiles = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CResRef MCStartMovie
        {
            get
            {
                return global::NWN.LowLevel.CResRef.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_cStartMovie));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_cStartMovie = *(global::NWN.LowLevel.CResRef.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CNWSScriptVarTable MScriptVars
        {
            get
            {
                return global::NWN.LowLevel.CNWSScriptVarTable.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_ScriptVars));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_ScriptVars = *(global::NWN.LowLevel.CNWSScriptVarTable.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoString[] MSScripts
        {
            get
            {
                global::NWN.LowLevel.CExoString[] __value = null;
                if (((__Internal*)__Instance)->m_sScripts != null)
                {
                    __value = new global::NWN.LowLevel.CExoString[19];
                    for (int i = 0; i < 19; i++)
                        __value[i] = global::NWN.LowLevel.CExoString.__CreateInstance(*((global::NWN.LowLevel.CExoString.__Internal*)&(((__Internal*)__Instance)->m_sScripts[i * sizeof(global::NWN.LowLevel.CExoString.__Internal)])));
                }
                return __value;
            }

            set
            {
                if (value != null)
                {
                    if (value.Length != 19)
                        throw new ArgumentOutOfRangeException("value", "The dimensions of the provided array don't match the required size.");
                    for (int i = 0; i < 19; i++)
                        *(global::NWN.LowLevel.CExoString.__Internal*) &((__Internal*)__Instance)->m_sScripts[i * sizeof(global::NWN.LowLevel.CExoString.__Internal)] = *(global::NWN.LowLevel.CExoString.__Internal*)value[i].__Instance;
                }
            }
        }

        public uint MNLastHeartbeatScriptCalendarDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastHeartbeatScriptCalendarDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastHeartbeatScriptCalendarDay = value;
            }
        }

        public uint MNLastHeartbeatScriptTimeOfDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastHeartbeatScriptTimeOfDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastHeartbeatScriptTimeOfDay = value;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSTagNode> MATagLookupTable
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CNWSTagNode>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_aTagLookupTable));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_aTagLookupTable = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<uint> MPInvisibleCreaturesList
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<uint>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_pInvisibleCreaturesList));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_pInvisibleCreaturesList = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public int MNCustomScriptEventId
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCustomScriptEventId;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCustomScriptEventId = value;
            }
        }

        public uint MOidLastEnter
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastEnter;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastEnter = value;
            }
        }

        public uint MOidLastExit
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastExit;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastExit = value;
            }
        }

        public uint MOidLastItemAcquired
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemAcquired;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemAcquired = value;
            }
        }

        public uint MOidLastItemAcquiredFrom
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemAcquiredFrom;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemAcquiredFrom = value;
            }
        }

        public uint MOidLastItemAcquiredBy
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemAcquiredBy;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemAcquiredBy = value;
            }
        }

        public uint MOidLastItemLost
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemLost;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemLost = value;
            }
        }

        public uint MOidLastItemLoser
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemLoser;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemLoser = value;
            }
        }

        public int MNLastItemAcquiredSize
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastItemAcquiredSize;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastItemAcquiredSize = value;
            }
        }

        public int MNLastItemLostSize
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastItemLostSize;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastItemLostSize = value;
            }
        }

        public uint MOidLastItemEquipped
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemEquipped;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemEquipped = value;
            }
        }

        public uint MOidLastItemEquippedBy
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemEquippedBy;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemEquippedBy = value;
            }
        }

        public uint MOidLastItemUnequipped
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemUnequipped;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemUnequipped = value;
            }
        }

        public uint MOidLastItemUnequippedBy
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemUnequippedBy;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemUnequippedBy = value;
            }
        }

        public uint MOidLastRested
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastRested;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastRested = value;
            }
        }

        public byte MNLastRestEventType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastRestEventType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastRestEventType = value;
            }
        }

        public uint MOidLastPlayerDied
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastPlayerDied;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastPlayerDied = value;
            }
        }

        public uint MOidLastPlayerDying
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastPlayerDying;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastPlayerDying = value;
            }
        }

        public uint MOidLastRespawnButtonPresser
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastRespawnButtonPresser;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastRespawnButtonPresser = value;
            }
        }

        public uint MOidLastItemActivated
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemActivated;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemActivated = value;
            }
        }

        public uint MOidLastItemActivator
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemActivator;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemActivator = value;
            }
        }

        public uint MOidLastItemActivatedArea
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemActivatedArea;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemActivatedArea = value;
            }
        }

        public uint MOidLastItemActivatedTarget
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastItemActivatedTarget;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastItemActivatedTarget = value;
            }
        }

        public global::NWN.LowLevel.Vector MVLastItemActivatedPosition
        {
            get
            {
                return global::NWN.LowLevel.Vector.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_vLastItemActivatedPosition));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_vLastItemActivatedPosition = *(global::NWN.LowLevel.Vector.__Internal*) value.__Instance;
            }
        }

        public uint MOidLastPCLevellingUp
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastPCLevellingUp;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastPCLevellingUp = value;
            }
        }

        public uint MOidLastPCCancelCutscene
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastPCCancelCutscene;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastPCCancelCutscene = value;
            }
        }

        public byte MNMinutesPerHour
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMinutesPerHour;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMinutesPerHour = value;
            }
        }

        public byte MNDawnHour
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDawnHour;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDawnHour = value;
            }
        }

        public byte MNDuskHour
        {
            get
            {
                return ((__Internal*)__Instance)->m_nDuskHour;
            }

            set
            {
                ((__Internal*)__Instance)->m_nDuskHour = value;
            }
        }

        public byte MNStartMonth
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStartMonth;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStartMonth = value;
            }
        }

        public byte MNStartDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStartDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStartDay = value;
            }
        }

        public byte MNStartHour
        {
            get
            {
                return ((__Internal*)__Instance)->m_nStartHour;
            }

            set
            {
                ((__Internal*)__Instance)->m_nStartHour = value;
            }
        }

        public byte MNXPScale
        {
            get
            {
                return ((__Internal*)__Instance)->m_nXPScale;
            }

            set
            {
                ((__Internal*)__Instance)->m_nXPScale = value;
            }
        }

        public uint MNCurrentYear
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCurrentYear;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCurrentYear = value;
            }
        }

        public uint MNCurrentMonth
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCurrentMonth;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCurrentMonth = value;
            }
        }

        public uint MNCurrentDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCurrentDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCurrentDay = value;
            }
        }

        public uint MNCurrentHour
        {
            get
            {
                return ((__Internal*)__Instance)->m_nCurrentHour;
            }

            set
            {
                ((__Internal*)__Instance)->m_nCurrentHour = value;
            }
        }

        public uint MNTimeIntoTransition
        {
            get
            {
                return ((__Internal*)__Instance)->m_nTimeIntoTransition;
            }

            set
            {
                ((__Internal*)__Instance)->m_nTimeIntoTransition = value;
            }
        }

        public byte MNTimeOfDayState
        {
            get
            {
                return ((__Internal*)__Instance)->m_nTimeOfDayState;
            }

            set
            {
                ((__Internal*)__Instance)->m_nTimeOfDayState = value;
            }
        }

        public uint MNLastUpdateCalendarDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastUpdateCalendarDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastUpdateCalendarDay = value;
            }
        }

        public uint MNLastUpdateTimeOfDay
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastUpdateTimeOfDay;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastUpdateTimeOfDay = value;
            }
        }

        public int MBIsSaveGame
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIsSaveGame;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIsSaveGame = value;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CWorldJournalEntry> MPWorldJournal
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<global::NWN.LowLevel.CWorldJournalEntry>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_pWorldJournal));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_pWorldJournal = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public int MBModuleLoadFinished
        {
            get
            {
                return ((__Internal*)__Instance)->m_bModuleLoadFinished;
            }

            set
            {
                ((__Internal*)__Instance)->m_bModuleLoadFinished = value;
            }
        }

        public int MNMaxHenchmen
        {
            get
            {
                return ((__Internal*)__Instance)->m_nMaxHenchmen;
            }

            set
            {
                ((__Internal*)__Instance)->m_nMaxHenchmen = value;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<uint> MAGameObjectsLimbo
        {
            get
            {
                return global::NWN.LowLevel.CExoArrayList<uint>.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_aGameObjectsLimbo));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_aGameObjectsLimbo = *(global::NWN.LowLevel.CExoArrayList.__Internal*) value.__Instance;
            }
        }

        public global::NWN.LowLevel.CERFFile MPOutFile
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CERFFile.__GetOrCreateInstance(((__Internal*)__Instance)->m_pOutFile, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pOutFile = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.CResStruct MPStructIFO
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CResStruct.__GetOrCreateInstance(((__Internal*)__Instance)->m_pStructIFO, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pStructIFO = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.CResGFF MPResIFO
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CResGFF.__GetOrCreateInstance(((__Internal*)__Instance)->m_pResIFO, true);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_pResIFO = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoArrayList<uint> MApPlayers
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CExoArrayList<uint>.__GetOrCreateInstance(((__Internal*)__Instance)->m_apPlayers, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->m_apPlayers = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public global::NWN.LowLevel.CExoString MSTag
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sTag));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sTag = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public int MBIsNWMFile
        {
            get
            {
                return ((__Internal*)__Instance)->m_bIsNWMFile;
            }

            set
            {
                ((__Internal*)__Instance)->m_bIsNWMFile = value;
            }
        }

        public global::NWN.LowLevel.CExoString MSNWMResName
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sNWMResName));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sNWMResName = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public int MNResourceCount
        {
            get
            {
                return ((__Internal*)__Instance)->m_nResourceCount;
            }

            set
            {
                ((__Internal*)__Instance)->m_nResourceCount = value;
            }
        }

        public byte MNPlayerPathfindRule
        {
            get
            {
                return ((__Internal*)__Instance)->m_nPlayerPathfindRule;
            }

            set
            {
                ((__Internal*)__Instance)->m_nPlayerPathfindRule = value;
            }
        }

        public byte MNEnableScriptDebugger
        {
            get
            {
                return ((__Internal*)__Instance)->m_nEnableScriptDebugger;
            }

            set
            {
                ((__Internal*)__Instance)->m_nEnableScriptDebugger = value;
            }
        }

        public uint MOidLastPlayerChatObjectId
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastPlayerChatObjectId;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastPlayerChatObjectId = value;
            }
        }

        public global::NWN.LowLevel.CExoString MSLastPlayerChatMessage
        {
            get
            {
                return global::NWN.LowLevel.CExoString.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_sLastPlayerChatMessage));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_sLastPlayerChatMessage = *(global::NWN.LowLevel.CExoString.__Internal*) value.__Instance;
            }
        }

        public byte MNLastPlayerChatType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nLastPlayerChatType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nLastPlayerChatType = value;
            }
        }

        public uint MOidLastPlayerToSelectTarget
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidLastPlayerToSelectTarget;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidLastPlayerToSelectTarget = value;
            }
        }

        public uint MOidPlayerTargetObject
        {
            get
            {
                return ((__Internal*)__Instance)->m_oidPlayerTargetObject;
            }

            set
            {
                ((__Internal*)__Instance)->m_oidPlayerTargetObject = value;
            }
        }

        public global::NWN.LowLevel.Vector MVPlayerTargetPosition
        {
            get
            {
                return global::NWN.LowLevel.Vector.__CreateInstance(new __IntPtr(&((__Internal*)__Instance)->m_vPlayerTargetPosition));
            }

            set
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                ((__Internal*)__Instance)->m_vPlayerTargetPosition = *(global::NWN.LowLevel.Vector.__Internal*) value.__Instance;
            }
        }

        public uint MIdSelf
        {
            get
            {
                return ((__Internal*)__Instance)->m_idSelf;
            }

            set
            {
                ((__Internal*)__Instance)->m_idSelf = value;
            }
        }

        public byte MNObjectType
        {
            get
            {
                return ((__Internal*)__Instance)->m_nObjectType;
            }

            set
            {
                ((__Internal*)__Instance)->m_nObjectType = value;
            }
        }

        public __IntPtr MPNwnxData
        {
            get
            {
                return ((__Internal*)__Instance)->m_pNwnxData;
            }

            set
            {
                ((__Internal*)__Instance)->m_pNwnxData = (__IntPtr) value;
            }
        }

        public __IntPtr __PointerToCGameObject
        {
            get
            {
                return __Instance + 56;
            }
        }

        public __IntPtr __PointerToCCallbackHandlerBase
        {
            get
            {
                return __Instance + 56;
            }
        }

        public virtual global::NWN.LowLevel.CNWSModule AsNWSModule
        {
            get
            {
                var ___AsNWSModuleDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 2);
                var __ret = ___AsNWSModuleDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSModule.__GetOrCreateInstance(__ret, true);
                return __result0;
            }
        }

        public int AIUpdate
        {
            get
            {
                var __ret = __Internal.AIUpdate(__Instance + 56);
                return __ret;
            }
        }

        public uint PrimaryPlayerIndex
        {
            get
            {
                var __ret = __Internal.GetPrimaryPlayerIndex(__Instance + 56);
                return __ret;
            }
        }

        public uint WorldJournalIndexUnique
        {
            get
            {
                var __ret = __Internal.GetWorldJournalIndexUnique(__Instance + 56);
                return __ret;
            }
        }

        public byte IsOfficialCampaign
        {
            get
            {
                var __ret = __Internal.IsOfficialCampaign(__Instance + 56);
                return __ret;
            }
        }

        public virtual global::NWN.LowLevel.CNWCObject AsNWCObject
        {
            get
            {
                var ___AsNWCObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 4);
                var __ret = ___AsNWCObjectDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSObject AsNWSObject
        {
            get
            {
                var ___AsNWSObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 5);
                var __ret = ___AsNWSObjectDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCDoor AsNWCDoor
        {
            get
            {
                var ___AsNWCDoorDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 6);
                var __ret = ___AsNWCDoorDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCDoor.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSDoor AsNWSDoor
        {
            get
            {
                var ___AsNWSDoorDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 7);
                var __ret = ___AsNWSDoorDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSDoor.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCModule AsNWCModule
        {
            get
            {
                var ___AsNWCModuleDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 8);
                var __ret = ___AsNWCModuleDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCModule.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCArea AsNWCArea
        {
            get
            {
                var ___AsNWCAreaDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 10);
                var __ret = ___AsNWCAreaDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCArea.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSArea AsNWSArea
        {
            get
            {
                var ___AsNWSAreaDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 11);
                var __ret = ___AsNWSAreaDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSArea.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCCreature AsNWCCreature
        {
            get
            {
                var ___AsNWCCreatureDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 12);
                var __ret = ___AsNWCCreatureDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCCreature.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSCreature AsNWSCreature
        {
            get
            {
                var ___AsNWSCreatureDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 13);
                var __ret = ___AsNWSCreatureDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSCreature.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCItem AsNWCItem
        {
            get
            {
                var ___AsNWCItemDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 14);
                var __ret = ___AsNWCItemDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCItem.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSItem AsNWSItem
        {
            get
            {
                var ___AsNWSItemDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 15);
                var __ret = ___AsNWSItemDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSItem.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCTrigger AsNWCTrigger
        {
            get
            {
                var ___AsNWCTriggerDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 16);
                var __ret = ___AsNWCTriggerDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCTrigger.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSTrigger AsNWSTrigger
        {
            get
            {
                var ___AsNWSTriggerDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 17);
                var __ret = ___AsNWSTriggerDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSTrigger.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCProjectile AsNWCProjectile
        {
            get
            {
                var ___AsNWCProjectileDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 18);
                var __ret = ___AsNWCProjectileDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCProjectile.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSPlayerTURD AsNWSPlayerTURD
        {
            get
            {
                var ___AsNWSPlayerTURDDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 19);
                var __ret = ___AsNWSPlayerTURDDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSPlayerTURD.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSPlaceable AsNWSPlaceable
        {
            get
            {
                var ___AsNWSPlaceableDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 20);
                var __ret = ___AsNWSPlaceableDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSPlaceable.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCPlaceable AsNWCPlaceable
        {
            get
            {
                var ___AsNWCPlaceableDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 21);
                var __ret = ___AsNWCPlaceableDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCPlaceable.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSAreaOfEffectObject AsNWSAreaOfEffectObject
        {
            get
            {
                var ___AsNWSAreaOfEffectObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 22);
                var __ret = ___AsNWSAreaOfEffectObjectDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSAreaOfEffectObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCAreaOfEffectObject AsNWCAreaOfEffectObject
        {
            get
            {
                var ___AsNWCAreaOfEffectObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 23);
                var __ret = ___AsNWCAreaOfEffectObjectDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCAreaOfEffectObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSWaypoint AsNWSWaypoint
        {
            get
            {
                var ___AsNWSWaypointDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 24);
                var __ret = ___AsNWSWaypointDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSWaypoint.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSEncounter AsNWSEncounter
        {
            get
            {
                var ___AsNWSEncounterDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 25);
                var __ret = ___AsNWSEncounterDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSEncounter.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCStore AsNWCStore
        {
            get
            {
                var ___AsNWCStoreDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 26);
                var __ret = ___AsNWCStoreDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCStore.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSStore AsNWSStore
        {
            get
            {
                var ___AsNWSStoreDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 27);
                var __ret = ___AsNWSStoreDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSStore.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWSSoundObject AsNWSSoundObject
        {
            get
            {
                var ___AsNWSSoundObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 28);
                var __ret = ___AsNWSSoundObjectDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWSSoundObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public virtual global::NWN.LowLevel.CNWCSoundObject AsNWCSoundObject
        {
            get
            {
                var ___AsNWCSoundObjectDelegate = __VTables.GetMethodDelegate<global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr>(0, 29);
                var __ret = ___AsNWCSoundObjectDelegate(__Instance + 56);
                var __result0 = global::NWN.LowLevel.CNWCSoundObject.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        #region Virtual table interop

        // ~CNWSModule()
        private static global::NWN.LowLevel.Delegates.Action___IntPtr _dtorDelegateInstance;

        private static void _dtorDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            __target.Dispose(true);
        }

        // CNWSModule * AsNWSModule()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSModuleDelegateInstance;

        private static __IntPtr _AsNWSModuleDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSModule;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // void SetId(OBJECT_ID oidNew)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_uint _SetIdDelegateInstance;

        private static void _SetIdDelegateHook(__IntPtr __instance, uint oidNew)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            __target.SetId(oidNew);
        }

        // void ResetUpdateTimes(uint32_t nCalendarDay, uint32_t nTimeOfDay)
        private static global::NWN.LowLevel.Delegates.Action___IntPtr_uint_uint _ResetUpdateTimesDelegateInstance;

        private static void _ResetUpdateTimesDelegateHook(__IntPtr __instance, uint nCalendarDay, uint nTimeOfDay)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            __target.ResetUpdateTimes(nCalendarDay, nTimeOfDay);
        }

        // CNWCObject * AsNWCObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCObjectDelegateInstance;

        private static __IntPtr _AsNWCObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCObject;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSObject * AsNWSObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSObjectDelegateInstance;

        private static __IntPtr _AsNWSObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSObject;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCDoor * AsNWCDoor()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCDoorDelegateInstance;

        private static __IntPtr _AsNWCDoorDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCDoor;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSDoor * AsNWSDoor()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSDoorDelegateInstance;

        private static __IntPtr _AsNWSDoorDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSDoor;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCModule * AsNWCModule()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCModuleDelegateInstance;

        private static __IntPtr _AsNWCModuleDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCModule;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCArea * AsNWCArea()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCAreaDelegateInstance;

        private static __IntPtr _AsNWCAreaDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCArea;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSArea * AsNWSArea()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSAreaDelegateInstance;

        private static __IntPtr _AsNWSAreaDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSArea;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCCreature * AsNWCCreature()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCCreatureDelegateInstance;

        private static __IntPtr _AsNWCCreatureDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCCreature;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSCreature * AsNWSCreature()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSCreatureDelegateInstance;

        private static __IntPtr _AsNWSCreatureDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSCreature;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCItem * AsNWCItem()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCItemDelegateInstance;

        private static __IntPtr _AsNWCItemDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCItem;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSItem * AsNWSItem()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSItemDelegateInstance;

        private static __IntPtr _AsNWSItemDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSItem;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCTrigger * AsNWCTrigger()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCTriggerDelegateInstance;

        private static __IntPtr _AsNWCTriggerDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCTrigger;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSTrigger * AsNWSTrigger()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSTriggerDelegateInstance;

        private static __IntPtr _AsNWSTriggerDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSTrigger;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCProjectile * AsNWCProjectile()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCProjectileDelegateInstance;

        private static __IntPtr _AsNWCProjectileDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCProjectile;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSPlayerTURD * AsNWSPlayerTURD()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSPlayerTURDDelegateInstance;

        private static __IntPtr _AsNWSPlayerTURDDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSPlayerTURD;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSPlaceable * AsNWSPlaceable()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSPlaceableDelegateInstance;

        private static __IntPtr _AsNWSPlaceableDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSPlaceable;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCPlaceable * AsNWCPlaceable()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCPlaceableDelegateInstance;

        private static __IntPtr _AsNWCPlaceableDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCPlaceable;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSAreaOfEffectObject * AsNWSAreaOfEffectObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSAreaOfEffectObjectDelegateInstance;

        private static __IntPtr _AsNWSAreaOfEffectObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSAreaOfEffectObject;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCAreaOfEffectObject * AsNWCAreaOfEffectObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCAreaOfEffectObjectDelegateInstance;

        private static __IntPtr _AsNWCAreaOfEffectObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCAreaOfEffectObject;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSWaypoint * AsNWSWaypoint()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSWaypointDelegateInstance;

        private static __IntPtr _AsNWSWaypointDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSWaypoint;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSEncounter * AsNWSEncounter()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSEncounterDelegateInstance;

        private static __IntPtr _AsNWSEncounterDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSEncounter;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCStore * AsNWCStore()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCStoreDelegateInstance;

        private static __IntPtr _AsNWCStoreDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCStore;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSStore * AsNWSStore()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSStoreDelegateInstance;

        private static __IntPtr _AsNWSStoreDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSStore;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWSSoundObject * AsNWSSoundObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWSSoundObjectDelegateInstance;

        private static __IntPtr _AsNWSSoundObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWSSoundObject;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        // CNWCSoundObject * AsNWCSoundObject()
        private static global::NWN.LowLevel.Delegates.Func___IntPtr___IntPtr _AsNWCSoundObjectDelegateInstance;

        private static __IntPtr _AsNWCSoundObjectDelegateHook(__IntPtr __instance)
        {
            var __target = global::NWN.LowLevel.CNWSModule.__GetInstance(__instance);
            var __ret = __target.AsNWCSoundObject;
            return __ret is null ? __IntPtr.Zero : __ret.__Instance;
        }

        internal static class VTableLoader
        {
            private static volatile bool initialized;
            private static readonly IntPtr*[] ManagedVTables = new IntPtr*[1];
            private static readonly IntPtr*[] ManagedVTablesDtorOnly = new IntPtr*[1];
            private static readonly IntPtr[] Thunks = new IntPtr[29];
            private static CppSharp.Runtime.VTables VTables;
            private static readonly global::System.Collections.Generic.List<CppSharp.Runtime.SafeUnmanagedMemoryHandle>
                SafeHandles = new global::System.Collections.Generic.List<CppSharp.Runtime.SafeUnmanagedMemoryHandle>();

            static VTableLoader()
            {
                _dtorDelegateInstance += _dtorDelegateHook;
                _AsNWSModuleDelegateInstance += _AsNWSModuleDelegateHook;
                _SetIdDelegateInstance += _SetIdDelegateHook;
                _ResetUpdateTimesDelegateInstance += _ResetUpdateTimesDelegateHook;
                _AsNWCObjectDelegateInstance += _AsNWCObjectDelegateHook;
                _AsNWSObjectDelegateInstance += _AsNWSObjectDelegateHook;
                _AsNWCDoorDelegateInstance += _AsNWCDoorDelegateHook;
                _AsNWSDoorDelegateInstance += _AsNWSDoorDelegateHook;
                _AsNWCModuleDelegateInstance += _AsNWCModuleDelegateHook;
                _AsNWCAreaDelegateInstance += _AsNWCAreaDelegateHook;
                _AsNWSAreaDelegateInstance += _AsNWSAreaDelegateHook;
                _AsNWCCreatureDelegateInstance += _AsNWCCreatureDelegateHook;
                _AsNWSCreatureDelegateInstance += _AsNWSCreatureDelegateHook;
                _AsNWCItemDelegateInstance += _AsNWCItemDelegateHook;
                _AsNWSItemDelegateInstance += _AsNWSItemDelegateHook;
                _AsNWCTriggerDelegateInstance += _AsNWCTriggerDelegateHook;
                _AsNWSTriggerDelegateInstance += _AsNWSTriggerDelegateHook;
                _AsNWCProjectileDelegateInstance += _AsNWCProjectileDelegateHook;
                _AsNWSPlayerTURDDelegateInstance += _AsNWSPlayerTURDDelegateHook;
                _AsNWSPlaceableDelegateInstance += _AsNWSPlaceableDelegateHook;
                _AsNWCPlaceableDelegateInstance += _AsNWCPlaceableDelegateHook;
                _AsNWSAreaOfEffectObjectDelegateInstance += _AsNWSAreaOfEffectObjectDelegateHook;
                _AsNWCAreaOfEffectObjectDelegateInstance += _AsNWCAreaOfEffectObjectDelegateHook;
                _AsNWSWaypointDelegateInstance += _AsNWSWaypointDelegateHook;
                _AsNWSEncounterDelegateInstance += _AsNWSEncounterDelegateHook;
                _AsNWCStoreDelegateInstance += _AsNWCStoreDelegateHook;
                _AsNWSStoreDelegateInstance += _AsNWSStoreDelegateHook;
                _AsNWSSoundObjectDelegateInstance += _AsNWSSoundObjectDelegateHook;
                _AsNWCSoundObjectDelegateInstance += _AsNWCSoundObjectDelegateHook;
                Thunks[0] = Marshal.GetFunctionPointerForDelegate(_dtorDelegateInstance);
                Thunks[1] = Marshal.GetFunctionPointerForDelegate(_AsNWSModuleDelegateInstance);
                Thunks[2] = Marshal.GetFunctionPointerForDelegate(_SetIdDelegateInstance);
                Thunks[3] = Marshal.GetFunctionPointerForDelegate(_ResetUpdateTimesDelegateInstance);
                Thunks[4] = Marshal.GetFunctionPointerForDelegate(_AsNWCObjectDelegateInstance);
                Thunks[5] = Marshal.GetFunctionPointerForDelegate(_AsNWSObjectDelegateInstance);
                Thunks[6] = Marshal.GetFunctionPointerForDelegate(_AsNWCDoorDelegateInstance);
                Thunks[7] = Marshal.GetFunctionPointerForDelegate(_AsNWSDoorDelegateInstance);
                Thunks[8] = Marshal.GetFunctionPointerForDelegate(_AsNWCModuleDelegateInstance);
                Thunks[9] = Marshal.GetFunctionPointerForDelegate(_AsNWCAreaDelegateInstance);
                Thunks[10] = Marshal.GetFunctionPointerForDelegate(_AsNWSAreaDelegateInstance);
                Thunks[11] = Marshal.GetFunctionPointerForDelegate(_AsNWCCreatureDelegateInstance);
                Thunks[12] = Marshal.GetFunctionPointerForDelegate(_AsNWSCreatureDelegateInstance);
                Thunks[13] = Marshal.GetFunctionPointerForDelegate(_AsNWCItemDelegateInstance);
                Thunks[14] = Marshal.GetFunctionPointerForDelegate(_AsNWSItemDelegateInstance);
                Thunks[15] = Marshal.GetFunctionPointerForDelegate(_AsNWCTriggerDelegateInstance);
                Thunks[16] = Marshal.GetFunctionPointerForDelegate(_AsNWSTriggerDelegateInstance);
                Thunks[17] = Marshal.GetFunctionPointerForDelegate(_AsNWCProjectileDelegateInstance);
                Thunks[18] = Marshal.GetFunctionPointerForDelegate(_AsNWSPlayerTURDDelegateInstance);
                Thunks[19] = Marshal.GetFunctionPointerForDelegate(_AsNWSPlaceableDelegateInstance);
                Thunks[20] = Marshal.GetFunctionPointerForDelegate(_AsNWCPlaceableDelegateInstance);
                Thunks[21] = Marshal.GetFunctionPointerForDelegate(_AsNWSAreaOfEffectObjectDelegateInstance);
                Thunks[22] = Marshal.GetFunctionPointerForDelegate(_AsNWCAreaOfEffectObjectDelegateInstance);
                Thunks[23] = Marshal.GetFunctionPointerForDelegate(_AsNWSWaypointDelegateInstance);
                Thunks[24] = Marshal.GetFunctionPointerForDelegate(_AsNWSEncounterDelegateInstance);
                Thunks[25] = Marshal.GetFunctionPointerForDelegate(_AsNWCStoreDelegateInstance);
                Thunks[26] = Marshal.GetFunctionPointerForDelegate(_AsNWSStoreDelegateInstance);
                Thunks[27] = Marshal.GetFunctionPointerForDelegate(_AsNWSSoundObjectDelegateInstance);
                Thunks[28] = Marshal.GetFunctionPointerForDelegate(_AsNWCSoundObjectDelegateInstance);
            }

            public static CppSharp.Runtime.VTables SetupVTables(IntPtr instance, bool destructorOnly = false)
            {
                if (!initialized)
                {
                    lock (ManagedVTables)
                    {
                        if (!initialized)
                        {
                            initialized = true;
                            VTables.Tables = new IntPtr[] { *(IntPtr*)(instance + 0) };
                            VTables.Methods = new Delegate[1][];
                            ManagedVTablesDtorOnly[0] = CppSharp.Runtime.VTables.CloneTable(SafeHandles, instance, 0, 37);
                            ManagedVTablesDtorOnly[0][1] = Thunks[0];
                            ManagedVTablesDtorOnly[0][6] = Thunks[0];
                            ManagedVTables[0] = CppSharp.Runtime.VTables.CloneTable(SafeHandles, instance, 0, 37);
                            ManagedVTables[0][1] = Thunks[0];
                            ManagedVTables[0][2] = Thunks[1];
                            ManagedVTables[0][6] = Thunks[0];
                            ManagedVTables[0][7] = Thunks[2];
                            ManagedVTables[0][8] = Thunks[3];
                            ManagedVTables[0][9] = Thunks[4];
                            ManagedVTables[0][10] = Thunks[5];
                            ManagedVTables[0][11] = Thunks[6];
                            ManagedVTables[0][12] = Thunks[7];
                            ManagedVTables[0][13] = Thunks[8];
                            ManagedVTables[0][14] = Thunks[1];
                            ManagedVTables[0][15] = Thunks[9];
                            ManagedVTables[0][16] = Thunks[10];
                            ManagedVTables[0][17] = Thunks[11];
                            ManagedVTables[0][18] = Thunks[12];
                            ManagedVTables[0][19] = Thunks[13];
                            ManagedVTables[0][20] = Thunks[14];
                            ManagedVTables[0][21] = Thunks[15];
                            ManagedVTables[0][22] = Thunks[16];
                            ManagedVTables[0][23] = Thunks[17];
                            ManagedVTables[0][24] = Thunks[18];
                            ManagedVTables[0][25] = Thunks[19];
                            ManagedVTables[0][26] = Thunks[20];
                            ManagedVTables[0][27] = Thunks[21];
                            ManagedVTables[0][28] = Thunks[22];
                            ManagedVTables[0][29] = Thunks[23];
                            ManagedVTables[0][30] = Thunks[24];
                            ManagedVTables[0][31] = Thunks[25];
                            ManagedVTables[0][32] = Thunks[26];
                            ManagedVTables[0][33] = Thunks[27];
                            ManagedVTables[0][34] = Thunks[28];
                            VTables.Methods[0] = new Delegate[37];
                        }
                    }
                }

                if (destructorOnly)
                {
                    *(IntPtr**)(instance + 0) = ManagedVTablesDtorOnly[0];
                }
                else
                {
                    *(IntPtr**)(instance + 0) = ManagedVTables[0];
                }
                return VTables;
            }
        }

        protected CppSharp.Runtime.VTables __vtables;
        internal virtual CppSharp.Runtime.VTables __VTables
        { 
            get {
                if (__vtables.IsEmpty)
                    __vtables.Tables = new IntPtr[] { *(IntPtr*)(__Instance + 0) };
                return __vtables;
            }

            set {        
                __vtables = value;
            }
        }

        internal virtual void SetupVTables(bool destructorOnly = false)
        {
            if (__VTables.IsTransient)
                __VTables = VTableLoader.SetupVTables(__Instance, destructorOnly);
        }
        #endregion
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
