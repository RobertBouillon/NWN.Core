// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    public unsafe partial class CJoiningRestrictions : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 116)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal int bAllowLocal;

            [FieldOffset(4)]
            internal int bAllowServer;

            [FieldOffset(8)]
            internal int bAllowVault;

            [FieldOffset(12)]
            internal int bFixedParties;

            [FieldOffset(16)]
            internal int bAllowFighter;

            [FieldOffset(20)]
            internal int bAllowBarbarian;

            [FieldOffset(24)]
            internal int bAllowRanger;

            [FieldOffset(28)]
            internal int bAllowPaladin;

            [FieldOffset(32)]
            internal int bAllowWizard;

            [FieldOffset(36)]
            internal int bAllowSorcerer;

            [FieldOffset(40)]
            internal int bAllowCleric;

            [FieldOffset(44)]
            internal int bAllowDruid;

            [FieldOffset(48)]
            internal int bAllowRogue;

            [FieldOffset(52)]
            internal int bAllowBard;

            [FieldOffset(56)]
            internal int bAllowMonk;

            [FieldOffset(60)]
            internal int bAllowHuman;

            [FieldOffset(64)]
            internal int bAllowElf;

            [FieldOffset(68)]
            internal int bAllowDwarf;

            [FieldOffset(72)]
            internal int bAllowGnome;

            [FieldOffset(76)]
            internal int bAllowHalfling;

            [FieldOffset(80)]
            internal int bAllowHalfOrc;

            [FieldOffset(84)]
            internal int bAllowHalfElf;

            [FieldOffset(88)]
            internal int nMaxPlayers;

            [FieldOffset(92)]
            internal int nMaxParties;

            [FieldOffset(96)]
            internal int nMaxItemPoints;

            [FieldOffset(100)]
            internal int nMaxStatTotal;

            [FieldOffset(104)]
            internal int nMinLevel;

            [FieldOffset(108)]
            internal int nMaxLevel;

            [FieldOffset(112)]
            internal int bAllowLocalVaultChars;

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN20CJoiningRestrictionsC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CJoiningRestrictions> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CJoiningRestrictions>();

        protected bool __ownsNativeInstance;

        internal static CJoiningRestrictions __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new CJoiningRestrictions(native.ToPointer(), skipVTables);
        }

        internal static CJoiningRestrictions __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (CJoiningRestrictions)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static CJoiningRestrictions __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new CJoiningRestrictions(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private CJoiningRestrictions(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CJoiningRestrictions(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public CJoiningRestrictions()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CJoiningRestrictions.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public CJoiningRestrictions(global::NWN.LowLevel.CJoiningRestrictions _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CJoiningRestrictions.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::NWN.LowLevel.CJoiningRestrictions.__Internal*) __Instance) = *((global::NWN.LowLevel.CJoiningRestrictions.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::NWN.LowLevel.CJoiningRestrictions __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public int BAllowLocal
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowLocal;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowLocal = value;
            }
        }

        public int BAllowServer
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowServer;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowServer = value;
            }
        }

        public int BAllowVault
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowVault;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowVault = value;
            }
        }

        public int BFixedParties
        {
            get
            {
                return ((__Internal*)__Instance)->bFixedParties;
            }

            set
            {
                ((__Internal*)__Instance)->bFixedParties = value;
            }
        }

        public int BAllowFighter
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowFighter;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowFighter = value;
            }
        }

        public int BAllowBarbarian
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowBarbarian;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowBarbarian = value;
            }
        }

        public int BAllowRanger
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowRanger;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowRanger = value;
            }
        }

        public int BAllowPaladin
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowPaladin;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowPaladin = value;
            }
        }

        public int BAllowWizard
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowWizard;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowWizard = value;
            }
        }

        public int BAllowSorcerer
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowSorcerer;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowSorcerer = value;
            }
        }

        public int BAllowCleric
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowCleric;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowCleric = value;
            }
        }

        public int BAllowDruid
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowDruid;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowDruid = value;
            }
        }

        public int BAllowRogue
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowRogue;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowRogue = value;
            }
        }

        public int BAllowBard
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowBard;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowBard = value;
            }
        }

        public int BAllowMonk
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowMonk;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowMonk = value;
            }
        }

        public int BAllowHuman
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowHuman;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowHuman = value;
            }
        }

        public int BAllowElf
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowElf;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowElf = value;
            }
        }

        public int BAllowDwarf
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowDwarf;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowDwarf = value;
            }
        }

        public int BAllowGnome
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowGnome;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowGnome = value;
            }
        }

        public int BAllowHalfling
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowHalfling;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowHalfling = value;
            }
        }

        public int BAllowHalfOrc
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowHalfOrc;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowHalfOrc = value;
            }
        }

        public int BAllowHalfElf
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowHalfElf;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowHalfElf = value;
            }
        }

        public int NMaxPlayers
        {
            get
            {
                return ((__Internal*)__Instance)->nMaxPlayers;
            }

            set
            {
                ((__Internal*)__Instance)->nMaxPlayers = value;
            }
        }

        public int NMaxParties
        {
            get
            {
                return ((__Internal*)__Instance)->nMaxParties;
            }

            set
            {
                ((__Internal*)__Instance)->nMaxParties = value;
            }
        }

        public int NMaxItemPoints
        {
            get
            {
                return ((__Internal*)__Instance)->nMaxItemPoints;
            }

            set
            {
                ((__Internal*)__Instance)->nMaxItemPoints = value;
            }
        }

        public int NMaxStatTotal
        {
            get
            {
                return ((__Internal*)__Instance)->nMaxStatTotal;
            }

            set
            {
                ((__Internal*)__Instance)->nMaxStatTotal = value;
            }
        }

        public int NMinLevel
        {
            get
            {
                return ((__Internal*)__Instance)->nMinLevel;
            }

            set
            {
                ((__Internal*)__Instance)->nMinLevel = value;
            }
        }

        public int NMaxLevel
        {
            get
            {
                return ((__Internal*)__Instance)->nMaxLevel;
            }

            set
            {
                ((__Internal*)__Instance)->nMaxLevel = value;
            }
        }

        public int BAllowLocalVaultChars
        {
            get
            {
                return ((__Internal*)__Instance)->bAllowLocalVaultChars;
            }

            set
            {
                ((__Internal*)__Instance)->bAllowLocalVaultChars = value;
            }
        }
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
