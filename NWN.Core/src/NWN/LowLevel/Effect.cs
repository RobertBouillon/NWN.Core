// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    namespace NWNXLib
    {
        namespace API
        {
            namespace Constants
            {
                namespace EffectTrueType
                {
                    public enum TYPE : uint
                    {
                        Invalid = 0,
                        Haste = 1,
                        DamageResistance = 2,
                        Slow = 3,
                        Resurrection = 4,
                        Disease = 5,
                        SummonCreature = 6,
                        Regenerate = 7,
                        SetState = 8,
                        SetStateInternal = 9,
                        AttackIncrease = 10,
                        AttackDecrease = 11,
                        DamageReduction = 12,
                        DamageIncrease = 13,
                        DamageDecrease = 14,
                        TemporaryHitpoints = 15,
                        DamageImmunityIncrease = 16,
                        DamageImmunityDecrease = 17,
                        Entangle = 18,
                        Death = 19,
                        Knockdown = 20,
                        Deaf = 21,
                        Immunity = 22,
                        SetAIState = 23,
                        EnemyAttackBonus = 24,
                        ArcaneSpellFailure = 25,
                        SavingThrowIncrease = 26,
                        SavingThrowDecrease = 27,
                        MovementSpeedIncrease = 28,
                        MovementSpeedDecrease = 29,
                        VisualEffect = 30,
                        AreaOfEffect = 31,
                        Beam = 32,
                        SpellResistanceIncrease = 33,
                        SpellResistanceDecrease = 34,
                        Poison = 35,
                        AbilityIncrease = 36,
                        AbilityDecrease = 37,
                        Damage = 38,
                        Heal = 39,
                        Link = 40,
                        HasteInternal = 41,
                        SlowInternal = 42,
                        ModifyNumAttacks = 44,
                        Curse = 45,
                        Silence = 46,
                        Invisibility = 47,
                        ACIncrease = 48,
                        ACDecrease = 49,
                        SpellImmunity = 50,
                        DispelAllMagic = 51,
                        DispelBestMagic = 52,
                        Taunt = 53,
                        Light = 54,
                        SkillIncrease = 55,
                        SkillDecrease = 56,
                        HitPointChangeWhenDying = 57,
                        SetWalkAnimation = 58,
                        LimitMovementSpeed = 59,
                        DamageShield = 61,
                        Polymorph = 62,
                        Sanctuary = 63,
                        Timestop = 64,
                        SpellLevelAbsorption = 65,
                        Icon = 67,
                        RacialType = 68,
                        Vision = 69,
                        SeeInvisible = 70,
                        Ultravision = 71,
                        Trueseeing = 72,
                        Blindness = 73,
                        Darkness = 74,
                        MissChance = 75,
                        Concealment = 76,
                        TurnResistanceIncrease = 77,
                        BonusSpellOfLevel = 78,
                        DisappearAppear = 79,
                        Disappear = 80,
                        Appear = 81,
                        NegativeLevel = 82,
                        BonusFeat = 83,
                        Wounding = 84,
                        Swarm = 85,
                        VampiricRegeneration = 86,
                        Disarm = 87,
                        TurnResistanceDecrease = 88,
                        BlindnessInactive = 89,
                        Petrify = 90,
                        ItemProperty = 91,
                        SpellFailure = 92,
                        CutsceneGhost = 93,
                        CutsceneImmobile = 94,
                        DefensiveStance = 95
                    }

                    public unsafe partial class Effect
                    {
                        public partial struct __Internal
                        {
                            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7NWNXLib3API9Constants14EffectTrueType8ToStringEj", CallingConvention = __CallingConvention.Cdecl)]
                            internal static extern __IntPtr ToString(uint value);
                        }

                        public static string ToString(uint value)
                        {
                            var __ret = __Internal.ToString(value);
                            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, __ret);
                        }

                        public static int MIN { get; } = 0;

                        public static int MAX { get; } = 95;
                    }
                }

                namespace EffectDurationType
                {
                    public enum TYPE : uint
                    {
                        Instant = 0,
                        Temporary = 1,
                        Permanent = 2,
                        Equipped = 3,
                        Innate = 4
                    }

                    public unsafe partial class Effect
                    {
                        public partial struct __Internal
                        {
                            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7NWNXLib3API9Constants18EffectDurationType8ToStringEj", CallingConvention = __CallingConvention.Cdecl)]
                            internal static extern __IntPtr ToString(uint value);
                        }

                        public static string ToString(uint value)
                        {
                            var __ret = __Internal.ToString(value);
                            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, __ret);
                        }

                        public static int MIN { get; } = 0;

                        public static int MAX { get; } = 4;

                        public static int MASK { get; } = 7;
                    }
                }

                namespace EffectSubType
                {
                    public enum TYPE : uint
                    {
                        Magical = 8,
                        Supernatural = 16,
                        Extraordinary = 24
                    }

                    public unsafe partial class Effect
                    {
                        public partial struct __Internal
                        {
                            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN7NWNXLib3API9Constants13EffectSubType8ToStringEj", CallingConvention = __CallingConvention.Cdecl)]
                            internal static extern __IntPtr ToString(uint value);
                        }

                        public static string ToString(uint value)
                        {
                            var __ret = __Internal.ToString(value);
                            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, __ret);
                        }

                        public static int MIN { get; } = 8;

                        public static int MAX { get; } = 24;

                        public static int MASK { get; } = 24;
                    }
                }
            }
        }
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
