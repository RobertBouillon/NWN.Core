// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace NWN.LowLevel
{
    namespace CExoLinkedList
    {
        [StructLayout(LayoutKind.Explicit, Size = 8)]
        public unsafe partial struct __Internal
        {
            [FieldOffset(0)]
            internal __IntPtr m_pcExoLinkedListInternal;

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CERFString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CERFString(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CERFString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CERFString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CERFString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CERFString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CERFString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CERFKey(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CERFKey(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CERFKey(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CERFKey(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CERFKey(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CERFKey(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CERFKey(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CERFRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CERFRes(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CERFRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CERFRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CERFRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CERFRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CERFRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CKeyTableInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CKeyTableInfo(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CKeyTableInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CKeyTableInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CKeyTableInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CKeyTableInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CKeyTableInfo(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_EXOLOCSTRING(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_EXOLOCSTRING(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_EXOLOCSTRING(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_EXOLOCSTRING(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_EXOLOCSTRING(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_EXOLOCSTRING(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_EXOLOCSTRING(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CRes(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CRes(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList__i(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjEC2ERKS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList__i(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList__i(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList__i(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList__i(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList__i(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList__i(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_NWAREAEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_NWAREAEXPANSION(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_NWAREAEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_NWAREAEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_NWAREAEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_NWAREAEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_NWAREAEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CNWSObjectActionNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CNWSObjectActionNode(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CNWSObjectActionNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CNWSObjectActionNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CNWSObjectActionNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CNWSObjectActionNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CNWSObjectActionNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CNWSDialogPlayer(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CNWSDialogPlayer(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CNWSDialogPlayer(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CNWSDialogPlayer(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CNWSDialogPlayer(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CNWSDialogPlayer(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CNWSDialogPlayer(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_NWMODULEEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_NWMODULEEXPANSION(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_NWMODULEEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_NWMODULEEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_NWMODULEEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_NWMODULEEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_NWMODULEEXPANSION(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_NWMODULECUTSCENE(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_NWMODULECUTSCENE(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_NWMODULECUTSCENE(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_NWMODULECUTSCENE(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_NWMODULECUTSCENE(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_NWMODULECUTSCENE(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_NWMODULECUTSCENE(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CResRef(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CResRef(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CResRef(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CResRef(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CResRef(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CResRef(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CResRef(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEMEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEMEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEMED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CNWSPlayerTURD(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CNWSPlayerTURD(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CNWSPlayerTURD(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CNWSPlayerTURD(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CNWSPlayerTURD(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CNWSPlayerTURD(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CNWSPlayerTURD(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CExoString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CExoString(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CExoString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CExoString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CExoString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CExoString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CExoString(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_CServerAIEventNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_CServerAIEventNode(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_CServerAIEventNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_CServerAIEventNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_CServerAIEventNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_CServerAIEventNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_CServerAIEventNode(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAEC2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void ctorc__S_CExoLinkedList____S_C2DA(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAEC2ERKS1_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctorc__S_CExoLinkedList____S_C2DA(__IntPtr __instance, __IntPtr _0);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAED2Ev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void dtorc__S_CExoLinkedList____S_C2DA(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE5CountEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint Countc__S_CExoLinkedList____S_C2DA(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE10GetHeadPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHeadPosc__S_CExoLinkedList____S_C2DA(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE10GetTailPosEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTailPosc__S_CExoLinkedList____S_C2DA(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE7IsEmptyEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IsEmptyc__S_CExoLinkedList____S_C2DA(__IntPtr __instance);
        }
    }

    public unsafe partial class CExoLinkedList<T> : IDisposable
    {
        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CExoLinkedList<T>> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::NWN.LowLevel.CExoLinkedList<T>>();

        protected bool __ownsNativeInstance;

        internal static CExoLinkedList<T> __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new CExoLinkedList<T>(native.ToPointer(), skipVTables);
        }

        internal static CExoLinkedList<T> __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (CExoLinkedList<T>)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static CExoLinkedList<T> __CreateInstance(global::NWN.LowLevel.CExoLinkedList.__Internal native, bool skipVTables = false)
        {
            return new CExoLinkedList<T>(native, skipVTables);
        }

        private static void* __CopyValue(global::NWN.LowLevel.CExoLinkedList.__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
            *(global::NWN.LowLevel.CExoLinkedList.__Internal*) ret = native;
            return ret.ToPointer();
        }

        private CExoLinkedList(global::NWN.LowLevel.CExoLinkedList.__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected CExoLinkedList(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public CExoLinkedList()
        {
            var __T = typeof(T);
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFString)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CERFString(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFKey)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CERFKey(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFRes)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CERFRes(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CKeyTableInfo)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CKeyTableInfo(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.EXOLOCSTRING)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_EXOLOCSTRING(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CRes)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CRes(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(uint)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList__i(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWAREAEXPANSION)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_NWAREAEXPANSION(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSObjectActionNode)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CNWSObjectActionNode(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSDialogPlayer)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CNWSDialogPlayer(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULEEXPANSION)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_NWMODULEEXPANSION(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULECUTSCENE)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_NWMODULECUTSCENE(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CResRef(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERLISTITEM)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerTURD)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CNWSPlayerTURD(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerLUOInventoryItem)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CExoString(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CServerAIEventNode)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_CServerAIEventNode(__Instance);
                return;
            }
            if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.C2DA)))
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::NWN.LowLevel.CExoLinkedList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                global::NWN.LowLevel.CExoLinkedList.__Internal.ctorc__S_CExoLinkedList____S_C2DA(__Instance);
                return;
            }
            throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoLinkedList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CERFString>, <global::NWN.LowLevel.CERFKey>, <global::NWN.LowLevel.CERFRes>, <global::NWN.LowLevel.CKeyTableInfo>, <global::NWN.LowLevel.EXOLOCSTRING>, <global::NWN.LowLevel.CRes>, <uint>, <global::NWN.LowLevel.NWAREAEXPANSION>, <global::NWN.LowLevel.CNWSObjectActionNode>, <global::NWN.LowLevel.CNWSDialogPlayer>, <global::NWN.LowLevel.NWMODULEEXPANSION>, <global::NWN.LowLevel.NWMODULECUTSCENE>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.NWPLAYERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerTURD>, <global::NWN.LowLevel.CNWSPlayerLUOInventoryItem>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CServerAIEventNode>, <global::NWN.LowLevel.C2DA>.");
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::NWN.LowLevel.CExoLinkedList<T> __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (disposing)
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFString)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CERFString(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFKey)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CERFKey(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFRes)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CERFRes(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CKeyTableInfo)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CKeyTableInfo(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.EXOLOCSTRING)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_EXOLOCSTRING(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CRes)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CRes(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList__i(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWAREAEXPANSION)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_NWAREAEXPANSION(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSObjectActionNode)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CNWSObjectActionNode(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSDialogPlayer)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CNWSDialogPlayer(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULEEXPANSION)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_NWMODULEEXPANSION(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULECUTSCENE)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_NWMODULECUTSCENE(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CResRef(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERLISTITEM)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerTURD)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CNWSPlayerTURD(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerLUOInventoryItem)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CExoString(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CServerAIEventNode)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_CServerAIEventNode(__Instance);
                    return;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.C2DA)))
                {
                    global::NWN.LowLevel.CExoLinkedList.__Internal.dtorc__S_CExoLinkedList____S_C2DA(__Instance);
                    return;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoLinkedList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CERFString>, <global::NWN.LowLevel.CERFKey>, <global::NWN.LowLevel.CERFRes>, <global::NWN.LowLevel.CKeyTableInfo>, <global::NWN.LowLevel.EXOLOCSTRING>, <global::NWN.LowLevel.CRes>, <uint>, <global::NWN.LowLevel.NWAREAEXPANSION>, <global::NWN.LowLevel.CNWSObjectActionNode>, <global::NWN.LowLevel.CNWSDialogPlayer>, <global::NWN.LowLevel.NWMODULEEXPANSION>, <global::NWN.LowLevel.NWMODULECUTSCENE>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.NWPLAYERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerTURD>, <global::NWN.LowLevel.CNWSPlayerLUOInventoryItem>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CServerAIEventNode>, <global::NWN.LowLevel.C2DA>.");
            }
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::NWN.LowLevel.CExoLinkedListInternal MPcExoLinkedListInternal
        {
            get
            {
                var __result0 = global::NWN.LowLevel.CExoLinkedListInternal.__GetOrCreateInstance(((global::NWN.LowLevel.CExoLinkedList.__Internal*)__Instance)->m_pcExoLinkedListInternal, false);
                return __result0;
            }

            set
            {
                ((global::NWN.LowLevel.CExoLinkedList.__Internal*)__Instance)->m_pcExoLinkedListInternal = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public uint Count
        {
            get
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFString)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CERFString(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFKey)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CERFKey(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFRes)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CERFRes(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CKeyTableInfo)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CKeyTableInfo(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.EXOLOCSTRING)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_EXOLOCSTRING(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CRes)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CRes(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList__i(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWAREAEXPANSION)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_NWAREAEXPANSION(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSObjectActionNode)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CNWSObjectActionNode(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSDialogPlayer)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CNWSDialogPlayer(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULEEXPANSION)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_NWMODULEEXPANSION(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULECUTSCENE)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_NWMODULECUTSCENE(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CResRef(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERLISTITEM)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerTURD)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CNWSPlayerTURD(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerLUOInventoryItem)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CExoString(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CServerAIEventNode)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_CServerAIEventNode(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.C2DA)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.Countc__S_CExoLinkedList____S_C2DA(__Instance);
                    return __ret;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoLinkedList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CERFString>, <global::NWN.LowLevel.CERFKey>, <global::NWN.LowLevel.CERFRes>, <global::NWN.LowLevel.CKeyTableInfo>, <global::NWN.LowLevel.EXOLOCSTRING>, <global::NWN.LowLevel.CRes>, <uint>, <global::NWN.LowLevel.NWAREAEXPANSION>, <global::NWN.LowLevel.CNWSObjectActionNode>, <global::NWN.LowLevel.CNWSDialogPlayer>, <global::NWN.LowLevel.NWMODULEEXPANSION>, <global::NWN.LowLevel.NWMODULECUTSCENE>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.NWPLAYERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerTURD>, <global::NWN.LowLevel.CNWSPlayerLUOInventoryItem>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CServerAIEventNode>, <global::NWN.LowLevel.C2DA>.");
            }
        }

        public global::NWN.LowLevel.CExoLinkedListNode HeadPos
        {
            get
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFString)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CERFString(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFKey)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CERFKey(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFRes)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CERFRes(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CKeyTableInfo)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CKeyTableInfo(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.EXOLOCSTRING)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_EXOLOCSTRING(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CRes)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CRes(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList__i(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWAREAEXPANSION)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_NWAREAEXPANSION(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSObjectActionNode)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CNWSObjectActionNode(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSDialogPlayer)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CNWSDialogPlayer(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULEEXPANSION)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_NWMODULEEXPANSION(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULECUTSCENE)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_NWMODULECUTSCENE(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CResRef(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERLISTITEM)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerTURD)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CNWSPlayerTURD(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerLUOInventoryItem)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CExoString(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CServerAIEventNode)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_CServerAIEventNode(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.C2DA)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetHeadPosc__S_CExoLinkedList____S_C2DA(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoLinkedList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CERFString>, <global::NWN.LowLevel.CERFKey>, <global::NWN.LowLevel.CERFRes>, <global::NWN.LowLevel.CKeyTableInfo>, <global::NWN.LowLevel.EXOLOCSTRING>, <global::NWN.LowLevel.CRes>, <uint>, <global::NWN.LowLevel.NWAREAEXPANSION>, <global::NWN.LowLevel.CNWSObjectActionNode>, <global::NWN.LowLevel.CNWSDialogPlayer>, <global::NWN.LowLevel.NWMODULEEXPANSION>, <global::NWN.LowLevel.NWMODULECUTSCENE>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.NWPLAYERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerTURD>, <global::NWN.LowLevel.CNWSPlayerLUOInventoryItem>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CServerAIEventNode>, <global::NWN.LowLevel.C2DA>.");
            }
        }

        public global::NWN.LowLevel.CExoLinkedListNode TailPos
        {
            get
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFString)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CERFString(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFKey)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CERFKey(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFRes)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CERFRes(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CKeyTableInfo)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CKeyTableInfo(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.EXOLOCSTRING)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_EXOLOCSTRING(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CRes)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CRes(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList__i(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWAREAEXPANSION)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_NWAREAEXPANSION(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSObjectActionNode)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CNWSObjectActionNode(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSDialogPlayer)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CNWSDialogPlayer(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULEEXPANSION)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_NWMODULEEXPANSION(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULECUTSCENE)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_NWMODULECUTSCENE(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CResRef(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERLISTITEM)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerTURD)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CNWSPlayerTURD(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerLUOInventoryItem)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CExoString(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CServerAIEventNode)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_CServerAIEventNode(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.C2DA)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.GetTailPosc__S_CExoLinkedList____S_C2DA(__Instance);
                    var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                    return __result0;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoLinkedList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CERFString>, <global::NWN.LowLevel.CERFKey>, <global::NWN.LowLevel.CERFRes>, <global::NWN.LowLevel.CKeyTableInfo>, <global::NWN.LowLevel.EXOLOCSTRING>, <global::NWN.LowLevel.CRes>, <uint>, <global::NWN.LowLevel.NWAREAEXPANSION>, <global::NWN.LowLevel.CNWSObjectActionNode>, <global::NWN.LowLevel.CNWSDialogPlayer>, <global::NWN.LowLevel.NWMODULEEXPANSION>, <global::NWN.LowLevel.NWMODULECUTSCENE>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.NWPLAYERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerTURD>, <global::NWN.LowLevel.CNWSPlayerLUOInventoryItem>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CServerAIEventNode>, <global::NWN.LowLevel.C2DA>.");
            }
        }

        public int IsEmpty
        {
            get
            {
                var __T = typeof(T);
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFString)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CERFString(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFKey)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CERFKey(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CERFRes)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CERFRes(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CKeyTableInfo)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CKeyTableInfo(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.EXOLOCSTRING)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_EXOLOCSTRING(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CRes)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CRes(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(uint)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList__i(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWAREAEXPANSION)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_NWAREAEXPANSION(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSObjectActionNode)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CNWSObjectActionNode(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSDialogPlayer)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CNWSDialogPlayer(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULEEXPANSION)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_NWMODULEEXPANSION(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWMODULECUTSCENE)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_NWMODULECUTSCENE(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CResRef)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CResRef(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.NWPLAYERLISTITEM)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_NWPLAYERLISTITEM(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerTURD)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CNWSPlayerTURD(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CNWSPlayerLUOInventoryItem)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CNWSPlayerLUOInventoryItem(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CExoString)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CExoString(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.CServerAIEventNode)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_CServerAIEventNode(__Instance);
                    return __ret;
                }
                if (__T.IsAssignableFrom(typeof(global::NWN.LowLevel.C2DA)))
                {
                    var __ret = global::NWN.LowLevel.CExoLinkedList.__Internal.IsEmptyc__S_CExoLinkedList____S_C2DA(__Instance);
                    return __ret;
                }
                throw new ArgumentOutOfRangeException("T", string.Join(", ", new[] { typeof(T).FullName }), "global::NWN.LowLevel.CExoLinkedList<T> maps a C++ template class and therefore it only supports a limited set of types and their subclasses: <global::NWN.LowLevel.CERFString>, <global::NWN.LowLevel.CERFKey>, <global::NWN.LowLevel.CERFRes>, <global::NWN.LowLevel.CKeyTableInfo>, <global::NWN.LowLevel.EXOLOCSTRING>, <global::NWN.LowLevel.CRes>, <uint>, <global::NWN.LowLevel.NWAREAEXPANSION>, <global::NWN.LowLevel.CNWSObjectActionNode>, <global::NWN.LowLevel.CNWSDialogPlayer>, <global::NWN.LowLevel.NWMODULEEXPANSION>, <global::NWN.LowLevel.NWMODULECUTSCENE>, <global::NWN.LowLevel.CResRef>, <global::NWN.LowLevel.NWPLAYERLISTITEM>, <global::NWN.LowLevel.CNWSPlayerTURD>, <global::NWN.LowLevel.CNWSPlayerLUOInventoryItem>, <global::NWN.LowLevel.CExoString>, <global::NWN.LowLevel.CServerAIEventNode>, <global::NWN.LowLevel.C2DA>.");
            }
        }
    }

    public unsafe static partial class CExoLinkedListExtensions
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CERFStringE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_1(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_1(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_1(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_1(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_1(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_1(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_1(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_1(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_1(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_1(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_1(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFKeyE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_1(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_2(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_2(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_2(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_2(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_2(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_2(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_2(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_2(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_2(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_2(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_2(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CERFResE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_2(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_3(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_3(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_3(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_3(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_3(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_3(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_3(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_3(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_3(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_3(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_3(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI13CKeyTableInfoE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_3(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_4(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_4(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_4(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_4(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_4(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_4(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_4(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_4(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_4(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_4(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_4(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI12EXOLOCSTRINGE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_4(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_5(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_5(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_5(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_5(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_5(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_5(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_5(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_5(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_5(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_5(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_5(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4CResE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_5(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE7AddHeadEPj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead(__IntPtr __instance, uint* Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE7AddTailEPj", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail(__IntPtr __instance, uint* Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE8AddAfterEPjP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter(__IntPtr __instance, uint* Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE9AddBeforeEPjP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore(__IntPtr __instance, uint* Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* GetAtPos_6(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* GetHead_6(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* GetNext_6(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* GetPrev_6(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* GetTail_6(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* RemoveHead_6(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* RemoveTail_6(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListIjE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* Remove_6(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_6(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_6(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_6(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_6(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_7(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_7(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_7(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_7(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_7(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_7(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_7(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI15NWAREAEXPANSIONE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_7(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_7(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_7(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_7(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_7(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_8(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_8(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_8(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_8(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_8(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_8(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_8(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI20CNWSObjectActionNodeE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_8(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_8(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_8(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_8(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_8(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_9(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_9(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_9(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_9(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_9(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_9(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_9(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16CNWSDialogPlayerE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_9(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_9(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_9(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_9(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_9(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_10(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_10(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_10(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_10(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_10(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_10(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_10(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI17NWMODULEEXPANSIONE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_10(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_10(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_10(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_10(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_10(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_11(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_11(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_11(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_11(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_11(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_11(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_11(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWMODULECUTSCENEE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_11(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_11(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_11(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_11(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_11(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_12(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_12(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_12(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_12(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_12(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_12(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_12(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI7CResRefE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_12(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_12(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_12(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_12(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_12(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_13(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_13(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_13(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_13(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_13(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_13(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_13(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI16NWPLAYERLISTITEME6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_13(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_13(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_13(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_13(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_13(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_14(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_14(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_14(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_14(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_14(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_14(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_14(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI14CNWSPlayerTURDE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_14(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_14(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_14(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_14(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_14(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_15(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_15(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_15(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_15(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_15(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_15(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_15(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI26CNWSPlayerLUOInventoryItemE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_15(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_15(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_15(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_15(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_15(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_16(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_16(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_16(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_16(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_16(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_16(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_16(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI10CExoStringE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_16(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_16(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_16(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_16(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_16(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_17(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_17(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_17(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_17(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_17(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_17(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_17(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI18CServerAIEventNodeE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_17(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE7AddHeadEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddHead_17(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE7AddTailEPS0_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddTail_17(__IntPtr __instance, __IntPtr Object);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE8AddAfterEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddAfter_17(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE9AddBeforeEPS0_P18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr AddBefore_17(__IntPtr __instance, __IntPtr Object, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE8GetAtPosEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetAtPos_18(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE7GetHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetHead_18(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE7GetNextERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetNext_18(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE7GetPrevERP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPrev_18(__IntPtr __instance, __IntPtr Position);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE7GetTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetTail_18(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE10RemoveHeadEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveHead_18(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE10RemoveTailEv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr RemoveTail_18(__IntPtr __instance);

            [SuppressUnmanagedCodeSecurity, DllImport("NWNXLib", EntryPoint = "_ZN14CExoLinkedListI4C2DAE6RemoveEP18CExoLinkedListNode", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr Remove_18(__IntPtr __instance, __IntPtr Position);
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this, global::NWN.LowLevel.CERFString Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this, global::NWN.LowLevel.CERFString Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this, global::NWN.LowLevel.CERFString Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this, global::NWN.LowLevel.CERFString Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFString GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFString GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead(__arg0);
            var __result0 = global::NWN.LowLevel.CERFString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFString GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFString GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFString GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail(__arg0);
            var __result0 = global::NWN.LowLevel.CERFString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFString RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead(__arg0);
            var __result0 = global::NWN.LowLevel.CERFString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFString RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail(__arg0);
            var __result0 = global::NWN.LowLevel.CERFString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFString Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFString> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this, global::NWN.LowLevel.CERFKey Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_1(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this, global::NWN.LowLevel.CERFKey Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_1(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this, global::NWN.LowLevel.CERFKey Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_1(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this, global::NWN.LowLevel.CERFKey Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_1(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFKey GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_1(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFKey.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFKey GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_1(__arg0);
            var __result0 = global::NWN.LowLevel.CERFKey.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFKey GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_1(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFKey.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFKey GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_1(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFKey.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFKey GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_1(__arg0);
            var __result0 = global::NWN.LowLevel.CERFKey.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFKey RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_1(__arg0);
            var __result0 = global::NWN.LowLevel.CERFKey.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFKey RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_1(__arg0);
            var __result0 = global::NWN.LowLevel.CERFKey.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFKey Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFKey> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_1(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFKey.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this, global::NWN.LowLevel.CERFRes Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_2(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this, global::NWN.LowLevel.CERFRes Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_2(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this, global::NWN.LowLevel.CERFRes Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_2(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this, global::NWN.LowLevel.CERFRes Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_2(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFRes GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_2(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFRes.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFRes GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_2(__arg0);
            var __result0 = global::NWN.LowLevel.CERFRes.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFRes GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_2(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFRes.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFRes GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_2(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFRes.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFRes GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_2(__arg0);
            var __result0 = global::NWN.LowLevel.CERFRes.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFRes RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_2(__arg0);
            var __result0 = global::NWN.LowLevel.CERFRes.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFRes RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_2(__arg0);
            var __result0 = global::NWN.LowLevel.CERFRes.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CERFRes Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CERFRes> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_2(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CERFRes.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this, global::NWN.LowLevel.CKeyTableInfo Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_3(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this, global::NWN.LowLevel.CKeyTableInfo Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_3(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this, global::NWN.LowLevel.CKeyTableInfo Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_3(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this, global::NWN.LowLevel.CKeyTableInfo Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_3(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CKeyTableInfo GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_3(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CKeyTableInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CKeyTableInfo GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_3(__arg0);
            var __result0 = global::NWN.LowLevel.CKeyTableInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CKeyTableInfo GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_3(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CKeyTableInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CKeyTableInfo GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_3(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CKeyTableInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CKeyTableInfo GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_3(__arg0);
            var __result0 = global::NWN.LowLevel.CKeyTableInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CKeyTableInfo RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_3(__arg0);
            var __result0 = global::NWN.LowLevel.CKeyTableInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CKeyTableInfo RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_3(__arg0);
            var __result0 = global::NWN.LowLevel.CKeyTableInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CKeyTableInfo Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CKeyTableInfo> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_3(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CKeyTableInfo.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this, global::NWN.LowLevel.EXOLOCSTRING Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_4(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this, global::NWN.LowLevel.EXOLOCSTRING Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_4(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this, global::NWN.LowLevel.EXOLOCSTRING Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_4(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this, global::NWN.LowLevel.EXOLOCSTRING Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_4(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.EXOLOCSTRING GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_4(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.EXOLOCSTRING.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.EXOLOCSTRING GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_4(__arg0);
            var __result0 = global::NWN.LowLevel.EXOLOCSTRING.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.EXOLOCSTRING GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_4(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.EXOLOCSTRING.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.EXOLOCSTRING GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_4(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.EXOLOCSTRING.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.EXOLOCSTRING GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_4(__arg0);
            var __result0 = global::NWN.LowLevel.EXOLOCSTRING.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.EXOLOCSTRING RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_4(__arg0);
            var __result0 = global::NWN.LowLevel.EXOLOCSTRING.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.EXOLOCSTRING RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_4(__arg0);
            var __result0 = global::NWN.LowLevel.EXOLOCSTRING.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.EXOLOCSTRING Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.EXOLOCSTRING> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_4(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.EXOLOCSTRING.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this, global::NWN.LowLevel.CRes Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_5(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this, global::NWN.LowLevel.CRes Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_5(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this, global::NWN.LowLevel.CRes Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_5(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this, global::NWN.LowLevel.CRes Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_5(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CRes GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_5(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CRes.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CRes GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_5(__arg0);
            var __result0 = global::NWN.LowLevel.CRes.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CRes GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_5(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CRes.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CRes GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_5(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CRes.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CRes GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_5(__arg0);
            var __result0 = global::NWN.LowLevel.CRes.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CRes RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_5(__arg0);
            var __result0 = global::NWN.LowLevel.CRes.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CRes RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_5(__arg0);
            var __result0 = global::NWN.LowLevel.CRes.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CRes Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CRes> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_5(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CRes.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<uint> @this, ref uint Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            fixed (uint* __Object1 = &Object)
            {
                var __arg1 = __Object1;
                var __ret = __Internal.AddHead(__arg0, __arg1);
                var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<uint> @this, ref uint Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            fixed (uint* __Object1 = &Object)
            {
                var __arg1 = __Object1;
                var __ret = __Internal.AddTail(__arg0, __arg1);
                var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<uint> @this, ref uint Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            fixed (uint* __Object1 = &Object)
            {
                var __arg1 = __Object1;
                var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
                var __ret = __Internal.AddAfter(__arg0, __arg1, __arg2);
                var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<uint> @this, ref uint Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            fixed (uint* __Object1 = &Object)
            {
                var __arg1 = __Object1;
                var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
                var __ret = __Internal.AddBefore(__arg0, __arg1, __arg2);
                var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static uint* GetAtPos(this global::NWN.LowLevel.CExoLinkedList<uint> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_6(__arg0, __arg1);
            return __ret;
        }

        public static uint* GetHead(this global::NWN.LowLevel.CExoLinkedList<uint> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_6(__arg0);
            return __ret;
        }

        public static uint* GetNext(this global::NWN.LowLevel.CExoLinkedList<uint> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_6(__arg0, __arg1);
            return __ret;
        }

        public static uint* GetPrev(this global::NWN.LowLevel.CExoLinkedList<uint> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_6(__arg0, __arg1);
            return __ret;
        }

        public static uint* GetTail(this global::NWN.LowLevel.CExoLinkedList<uint> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_6(__arg0);
            return __ret;
        }

        public static uint* RemoveHead(this global::NWN.LowLevel.CExoLinkedList<uint> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_6(__arg0);
            return __ret;
        }

        public static uint* RemoveTail(this global::NWN.LowLevel.CExoLinkedList<uint> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_6(__arg0);
            return __ret;
        }

        public static uint* Remove(this global::NWN.LowLevel.CExoLinkedList<uint> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_6(__arg0, __arg1);
            return __ret;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this, global::NWN.LowLevel.NWAREAEXPANSION Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_6(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this, global::NWN.LowLevel.NWAREAEXPANSION Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_6(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this, global::NWN.LowLevel.NWAREAEXPANSION Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_6(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this, global::NWN.LowLevel.NWAREAEXPANSION Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_6(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWAREAEXPANSION GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_7(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWAREAEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWAREAEXPANSION GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_7(__arg0);
            var __result0 = global::NWN.LowLevel.NWAREAEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWAREAEXPANSION GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_7(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWAREAEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWAREAEXPANSION GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_7(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWAREAEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWAREAEXPANSION GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_7(__arg0);
            var __result0 = global::NWN.LowLevel.NWAREAEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWAREAEXPANSION RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_7(__arg0);
            var __result0 = global::NWN.LowLevel.NWAREAEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWAREAEXPANSION RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_7(__arg0);
            var __result0 = global::NWN.LowLevel.NWAREAEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWAREAEXPANSION Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWAREAEXPANSION> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_7(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWAREAEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this, global::NWN.LowLevel.CNWSObjectActionNode Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_7(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this, global::NWN.LowLevel.CNWSObjectActionNode Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_7(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this, global::NWN.LowLevel.CNWSObjectActionNode Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_7(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this, global::NWN.LowLevel.CNWSObjectActionNode Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_7(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSObjectActionNode GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_8(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSObjectActionNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSObjectActionNode GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_8(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSObjectActionNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSObjectActionNode GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_8(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSObjectActionNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSObjectActionNode GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_8(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSObjectActionNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSObjectActionNode GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_8(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSObjectActionNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSObjectActionNode RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_8(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSObjectActionNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSObjectActionNode RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_8(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSObjectActionNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSObjectActionNode Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSObjectActionNode> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_8(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSObjectActionNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this, global::NWN.LowLevel.CNWSDialogPlayer Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_8(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this, global::NWN.LowLevel.CNWSDialogPlayer Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_8(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this, global::NWN.LowLevel.CNWSDialogPlayer Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_8(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this, global::NWN.LowLevel.CNWSDialogPlayer Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_8(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSDialogPlayer GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_9(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSDialogPlayer.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSDialogPlayer GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_9(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSDialogPlayer.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSDialogPlayer GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_9(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSDialogPlayer.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSDialogPlayer GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_9(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSDialogPlayer.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSDialogPlayer GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_9(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSDialogPlayer.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSDialogPlayer RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_9(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSDialogPlayer.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSDialogPlayer RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_9(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSDialogPlayer.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSDialogPlayer Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSDialogPlayer> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_9(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSDialogPlayer.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this, global::NWN.LowLevel.NWMODULEEXPANSION Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_9(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this, global::NWN.LowLevel.NWMODULEEXPANSION Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_9(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this, global::NWN.LowLevel.NWMODULEEXPANSION Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_9(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this, global::NWN.LowLevel.NWMODULEEXPANSION Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_9(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULEEXPANSION GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_10(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWMODULEEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULEEXPANSION GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_10(__arg0);
            var __result0 = global::NWN.LowLevel.NWMODULEEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULEEXPANSION GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_10(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWMODULEEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULEEXPANSION GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_10(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWMODULEEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULEEXPANSION GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_10(__arg0);
            var __result0 = global::NWN.LowLevel.NWMODULEEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULEEXPANSION RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_10(__arg0);
            var __result0 = global::NWN.LowLevel.NWMODULEEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULEEXPANSION RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_10(__arg0);
            var __result0 = global::NWN.LowLevel.NWMODULEEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULEEXPANSION Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULEEXPANSION> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_10(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWMODULEEXPANSION.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this, global::NWN.LowLevel.NWMODULECUTSCENE Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_10(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this, global::NWN.LowLevel.NWMODULECUTSCENE Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_10(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this, global::NWN.LowLevel.NWMODULECUTSCENE Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_10(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this, global::NWN.LowLevel.NWMODULECUTSCENE Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_10(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULECUTSCENE GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_11(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWMODULECUTSCENE.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULECUTSCENE GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_11(__arg0);
            var __result0 = global::NWN.LowLevel.NWMODULECUTSCENE.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULECUTSCENE GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_11(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWMODULECUTSCENE.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULECUTSCENE GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_11(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWMODULECUTSCENE.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULECUTSCENE GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_11(__arg0);
            var __result0 = global::NWN.LowLevel.NWMODULECUTSCENE.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULECUTSCENE RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_11(__arg0);
            var __result0 = global::NWN.LowLevel.NWMODULECUTSCENE.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULECUTSCENE RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_11(__arg0);
            var __result0 = global::NWN.LowLevel.NWMODULECUTSCENE.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWMODULECUTSCENE Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWMODULECUTSCENE> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_11(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWMODULECUTSCENE.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this, global::NWN.LowLevel.CResRef Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_11(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this, global::NWN.LowLevel.CResRef Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_11(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this, global::NWN.LowLevel.CResRef Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_11(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this, global::NWN.LowLevel.CResRef Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_11(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CResRef GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_12(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CResRef.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CResRef GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_12(__arg0);
            var __result0 = global::NWN.LowLevel.CResRef.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CResRef GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_12(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CResRef.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CResRef GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_12(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CResRef.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CResRef GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_12(__arg0);
            var __result0 = global::NWN.LowLevel.CResRef.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CResRef RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_12(__arg0);
            var __result0 = global::NWN.LowLevel.CResRef.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CResRef RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_12(__arg0);
            var __result0 = global::NWN.LowLevel.CResRef.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CResRef Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CResRef> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_12(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CResRef.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this, global::NWN.LowLevel.NWPLAYERLISTITEM Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_12(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this, global::NWN.LowLevel.NWPLAYERLISTITEM Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_12(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this, global::NWN.LowLevel.NWPLAYERLISTITEM Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_12(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this, global::NWN.LowLevel.NWPLAYERLISTITEM Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_12(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPLAYERLISTITEM GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_13(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWPLAYERLISTITEM.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPLAYERLISTITEM GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_13(__arg0);
            var __result0 = global::NWN.LowLevel.NWPLAYERLISTITEM.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPLAYERLISTITEM GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_13(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWPLAYERLISTITEM.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPLAYERLISTITEM GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_13(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWPLAYERLISTITEM.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPLAYERLISTITEM GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_13(__arg0);
            var __result0 = global::NWN.LowLevel.NWPLAYERLISTITEM.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPLAYERLISTITEM RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_13(__arg0);
            var __result0 = global::NWN.LowLevel.NWPLAYERLISTITEM.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPLAYERLISTITEM RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_13(__arg0);
            var __result0 = global::NWN.LowLevel.NWPLAYERLISTITEM.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.NWPLAYERLISTITEM Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.NWPLAYERLISTITEM> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_13(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.NWPLAYERLISTITEM.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this, global::NWN.LowLevel.CNWSPlayerTURD Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_13(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this, global::NWN.LowLevel.CNWSPlayerTURD Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_13(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this, global::NWN.LowLevel.CNWSPlayerTURD Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_13(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this, global::NWN.LowLevel.CNWSPlayerTURD Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_13(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerTURD GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_14(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSPlayerTURD.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerTURD GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_14(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPlayerTURD.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerTURD GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_14(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSPlayerTURD.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerTURD GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_14(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSPlayerTURD.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerTURD GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_14(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPlayerTURD.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerTURD RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_14(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPlayerTURD.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerTURD RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_14(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPlayerTURD.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerTURD Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerTURD> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_14(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSPlayerTURD.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this, global::NWN.LowLevel.CNWSPlayerLUOInventoryItem Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_14(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this, global::NWN.LowLevel.CNWSPlayerLUOInventoryItem Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_14(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this, global::NWN.LowLevel.CNWSPlayerLUOInventoryItem Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_14(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this, global::NWN.LowLevel.CNWSPlayerLUOInventoryItem Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_14(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerLUOInventoryItem GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_15(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSPlayerLUOInventoryItem.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerLUOInventoryItem GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_15(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPlayerLUOInventoryItem.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerLUOInventoryItem GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_15(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSPlayerLUOInventoryItem.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerLUOInventoryItem GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_15(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSPlayerLUOInventoryItem.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerLUOInventoryItem GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_15(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPlayerLUOInventoryItem.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerLUOInventoryItem RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_15(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPlayerLUOInventoryItem.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerLUOInventoryItem RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_15(__arg0);
            var __result0 = global::NWN.LowLevel.CNWSPlayerLUOInventoryItem.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CNWSPlayerLUOInventoryItem Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CNWSPlayerLUOInventoryItem> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_15(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CNWSPlayerLUOInventoryItem.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this, global::NWN.LowLevel.CExoString Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_15(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this, global::NWN.LowLevel.CExoString Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_15(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this, global::NWN.LowLevel.CExoString Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_15(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this, global::NWN.LowLevel.CExoString Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_15(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoString GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_16(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoString GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_16(__arg0);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoString GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_16(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoString GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_16(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoString GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_16(__arg0);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoString RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_16(__arg0);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoString RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_16(__arg0);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoString Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CExoString> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_16(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoString.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this, global::NWN.LowLevel.CServerAIEventNode Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_16(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this, global::NWN.LowLevel.CServerAIEventNode Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_16(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this, global::NWN.LowLevel.CServerAIEventNode Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_16(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this, global::NWN.LowLevel.CServerAIEventNode Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_16(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CServerAIEventNode GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_17(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CServerAIEventNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CServerAIEventNode GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_17(__arg0);
            var __result0 = global::NWN.LowLevel.CServerAIEventNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CServerAIEventNode GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_17(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CServerAIEventNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CServerAIEventNode GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_17(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CServerAIEventNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CServerAIEventNode GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_17(__arg0);
            var __result0 = global::NWN.LowLevel.CServerAIEventNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CServerAIEventNode RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_17(__arg0);
            var __result0 = global::NWN.LowLevel.CServerAIEventNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CServerAIEventNode RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_17(__arg0);
            var __result0 = global::NWN.LowLevel.CServerAIEventNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CServerAIEventNode Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.CServerAIEventNode> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_17(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CServerAIEventNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this, global::NWN.LowLevel.C2DA Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddHead_17(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this, global::NWN.LowLevel.C2DA Object)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __ret = __Internal.AddTail_17(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddAfter(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this, global::NWN.LowLevel.C2DA Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddAfter_17(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.CExoLinkedListNode AddBefore(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this, global::NWN.LowLevel.C2DA Object, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Object is null ? __IntPtr.Zero : Object.__Instance;
            var __arg2 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.AddBefore_17(__arg0, __arg1, __arg2);
            var __result0 = global::NWN.LowLevel.CExoLinkedListNode.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::NWN.LowLevel.C2DA GetAtPos(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.GetAtPos_18(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.C2DA.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.C2DA GetHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetHead_18(__arg0);
            var __result0 = global::NWN.LowLevel.C2DA.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.C2DA GetNext(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetNext_18(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.C2DA.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.C2DA GetPrev(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            if (ReferenceEquals(Position, null))
                throw new global::System.ArgumentNullException("Position", "Cannot be null because it is a C++ reference (&).");
            var ____arg1 = Position.__Instance;
            var __arg1 = new __IntPtr(&____arg1);
            var __ret = __Internal.GetPrev_18(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.C2DA.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.C2DA GetTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.GetTail_18(__arg0);
            var __result0 = global::NWN.LowLevel.C2DA.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.C2DA RemoveHead(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveHead_18(__arg0);
            var __result0 = global::NWN.LowLevel.C2DA.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.C2DA RemoveTail(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __ret = __Internal.RemoveTail_18(__arg0);
            var __result0 = global::NWN.LowLevel.C2DA.__GetOrCreateInstance(__ret, true);
            return __result0;
        }

        public static global::NWN.LowLevel.C2DA Remove(this global::NWN.LowLevel.CExoLinkedList<global::NWN.LowLevel.C2DA> @this, global::NWN.LowLevel.CExoLinkedListNode Position)
        {
            var __arg0 = @this is null ? __IntPtr.Zero : @this.__Instance;
            var __arg1 = Position is null ? __IntPtr.Zero : Position.__Instance;
            var __ret = __Internal.Remove_18(__arg0, __arg1);
            var __result0 = global::NWN.LowLevel.C2DA.__GetOrCreateInstance(__ret, true);
            return __result0;
        }
    }
}

namespace Std
{
    namespace Pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 80)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__S_CExoString___S_CNWSScriptVar
        {
            [FieldOffset(0)]
            internal global::NWN.LowLevel.CExoString.__Internal first;

            [FieldOffset(16)]
            internal global::NWN.LowLevel.CNWSScriptVar.__Internal second;
        }

        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S_pair__1__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C___S_CachedRulesetEntry
        {
            [FieldOffset(0)]
            internal global::Std.BasicString.__Internalc__N_std_N___cxx11_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C first;

            [FieldOffset(32)]
            internal global::NWN.LowLevel.CachedRulesetEntry.__Internal second;
        }
    }

}
namespace Std
{
    namespace Hashtable
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public unsafe partial struct __Internalc__N_std_S__Hashtable____S_CExoString___N_std_S_pair__1S0____S_CNWSScriptVar___N_std_S_allocator__S1____N_std_N___detail_S__Select1st___N_std_S_equal_to__S0____N_std_S_hash__S0____N_std_N___detail_S__Mod_range_hashing___N_std_N___detail_S__Default_ranged_hash___N_std_N___detail_S__Prime_rehash_policy___N_std_N___detail_S__Hashtable_traits__Vb1_Vb0_Vb1
        {
            [FieldOffset(0)]
            internal __IntPtr _M_buckets;

            [FieldOffset(8)]
            internal ulong _M_bucket_count;

            [FieldOffset(16)]
            internal global::Std.Detail.HashNodeBase.__Internal _M_before_begin;

            [FieldOffset(24)]
            internal ulong _M_element_count;

            [FieldOffset(32)]
            internal global::Std.Detail.PrimeRehashPolicy.__Internal _M_rehash_policy;

            [FieldOffset(48)]
            internal __IntPtr _M_single_bucket;
        }
    }
}
